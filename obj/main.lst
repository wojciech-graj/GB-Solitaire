                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _pile_append_cursor_stack
                                     13 	.globl _dynamic_metasprite_fold
                                     14 	.globl _dynamic_metasprite_fold_callback
                                     15 	.globl _dynamic_metasprite_move_stack_callback
                                     16 	.globl _dynamic_metasprite_unfold_callback
                                     17 	.globl _set_metasprite_card
                                     18 	.globl _dynamic_metasprite_deal
                                     19 	.globl _dynamic_metasprite_deal_callback
                                     20 	.globl _cursor_adjust_height
                                     21 	.globl _draw_background
                                     22 	.globl _draw_sequential_card
                                     23 	.globl _draw_pile
                                     24 	.globl _draw_card_bottom
                                     25 	.globl _draw_card_top
                                     26 	.globl _init_deck
                                     27 	.globl _metasprite_2x3_hide
                                     28 	.globl _rand
                                     29 	.globl _initrand
                                     30 	.globl _set_sprite_data
                                     31 	.globl _set_bkg_tile_xy
                                     32 	.globl _set_bkg_data
                                     33 	.globl _wait_vbl_done
                                     34 	.globl _joypad
                                     35 	.globl _cursor
                                     36 	.globl _dynamic_metasprite
                                     37 	.globl _score
                                     38 	.globl _flags
                                     39 	.globl _top_card_idx
                                     40 	.globl _piles
                                     41 	.globl _deck
                                     42 ;--------------------------------------------------------
                                     43 ; special function registers
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _DATA
      000000                         49 _deck::
      000000                         50 	.ds 312
      000138                         51 _piles::
      000138                         52 	.ds 50
      00016A                         53 _top_card_idx::
      00016A                         54 	.ds 1
      00016B                         55 _flags::
      00016B                         56 	.ds 1
      00016C                         57 _score::
      00016C                         58 	.ds 2
      00016E                         59 _dynamic_metasprite::
      00016E                         60 	.ds 20
      000182                         61 _cursor::
      000182                         62 	.ds 10
      00018C                         63 _input_process_prev_input_65536_215:
      00018C                         64 	.ds 1
      00018D                         65 _main_prev_input_327680_269:
      00018D                         66 	.ds 1
                                     67 ;--------------------------------------------------------
                                     68 ; absolute external ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area _DABS (ABS)
                                     71 ;--------------------------------------------------------
                                     72 ; global & static initialisations
                                     73 ;--------------------------------------------------------
                                     74 	.area _HOME
                                     75 	.area _GSINIT
                                     76 	.area _GSFINAL
                                     77 	.area _GSINIT
                                     78 ;src/main.c:505: static UINT8 prev_input = 0;
      000000 21r8Cr01                79 	ld	hl, #_input_process_prev_input_65536_215
      000003 36 00                   80 	ld	(hl), #0x00
      000005 21r8Dr01                81 	ld	hl, #_main_prev_input_327680_269
      000008 36 00                   82 	ld	(hl), #0x00
                                     83 ;src/main.c:115: UINT8 flags = 0;
      00000A 21r6Br01                84 	ld	hl, #_flags
      00000D 36 00                   85 	ld	(hl), #0x00
                                     86 ;src/main.c:117: UINT16 score = 500;
      00000F 21r6Cr01                87 	ld	hl, #_score
      000012 36 F4                   88 	ld	(hl), #0xf4
      000014 23                      89 	inc	hl
      000015 36 01                   90 	ld	(hl), #0x01
                                     91 ;src/main.c:119: DynamicMetaSprite dynamic_metasprite = {
      000017 21r76r01                92 	ld	hl, #(_dynamic_metasprite + 0x0008)
      00001A 36 FF                   93 	ld	(hl), #0xff
      00001C 21r77r01                94 	ld	hl, #(_dynamic_metasprite + 0x0009)
      00001F 36 00                   95 	ld	(hl), #0x00
                                     96 ;src/main.c:124: Cursor cursor = {
      000021 21r82r01                97 	ld	hl, #_cursor
      000024 AF                      98 	xor	a, a
      000025 22                      99 	ld	(hl+), a
      000026 77                     100 	ld	(hl), a
      000027 21r84r01               101 	ld	hl, #(_cursor + 0x0002)
      00002A AF                     102 	xor	a, a
      00002B 22                     103 	ld	(hl+), a
      00002C 77                     104 	ld	(hl), a
      00002D 21r87r01               105 	ld	hl, #(_cursor + 0x0005)
      000030 36 00                  106 	ld	(hl), #0x00
      000032 21r88r01               107 	ld	hl, #(_cursor + 0x0006)
      000035 36 0A                  108 	ld	(hl), #0x0a
      000037 21r89r01               109 	ld	hl, #(_cursor + 0x0007)
      00003A 36 00                  110 	ld	(hl), #0x00
      00003C 21r8Ar01               111 	ld	hl, #(_cursor + 0x0008)
      00003F 36 00                  112 	ld	(hl), #0x00
      000041 21r8Br01               113 	ld	hl, #(_cursor + 0x0009)
      000044 36 00                  114 	ld	(hl), #0x00
                                    115 ;--------------------------------------------------------
                                    116 ; Home
                                    117 ;--------------------------------------------------------
                                    118 	.area _HOME
                                    119 	.area _HOME
                                    120 ;--------------------------------------------------------
                                    121 ; code
                                    122 ;--------------------------------------------------------
                                    123 	.area _CODE
                                    124 ;src/main.c:134: void metasprite_2x3_hide(UINT8 sprite)
                                    125 ;	---------------------------------
                                    126 ; Function metasprite_2x3_hide
                                    127 ; ---------------------------------
      000000                        128 _metasprite_2x3_hide::
                                    129 ;src/main.c:141: );
      000000 F8 02                  130 	ldhl	sp,	#2
      000002 46                     131 	ld	b, (hl)
                                    132 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000003 21r00r00               133 	ld	hl, #___current_metasprite
      000006 36r00                  134 	ld	(hl), #<(_metasprite_same_2x3)
      000008 23                     135 	inc	hl
      000009 36s00                  136 	ld	(hl), #>(_metasprite_same_2x3)
                                    137 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      00000B 21r00r00               138 	ld	hl, #___current_base_tile
      00000E 36 00                  139 	ld	(hl), #0x00
                                    140 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000010 AF                     141 	xor	a, a
      000011 F5                     142 	push	af
      000012 33                     143 	inc	sp
      000013 AF                     144 	xor	a, a
      000014 F5                     145 	push	af
      000015 33                     146 	inc	sp
      000016 C5                     147 	push	bc
      000017 33                     148 	inc	sp
      000018 CDr00r00               149 	call	___move_metasprite
      00001B E8 03                  150 	add	sp, #3
                                    151 ;src/main.c:141: );
                                    152 ;src/main.c:142: }
      00001D C9                     153 	ret
                                    154 ;src/main.c:145: void init_deck(void)
                                    155 ;	---------------------------------
                                    156 ; Function init_deck
                                    157 ; ---------------------------------
      00001E                        158 _init_deck::
      00001E E8 F0                  159 	add	sp, #-16
                                    160 ;src/main.c:147: Card *card = IDX_PTR(deck, 0);
      000020 01r00r00               161 	ld	bc, #_deck
                                    162 ;src/main.c:152: for (suit = 0; suit < 4u; suit++) {
      000023 AF                     163 	xor	a, a
      000024 F8 0B                  164 	ldhl	sp,	#11
      000026 77                     165 	ld	(hl), a
                                    166 ;src/main.c:153: for (rank = 0; rank < 13u; rank++) {
      000027                        167 00131$:
      000027 F8 0B                  168 	ldhl	sp,	#11
      000029 7E                     169 	ld	a, (hl)
      00002A CB 37                  170 	swap	a
      00002C E6 F0                  171 	and	a, #0xf0
      00002E F8 07                  172 	ldhl	sp,	#7
      000030 77                     173 	ld	(hl), a
      000031 AF                     174 	xor	a, a
      000032 F8 0C                  175 	ldhl	sp,	#12
      000034 77                     176 	ld	(hl), a
                                    177 ;src/main.c:154: for (i = 0; i < 2u; i++) {
      000035                        178 00129$:
      000035 F8 0C                  179 	ldhl	sp,	#12
      000037 7E                     180 	ld	a, (hl)
      000038 F8 07                  181 	ldhl	sp,	#7
      00003A B6                     182 	or	a, (hl)
      00003B 23                     183 	inc	hl
      00003C 77                     184 	ld	(hl), a
      00003D F8 0D                  185 	ldhl	sp,	#13
      00003F 79                     186 	ld	a, c
      000040 22                     187 	ld	(hl+), a
      000041 78                     188 	ld	a, b
      000042 22                     189 	ld	(hl+), a
      000043 36 02                  190 	ld	(hl), #0x02
      000045                        191 00113$:
                                    192 ;src/main.c:155: card->data = rank | (suit << BIT_OFFSET_DATA_SUIT);
                                    193 ;c
      000045 F8 0D                  194 	ldhl	sp,#13
      000047 2A                     195 	ld	a, (hl+)
      000048 5F                     196 	ld	e, a
      000049 56                     197 	ld	d, (hl)
      00004A 21 02 00               198 	ld	hl, #0x0002
      00004D 19                     199 	add	hl, de
      00004E E5                     200 	push	hl
      00004F 7D                     201 	ld	a, l
      000050 F8 0B                  202 	ldhl	sp,	#11
      000052 77                     203 	ld	(hl), a
      000053 E1                     204 	pop	hl
      000054 7C                     205 	ld	a, h
      000055 F8 0A                  206 	ldhl	sp,	#10
      000057 32                     207 	ld	(hl-), a
      000058 2A                     208 	ld	a, (hl+)
      000059 5F                     209 	ld	e, a
      00005A 3A                     210 	ld	a, (hl-)
      00005B 57                     211 	ld	d, a
      00005C 2B                     212 	dec	hl
      00005D 7E                     213 	ld	a, (hl)
      00005E 12                     214 	ld	(de), a
                                    215 ;src/main.c:156: card++;
                                    216 ;c
      00005F F8 0D                  217 	ldhl	sp,#13
      000061 2A                     218 	ld	a, (hl+)
      000062 5F                     219 	ld	e, a
      000063 56                     220 	ld	d, (hl)
      000064 21 03 00               221 	ld	hl, #0x0003
      000067 19                     222 	add	hl, de
      000068 E5                     223 	push	hl
      000069 7D                     224 	ld	a, l
      00006A F8 0F                  225 	ldhl	sp,	#15
      00006C 77                     226 	ld	(hl), a
      00006D E1                     227 	pop	hl
      00006E 7C                     228 	ld	a, h
      00006F F8 0E                  229 	ldhl	sp,	#14
      000071 22                     230 	ld	(hl+), a
                                    231 ;src/main.c:154: for (i = 0; i < 2u; i++) {
      000072 35                     232 	dec	(hl)
      000073 20 D0                  233 	jr	NZ, 00113$
                                    234 ;src/main.c:153: for (rank = 0; rank < 13u; rank++) {
      000075 2B                     235 	dec	hl
      000076 2B                     236 	dec	hl
      000077 2A                     237 	ld	a, (hl+)
      000078 4F                     238 	ld	c, a
      000079 3A                     239 	ld	a, (hl-)
      00007A 47                     240 	ld	b, a
      00007B 2B                     241 	dec	hl
      00007C 34                     242 	inc	(hl)
      00007D 7E                     243 	ld	a, (hl)
      00007E D6 0D                  244 	sub	a, #0x0d
      000080 38 B3                  245 	jr	C, 00129$
                                    246 ;src/main.c:152: for (suit = 0; suit < 4u; suit++) {
      000082 2B                     247 	dec	hl
      000083 34                     248 	inc	(hl)
      000084 7E                     249 	ld	a, (hl)
      000085 D6 04                  250 	sub	a, #0x04
      000087 38 9E                  251 	jr	C, 00131$
                                    252 ;src/main.c:161: card = IDX_PTR(deck, 103u);
      000089 23                     253 	inc	hl
      00008A 23                     254 	inc	hl
      00008B 3Er35                  255 	ld	a, #<((_deck + 0x0135))
      00008D 22                     256 	ld	(hl+), a
      00008E 36s01                  257 	ld	(hl), #>((_deck + 0x0135))
                                    258 ;src/main.c:162: for (i = 103u; i; i--) {
      000090 F8 02                  259 	ldhl	sp,	#2
      000092 7D                     260 	ld	a, l
      000093 54                     261 	ld	d, h
      000094 F8 07                  262 	ldhl	sp,	#7
      000096 22                     263 	ld	(hl+), a
      000097 7A                     264 	ld	a, d
      000098 32                     265 	ld	(hl-), a
      000099 2A                     266 	ld	a, (hl+)
      00009A 5E                     267 	ld	e, (hl)
      00009B 23                     268 	inc	hl
      00009C 22                     269 	ld	(hl+), a
      00009D 73                     270 	ld	(hl), e
      00009E F8 0F                  271 	ldhl	sp,	#15
      0000A0 36 67                  272 	ld	(hl), #0x67
      0000A2                        273 00118$:
                                    274 ;src/main.c:163: Card *swap = IDX_PTR(deck, (UINT8)rand() % i);
      0000A2 CDr00r00               275 	call	_rand
      0000A5 7B                     276 	ld	a, e
      0000A6 F8 0F                  277 	ldhl	sp,	#15
      0000A8 66                     278 	ld	h, (hl)
      0000A9 E5                     279 	push	hl
      0000AA 33                     280 	inc	sp
      0000AB F5                     281 	push	af
      0000AC 33                     282 	inc	sp
      0000AD CDr00r00               283 	call	__moduchar
      0000B0 E8 02                  284 	add	sp, #2
      0000B2 4B                     285 	ld	c, e
      0000B3 06 00                  286 	ld	b, #0x00
      0000B5 69                     287 	ld	l, c
      0000B6 60                     288 	ld	h, b
      0000B7 29                     289 	add	hl, hl
      0000B8 09                     290 	add	hl, bc
      0000B9 7D                     291 	ld	a, l
      0000BA C6r00                  292 	add	a, #<(_deck)
      0000BC 4F                     293 	ld	c, a
      0000BD 7C                     294 	ld	a, h
      0000BE CEs00                  295 	adc	a, #>(_deck)
      0000C0 47                     296 	ld	b, a
      0000C1 F8 0B                  297 	ldhl	sp,	#11
      0000C3 79                     298 	ld	a, c
      0000C4 22                     299 	ld	(hl+), a
                                    300 ;src/main.c:165: temp = *card;
      0000C5 78                     301 	ld	a, b
      0000C6 22                     302 	ld	(hl+), a
      0000C7 2A                     303 	ld	a, (hl+)
      0000C8 5F                     304 	ld	e, a
      0000C9 56                     305 	ld	d, (hl)
      0000CA F8 07                  306 	ldhl	sp,#7
      0000CC 2A                     307 	ld	a, (hl+)
      0000CD 4F                     308 	ld	c, a
      0000CE 46                     309 	ld	b, (hl)
      0000CF 21 03 00               310 	ld	hl, #0x0003
      0000D2 E5                     311 	push	hl
      0000D3 D5                     312 	push	de
      0000D4 C5                     313 	push	bc
      0000D5 CDr00r00               314 	call	___memcpy
      0000D8 E8 06                  315 	add	sp, #6
                                    316 ;src/main.c:166: *card = *swap;
      0000DA F8 0B                  317 	ldhl	sp,#11
      0000DC 2A                     318 	ld	a, (hl+)
      0000DD 5F                     319 	ld	e, a
      0000DE 2A                     320 	ld	a, (hl+)
      0000DF 57                     321 	ld	d, a
      0000E0 2A                     322 	ld	a, (hl+)
      0000E1 4F                     323 	ld	c, a
      0000E2 46                     324 	ld	b, (hl)
      0000E3 21 03 00               325 	ld	hl, #0x0003
      0000E6 E5                     326 	push	hl
      0000E7 D5                     327 	push	de
      0000E8 C5                     328 	push	bc
      0000E9 CDr00r00               329 	call	___memcpy
      0000EC E8 06                  330 	add	sp, #6
                                    331 ;src/main.c:167: *swap = temp;
      0000EE F8 09                  332 	ldhl	sp,#9
      0000F0 2A                     333 	ld	a, (hl+)
      0000F1 5F                     334 	ld	e, a
      0000F2 2A                     335 	ld	a, (hl+)
      0000F3 57                     336 	ld	d, a
      0000F4 2A                     337 	ld	a, (hl+)
      0000F5 4F                     338 	ld	c, a
      0000F6 46                     339 	ld	b, (hl)
      0000F7 21 03 00               340 	ld	hl, #0x0003
      0000FA E5                     341 	push	hl
      0000FB D5                     342 	push	de
      0000FC C5                     343 	push	bc
      0000FD CDr00r00               344 	call	___memcpy
      000100 E8 06                  345 	add	sp, #6
                                    346 ;src/main.c:168: card--;
      000102 F8 0D                  347 	ldhl	sp,#13
      000104 2A                     348 	ld	a, (hl+)
      000105 5F                     349 	ld	e, a
      000106 56                     350 	ld	d, (hl)
      000107 21 03 00               351 	ld	hl, #0x0003
      00010A 7B                     352 	ld	a, e
      00010B 95                     353 	sub	a, l
      00010C 5F                     354 	ld	e, a
      00010D 7A                     355 	ld	a, d
      00010E 9C                     356 	sbc	a, h
      00010F F8 0E                  357 	ldhl	sp,	#14
      000111 32                     358 	ld	(hl-), a
                                    359 ;src/main.c:162: for (i = 103u; i; i--) {
      000112 7B                     360 	ld	a, e
      000113 22                     361 	ld	(hl+), a
      000114 23                     362 	inc	hl
      000115 35                     363 	dec	(hl)
      000116 20 8A                  364 	jr	NZ, 00118$
                                    365 ;src/main.c:171: card = IDX_PTR(deck, 0);
      000118 01r00r00               366 	ld	bc, #_deck
                                    367 ;src/main.c:172: for (i = 0; i < 44u; i++) {
      00011B AF                     368 	xor	a, a
      00011C 77                     369 	ld	(hl), a
      00011D                        370 00120$:
                                    371 ;src/main.c:173: card->next_card = IDX_PTR(deck, i + 10u);
      00011D F8 0F                  372 	ldhl	sp,	#15
      00011F 5E                     373 	ld	e, (hl)
      000120 16 00                  374 	ld	d, #0x00
      000122 6B                     375 	ld	l, e
      000123 62                     376 	ld	h, d
      000124 29                     377 	add	hl, hl
      000125 19                     378 	add	hl, de
      000126 11r00r00               379 	ld	de, #_deck
      000129 19                     380 	add	hl, de
      00012A 11 1E 00               381 	ld	de, #0x001e
      00012D 19                     382 	add	hl, de
      00012E 5D                     383 	ld	e, l
      00012F 54                     384 	ld	d, h
      000130 69                     385 	ld	l, c
      000131 60                     386 	ld	h, b
      000132 7B                     387 	ld	a, e
      000133 22                     388 	ld	(hl+), a
      000134 72                     389 	ld	(hl), d
                                    390 ;src/main.c:174: card++;
      000135 03                     391 	inc	bc
      000136 03                     392 	inc	bc
      000137 03                     393 	inc	bc
                                    394 ;src/main.c:172: for (i = 0; i < 44u; i++) {
      000138 F8 0F                  395 	ldhl	sp,	#15
      00013A 34                     396 	inc	(hl)
      00013B 7E                     397 	ld	a, (hl)
      00013C D6 2C                  398 	sub	a, #0x2c
      00013E 38 DD                  399 	jr	C, 00120$
      000140 5E                     400 	ld	e, (hl)
      000141                        401 00123$:
                                    402 ;src/main.c:176: for (; i < 104u; i++) {
      000141 7B                     403 	ld	a, e
      000142 D6 68                  404 	sub	a, #0x68
      000144 30 11                  405 	jr	NC, 00106$
                                    406 ;src/main.c:177: card->data |= BITMASK_DATA_VISIBLE;
      000146 69                     407 	ld	l, c
      000147 60                     408 	ld	h, b
      000148 23                     409 	inc	hl
      000149 23                     410 	inc	hl
      00014A CB F6                  411 	set	6, (hl)
                                    412 ;src/main.c:178: card->next_card = NULL;
      00014C 69                     413 	ld	l, c
      00014D 60                     414 	ld	h, b
      00014E AF                     415 	xor	a, a
      00014F 22                     416 	ld	(hl+), a
      000150 77                     417 	ld	(hl), a
                                    418 ;src/main.c:179: card++;
      000151 03                     419 	inc	bc
      000152 03                     420 	inc	bc
      000153 03                     421 	inc	bc
                                    422 ;src/main.c:176: for (; i < 104u; i++) {
      000154 1C                     423 	inc	e
      000155 18 EA                  424 	jr	00123$
      000157                        425 00106$:
                                    426 ;src/main.c:182: card = IDX_PTR(deck, 0);
      000157 F8 0B                  427 	ldhl	sp,	#11
      000159 3Er00                  428 	ld	a, #<(_deck)
      00015B 22                     429 	ld	(hl+), a
                                    430 ;src/main.c:183: Pile *pile = IDX_PTR(piles, 0);
      00015C 3Es00                  431 	ld	a, #>(_deck)
      00015E 22                     432 	ld	(hl+), a
      00015F 3Er38                  433 	ld	a, #<(_piles)
      000161 22                     434 	ld	(hl+), a
      000162 36s01                  435 	ld	(hl), #>(_piles)
                                    436 ;src/main.c:184: for (i = 0; i < 10; i++) {
      000164 AF                     437 	xor	a, a
      000165 23                     438 	inc	hl
      000166 77                     439 	ld	(hl), a
      000167                        440 00125$:
                                    441 ;src/main.c:185: pile->base = card;
      000167 F8 0D                  442 	ldhl	sp,#13
      000169 2A                     443 	ld	a, (hl+)
      00016A 5F                     444 	ld	e, a
      00016B 56                     445 	ld	d, (hl)
      00016C F8 0B                  446 	ldhl	sp,	#11
      00016E 7E                     447 	ld	a, (hl)
      00016F 12                     448 	ld	(de), a
      000170 13                     449 	inc	de
      000171 23                     450 	inc	hl
      000172 7E                     451 	ld	a, (hl)
      000173 12                     452 	ld	(de), a
                                    453 ;src/main.c:187: pile->top = IDX_PTR(deck, 50u + i);
                                    454 ;c
      000174 23                     455 	inc	hl
      000175 2A                     456 	ld	a, (hl+)
      000176 5F                     457 	ld	e, a
      000177 56                     458 	ld	d, (hl)
      000178 21 02 00               459 	ld	hl, #0x0002
      00017B 19                     460 	add	hl, de
      00017C E5                     461 	push	hl
      00017D 7D                     462 	ld	a, l
      00017E F8 07                  463 	ldhl	sp,	#7
      000180 77                     464 	ld	(hl), a
      000181 E1                     465 	pop	hl
      000182 7C                     466 	ld	a, h
      000183 F8 06                  467 	ldhl	sp,	#6
      000185 77                     468 	ld	(hl), a
      000186 F8 0F                  469 	ldhl	sp,	#15
      000188 4E                     470 	ld	c, (hl)
      000189 06 00                  471 	ld	b, #0x00
      00018B 69                     472 	ld	l, c
      00018C 60                     473 	ld	h, b
      00018D 29                     474 	add	hl, hl
      00018E 09                     475 	add	hl, bc
      00018F 33                     476 	inc	sp
      000190 33                     477 	inc	sp
      000191 E5                     478 	push	hl
                                    479 ;src/main.c:188: pile->height = 5u;
                                    480 ;c
      000192 F8 0D                  481 	ldhl	sp,#13
      000194 2A                     482 	ld	a, (hl+)
      000195 5F                     483 	ld	e, a
      000196 56                     484 	ld	d, (hl)
      000197 21 04 00               485 	ld	hl, #0x0004
      00019A 19                     486 	add	hl, de
      00019B E5                     487 	push	hl
      00019C 7D                     488 	ld	a, l
      00019D F8 09                  489 	ldhl	sp,	#9
      00019F 77                     490 	ld	(hl), a
      0001A0 E1                     491 	pop	hl
      0001A1 7C                     492 	ld	a, h
      0001A2 F8 08                  493 	ldhl	sp,	#8
      0001A4 77                     494 	ld	(hl), a
                                    495 ;src/main.c:186: if (i < 4u) {
      0001A5 F8 0F                  496 	ldhl	sp,	#15
      0001A7 7E                     497 	ld	a, (hl)
      0001A8 D6 04                  498 	sub	a, #0x04
      0001AA 30 26                  499 	jr	NC, 00108$
                                    500 ;src/main.c:187: pile->top = IDX_PTR(deck, 50u + i);
                                    501 ;c
      0001AC D1                     502 	pop	de
      0001AD D5                     503 	push	de
      0001AE 21r96r00               504 	ld	hl, #(_deck + 0x0096)
      0001B1 19                     505 	add	hl, de
      0001B2 E5                     506 	push	hl
      0001B3 7D                     507 	ld	a, l
      0001B4 F8 0B                  508 	ldhl	sp,	#11
      0001B6 77                     509 	ld	(hl), a
      0001B7 E1                     510 	pop	hl
      0001B8 7C                     511 	ld	a, h
      0001B9 F8 0A                  512 	ldhl	sp,	#10
      0001BB 77                     513 	ld	(hl), a
      0001BC F8 05                  514 	ldhl	sp,#5
      0001BE 2A                     515 	ld	a, (hl+)
      0001BF 5F                     516 	ld	e, a
      0001C0 56                     517 	ld	d, (hl)
      0001C1 F8 09                  518 	ldhl	sp,	#9
      0001C3 7E                     519 	ld	a, (hl)
      0001C4 12                     520 	ld	(de), a
      0001C5 13                     521 	inc	de
      0001C6 23                     522 	inc	hl
      0001C7 7E                     523 	ld	a, (hl)
      0001C8 12                     524 	ld	(de), a
                                    525 ;src/main.c:188: pile->height = 5u;
      0001C9 F8 07                  526 	ldhl	sp,	#7
      0001CB 2A                     527 	ld	a, (hl+)
      0001CC 66                     528 	ld	h, (hl)
      0001CD 6F                     529 	ld	l, a
      0001CE 36 05                  530 	ld	(hl), #0x05
      0001D0 18 17                  531 	jr	00109$
      0001D2                        532 00108$:
                                    533 ;src/main.c:190: pile->top = IDX_PTR(deck, 40u + i);
                                    534 ;c
      0001D2 11r78r00               535 	ld	de, #(_deck + 0x0078)
      0001D5 E1                     536 	pop	hl
      0001D6 E5                     537 	push	hl
      0001D7 19                     538 	add	hl, de
      0001D8 4D                     539 	ld	c, l
      0001D9 44                     540 	ld	b, h
      0001DA F8 05                  541 	ldhl	sp,	#5
      0001DC 2A                     542 	ld	a, (hl+)
      0001DD 66                     543 	ld	h, (hl)
      0001DE 6F                     544 	ld	l, a
      0001DF 79                     545 	ld	a, c
      0001E0 22                     546 	ld	(hl+), a
      0001E1 70                     547 	ld	(hl), b
                                    548 ;src/main.c:191: pile->height = 4u;
      0001E2 F8 07                  549 	ldhl	sp,	#7
      0001E4 2A                     550 	ld	a, (hl+)
      0001E5 66                     551 	ld	h, (hl)
      0001E6 6F                     552 	ld	l, a
      0001E7 36 04                  553 	ld	(hl), #0x04
      0001E9                        554 00109$:
                                    555 ;src/main.c:194: card++;
                                    556 ;c
      0001E9 F8 0B                  557 	ldhl	sp,#11
      0001EB 2A                     558 	ld	a, (hl+)
      0001EC 5F                     559 	ld	e, a
      0001ED 56                     560 	ld	d, (hl)
      0001EE 21 03 00               561 	ld	hl, #0x0003
      0001F1 19                     562 	add	hl, de
      0001F2 E5                     563 	push	hl
      0001F3 7D                     564 	ld	a, l
      0001F4 F8 0D                  565 	ldhl	sp,	#13
      0001F6 77                     566 	ld	(hl), a
      0001F7 E1                     567 	pop	hl
      0001F8 7C                     568 	ld	a, h
      0001F9 F8 0C                  569 	ldhl	sp,	#12
                                    570 ;src/main.c:195: pile++;
                                    571 ;c
      0001FB 22                     572 	ld	(hl+), a
      0001FC 2A                     573 	ld	a, (hl+)
      0001FD 5F                     574 	ld	e, a
      0001FE 56                     575 	ld	d, (hl)
      0001FF 21 05 00               576 	ld	hl, #0x0005
      000202 19                     577 	add	hl, de
      000203 E5                     578 	push	hl
      000204 7D                     579 	ld	a, l
      000205 F8 0F                  580 	ldhl	sp,	#15
      000207 77                     581 	ld	(hl), a
      000208 E1                     582 	pop	hl
      000209 7C                     583 	ld	a, h
      00020A F8 0E                  584 	ldhl	sp,	#14
                                    585 ;src/main.c:184: for (i = 0; i < 10; i++) {
      00020C 22                     586 	ld	(hl+), a
      00020D 34                     587 	inc	(hl)
      00020E 7E                     588 	ld	a, (hl)
      00020F D6 0A                  589 	sub	a, #0x0a
      000211 DAr67r01               590 	jp	C, 00125$
                                    591 ;src/main.c:198: top_card_idx = 54u;
      000214 21r6Ar01               592 	ld	hl, #_top_card_idx
      000217 36 36                  593 	ld	(hl), #0x36
                                    594 ;src/main.c:199: }
      000219 E8 10                  595 	add	sp, #16
      00021B C9                     596 	ret
                                    597 ;src/main.c:207: void draw_card_top(const UINT8 x, const UINT8 y, const UINT8 card_data)
                                    598 ;	---------------------------------
                                    599 ; Function draw_card_top
                                    600 ; ---------------------------------
      00021C                        601 _draw_card_top::
                                    602 ;src/main.c:209: if (VISIBLE(card_data)) {
      00021C F8 04                  603 	ldhl	sp,	#4
                                    604 ;src/main.c:211: set_bkg_tile_xy(x + 1u, y, SUIT(card_data) + OFFSET_BKG_SUIT);
      00021E 3A                     605 	ld	a, (hl-)
      00021F 4F                     606 	ld	c, a
      000220 2B                     607 	dec	hl
      000221 46                     608 	ld	b, (hl)
      000222 04                     609 	inc	b
                                    610 ;src/main.c:209: if (VISIBLE(card_data)) {
      000223 CB 71                  611 	bit	6, c
      000225 28 3E                  612 	jr	Z, 00102$
                                    613 ;src/main.c:210: set_bkg_tile_xy(x, y, RANK(card_data) + OFFSET_BKG_RANK);
      000227 79                     614 	ld	a, c
      000228 E6 0F                  615 	and	a, #0x0f
      00022A 3C                     616 	inc	a
      00022B F5                     617 	push	af
      00022C 33                     618 	inc	sp
      00022D F8 04                  619 	ldhl	sp,	#4
      00022F 7E                     620 	ld	a, (hl)
      000230 F5                     621 	push	af
      000231 33                     622 	inc	sp
      000232 2B                     623 	dec	hl
      000233 7E                     624 	ld	a, (hl)
      000234 F5                     625 	push	af
      000235 33                     626 	inc	sp
      000236 CDr00r00               627 	call	_set_bkg_tile_xy
      000239 E8 03                  628 	add	sp, #3
                                    629 ;src/main.c:211: set_bkg_tile_xy(x + 1u, y, SUIT(card_data) + OFFSET_BKG_SUIT);
      00023B 79                     630 	ld	a, c
      00023C 0E 00                  631 	ld	c, #0x00
      00023E E6 30                  632 	and	a, #0x30
      000240 5F                     633 	ld	e, a
      000241 16 00                  634 	ld	d, #0x00
      000243 CB 2A                  635 	sra	d
      000245 CB 1B                  636 	rr	e
      000247 CB 2A                  637 	sra	d
      000249 CB 1B                  638 	rr	e
      00024B CB 2A                  639 	sra	d
      00024D CB 1B                  640 	rr	e
      00024F CB 2A                  641 	sra	d
      000251 CB 1B                  642 	rr	e
      000253 7B                     643 	ld	a, e
      000254 C6 0E                  644 	add	a, #0x0e
      000256 F5                     645 	push	af
      000257 33                     646 	inc	sp
      000258 F8 04                  647 	ldhl	sp,	#4
      00025A 7E                     648 	ld	a, (hl)
      00025B F5                     649 	push	af
      00025C 33                     650 	inc	sp
      00025D C5                     651 	push	bc
      00025E 33                     652 	inc	sp
      00025F CDr00r00               653 	call	_set_bkg_tile_xy
      000262 E8 03                  654 	add	sp, #3
      000264 C9                     655 	ret
      000265                        656 00102$:
                                    657 ;src/main.c:213: set_bkg_tile_xy(x, y, OFFSET_BKG_BACK);
      000265 3E 18                  658 	ld	a, #0x18
      000267 F5                     659 	push	af
      000268 33                     660 	inc	sp
      000269 F8 04                  661 	ldhl	sp,	#4
      00026B 7E                     662 	ld	a, (hl)
      00026C F5                     663 	push	af
      00026D 33                     664 	inc	sp
      00026E 2B                     665 	dec	hl
      00026F 7E                     666 	ld	a, (hl)
      000270 F5                     667 	push	af
      000271 33                     668 	inc	sp
      000272 CDr00r00               669 	call	_set_bkg_tile_xy
      000275 E8 03                  670 	add	sp, #3
                                    671 ;src/main.c:214: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_BACK + 1u);
      000277 3E 19                  672 	ld	a, #0x19
      000279 F5                     673 	push	af
      00027A 33                     674 	inc	sp
      00027B F8 04                  675 	ldhl	sp,	#4
      00027D 7E                     676 	ld	a, (hl)
      00027E F5                     677 	push	af
      00027F 33                     678 	inc	sp
      000280 C5                     679 	push	bc
      000281 33                     680 	inc	sp
      000282 CDr00r00               681 	call	_set_bkg_tile_xy
      000285 E8 03                  682 	add	sp, #3
                                    683 ;src/main.c:216: }
      000287 C9                     684 	ret
                                    685 ;src/main.c:218: void draw_card_bottom(const UINT8 x, const UINT8 y, const UINT8 card_data)
                                    686 ;	---------------------------------
                                    687 ; Function draw_card_bottom
                                    688 ; ---------------------------------
      000288                        689 _draw_card_bottom::
                                    690 ;src/main.c:220: set_bkg_tile_xy(x, y, OFFSET_BKG_BLANK + 2u);
      000288 3E 14                  691 	ld	a, #0x14
      00028A F5                     692 	push	af
      00028B 33                     693 	inc	sp
      00028C F8 04                  694 	ldhl	sp,	#4
      00028E 7E                     695 	ld	a, (hl)
      00028F F5                     696 	push	af
      000290 33                     697 	inc	sp
      000291 2B                     698 	dec	hl
      000292 7E                     699 	ld	a, (hl)
      000293 F5                     700 	push	af
      000294 33                     701 	inc	sp
      000295 CDr00r00               702 	call	_set_bkg_tile_xy
      000298 E8 03                  703 	add	sp, #3
                                    704 ;src/main.c:221: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_BLANK + 3u);
      00029A F8 02                  705 	ldhl	sp,	#2
      00029C 4E                     706 	ld	c, (hl)
      00029D 0C                     707 	inc	c
      00029E 3E 15                  708 	ld	a, #0x15
      0002A0 F5                     709 	push	af
      0002A1 33                     710 	inc	sp
      0002A2 23                     711 	inc	hl
      0002A3 46                     712 	ld	b, (hl)
      0002A4 C5                     713 	push	bc
      0002A5 CDr00r00               714 	call	_set_bkg_tile_xy
      0002A8 E8 03                  715 	add	sp, #3
                                    716 ;src/main.c:222: set_bkg_tile_xy(x, y+ 1u, SUIT(card_data) + OFFSET_BKG_SUIT_ROT);
      0002AA F8 04                  717 	ldhl	sp,	#4
      0002AC 7E                     718 	ld	a, (hl)
      0002AD E6 30                  719 	and	a, #0x30
      0002AF 5F                     720 	ld	e, a
      0002B0 16 00                  721 	ld	d, #0x00
      0002B2 CB 2A                  722 	sra	d
      0002B4 CB 1B                  723 	rr	e
      0002B6 CB 2A                  724 	sra	d
      0002B8 CB 1B                  725 	rr	e
      0002BA CB 2A                  726 	sra	d
      0002BC CB 1B                  727 	rr	e
      0002BE CB 2A                  728 	sra	d
      0002C0 CB 1B                  729 	rr	e
      0002C2 7B                     730 	ld	a, e
      0002C3 C6 2B                  731 	add	a, #0x2b
      0002C5 2B                     732 	dec	hl
      0002C6 46                     733 	ld	b, (hl)
      0002C7 04                     734 	inc	b
      0002C8 F5                     735 	push	af
      0002C9 33                     736 	inc	sp
      0002CA C5                     737 	push	bc
      0002CB 33                     738 	inc	sp
      0002CC 2B                     739 	dec	hl
      0002CD 7E                     740 	ld	a, (hl)
      0002CE F5                     741 	push	af
      0002CF 33                     742 	inc	sp
      0002D0 CDr00r00               743 	call	_set_bkg_tile_xy
      0002D3 E8 03                  744 	add	sp, #3
                                    745 ;src/main.c:223: set_bkg_tile_xy(x + 1u, y+ 1u, RANK(card_data) + OFFSET_BKG_RANK_ROT);
      0002D5 F8 04                  746 	ldhl	sp,	#4
      0002D7 7E                     747 	ld	a, (hl)
      0002D8 E6 0F                  748 	and	a, #0x0f
      0002DA C6 1E                  749 	add	a, #0x1e
      0002DC F5                     750 	push	af
      0002DD 33                     751 	inc	sp
      0002DE C5                     752 	push	bc
      0002DF CDr00r00               753 	call	_set_bkg_tile_xy
      0002E2 E8 03                  754 	add	sp, #3
                                    755 ;src/main.c:224: }
      0002E4 C9                     756 	ret
                                    757 ;src/main.c:232: void draw_pile(Card *card, UINT8 pile_idx, UINT8 height)
                                    758 ;	---------------------------------
                                    759 ; Function draw_pile
                                    760 ; ---------------------------------
      0002E5                        761 _draw_pile::
      0002E5 E8 FD                  762 	add	sp, #-3
                                    763 ;src/main.c:234: pile_idx <<= 1;
      0002E7 F8 07                  764 	ldhl	sp,	#7
      0002E9 7E                     765 	ld	a, (hl)
      0002EA 87                     766 	add	a, a
                                    767 ;src/main.c:235: height += SCOREBAR_HEIGHT;
      0002EB 22                     768 	ld	(hl+), a
      0002EC 34                     769 	inc	(hl)
      0002ED 34                     770 	inc	(hl)
      0002EE 34                     771 	inc	(hl)
                                    772 ;src/main.c:236: while (1) {
      0002EF 7E                     773 	ld	a, (hl)
      0002F0 F8 00                  774 	ldhl	sp,	#0
      0002F2 77                     775 	ld	(hl), a
      0002F3                        776 00104$:
                                    777 ;src/main.c:237: draw_card_top(pile_idx, height, card->data);
      0002F3 F8 05                  778 	ldhl	sp,	#5
      0002F5 2A                     779 	ld	a, (hl+)
      0002F6 5E                     780 	ld	e, (hl)
      0002F7 F8 01                  781 	ldhl	sp,	#1
      0002F9 22                     782 	ld	(hl+), a
      0002FA 7B                     783 	ld	a, e
      0002FB 32                     784 	ld	(hl-), a
      0002FC 2A                     785 	ld	a, (hl+)
      0002FD 4F                     786 	ld	c, a
      0002FE 46                     787 	ld	b, (hl)
      0002FF 03                     788 	inc	bc
      000300 03                     789 	inc	bc
      000301 0A                     790 	ld	a, (bc)
      000302 C5                     791 	push	bc
      000303 F5                     792 	push	af
      000304 33                     793 	inc	sp
      000305 2B                     794 	dec	hl
      000306 2B                     795 	dec	hl
      000307 7E                     796 	ld	a, (hl)
      000308 F5                     797 	push	af
      000309 33                     798 	inc	sp
      00030A F8 0B                  799 	ldhl	sp,	#11
      00030C 7E                     800 	ld	a, (hl)
      00030D F5                     801 	push	af
      00030E 33                     802 	inc	sp
      00030F CDr1Cr02               803 	call	_draw_card_top
      000312 E8 03                  804 	add	sp, #3
      000314 C1                     805 	pop	bc
                                    806 ;src/main.c:238: if (!card->next_card) {
      000315 F8 01                  807 	ldhl	sp,#1
      000317 2A                     808 	ld	a, (hl+)
      000318 5F                     809 	ld	e, a
      000319 56                     810 	ld	d, (hl)
      00031A 1A                     811 	ld	a, (de)
      00031B 2B                     812 	dec	hl
      00031C 22                     813 	ld	(hl+), a
      00031D 13                     814 	inc	de
      00031E 1A                     815 	ld	a, (de)
                                    816 ;src/main.c:239: draw_card_bottom(pile_idx, height + 1u, card->data);
      00031F 32                     817 	ld	(hl-), a
      000320 2B                     818 	dec	hl
      000321 56                     819 	ld	d, (hl)
      000322 14                     820 	inc	d
                                    821 ;src/main.c:238: if (!card->next_card) {
      000323 23                     822 	inc	hl
      000324 23                     823 	inc	hl
      000325 3A                     824 	ld	a, (hl-)
      000326 B6                     825 	or	a, (hl)
      000327 20 11                  826 	jr	NZ, 00102$
                                    827 ;src/main.c:239: draw_card_bottom(pile_idx, height + 1u, card->data);
      000329 0A                     828 	ld	a, (bc)
      00032A F5                     829 	push	af
      00032B 33                     830 	inc	sp
      00032C D5                     831 	push	de
      00032D 33                     832 	inc	sp
      00032E F8 09                  833 	ldhl	sp,	#9
      000330 7E                     834 	ld	a, (hl)
      000331 F5                     835 	push	af
      000332 33                     836 	inc	sp
      000333 CDr88r02               837 	call	_draw_card_bottom
      000336 E8 03                  838 	add	sp, #3
                                    839 ;src/main.c:240: break;
      000338 18 0C                  840 	jr	00106$
      00033A                        841 00102$:
                                    842 ;src/main.c:242: height++;
      00033A F8 00                  843 	ldhl	sp,	#0
                                    844 ;src/main.c:243: card = card->next_card;
      00033C 7A                     845 	ld	a, d
      00033D 22                     846 	ld	(hl+), a
      00033E 2A                     847 	ld	a, (hl+)
      00033F 5E                     848 	ld	e, (hl)
      000340 F8 05                  849 	ldhl	sp,	#5
      000342 22                     850 	ld	(hl+), a
      000343 73                     851 	ld	(hl), e
      000344 18 AD                  852 	jr	00104$
                                    853 ;src/main.c:246: height += 2u;
      000346                        854 00106$:
                                    855 ;src/main.c:247: }
      000346 E8 03                  856 	add	sp, #3
      000348 C9                     857 	ret
                                    858 ;src/main.c:249: void draw_sequential_card(const UINT8 x, const UINT8 y, const UINT8 bkg_offset)
                                    859 ;	---------------------------------
                                    860 ; Function draw_sequential_card
                                    861 ; ---------------------------------
      000349                        862 _draw_sequential_card::
                                    863 ;src/main.c:251: set_bkg_tile_xy(x, y, bkg_offset);
      000349 F8 04                  864 	ldhl	sp,	#4
      00034B 7E                     865 	ld	a, (hl)
      00034C F5                     866 	push	af
      00034D 33                     867 	inc	sp
      00034E 2B                     868 	dec	hl
      00034F 7E                     869 	ld	a, (hl)
      000350 F5                     870 	push	af
      000351 33                     871 	inc	sp
      000352 2B                     872 	dec	hl
      000353 7E                     873 	ld	a, (hl)
      000354 F5                     874 	push	af
      000355 33                     875 	inc	sp
      000356 CDr00r00               876 	call	_set_bkg_tile_xy
      000359 E8 03                  877 	add	sp, #3
                                    878 ;src/main.c:252: set_bkg_tile_xy(x + 1u, y, bkg_offset + 1u);
      00035B F8 04                  879 	ldhl	sp,	#4
      00035D 7E                     880 	ld	a, (hl)
      00035E 3C                     881 	inc	a
      00035F 2B                     882 	dec	hl
      000360 2B                     883 	dec	hl
      000361 4E                     884 	ld	c, (hl)
      000362 0C                     885 	inc	c
      000363 F5                     886 	push	af
      000364 33                     887 	inc	sp
      000365 23                     888 	inc	hl
      000366 46                     889 	ld	b, (hl)
      000367 C5                     890 	push	bc
      000368 CDr00r00               891 	call	_set_bkg_tile_xy
      00036B E8 03                  892 	add	sp, #3
                                    893 ;src/main.c:253: set_bkg_tile_xy(x, y + 1u, bkg_offset + 2u);
      00036D F8 04                  894 	ldhl	sp,	#4
      00036F 7E                     895 	ld	a, (hl)
      000370 3C                     896 	inc	a
      000371 3C                     897 	inc	a
      000372 2B                     898 	dec	hl
      000373 46                     899 	ld	b, (hl)
      000374 04                     900 	inc	b
      000375 F5                     901 	push	af
      000376 33                     902 	inc	sp
      000377 C5                     903 	push	bc
      000378 33                     904 	inc	sp
      000379 2B                     905 	dec	hl
      00037A 7E                     906 	ld	a, (hl)
      00037B F5                     907 	push	af
      00037C 33                     908 	inc	sp
      00037D CDr00r00               909 	call	_set_bkg_tile_xy
      000380 E8 03                  910 	add	sp, #3
                                    911 ;src/main.c:254: set_bkg_tile_xy(x + 1u, y + 1u, bkg_offset + 3u);
      000382 F8 04                  912 	ldhl	sp,	#4
      000384 7E                     913 	ld	a, (hl)
      000385 3C                     914 	inc	a
      000386 3C                     915 	inc	a
      000387 3C                     916 	inc	a
      000388 F5                     917 	push	af
      000389 33                     918 	inc	sp
      00038A C5                     919 	push	bc
      00038B 33                     920 	inc	sp
      00038C 79                     921 	ld	a, c
      00038D F5                     922 	push	af
      00038E 33                     923 	inc	sp
      00038F CDr00r00               924 	call	_set_bkg_tile_xy
      000392 E8 03                  925 	add	sp, #3
                                    926 ;src/main.c:255: set_bkg_tile_xy(x, y + 2u, bkg_offset + 4u);
      000394 F8 04                  927 	ldhl	sp,	#4
      000396 7E                     928 	ld	a, (hl)
      000397 3C                     929 	inc	a
      000398 3C                     930 	inc	a
      000399 3C                     931 	inc	a
      00039A 3C                     932 	inc	a
      00039B 2B                     933 	dec	hl
      00039C 46                     934 	ld	b, (hl)
      00039D 04                     935 	inc	b
      00039E 04                     936 	inc	b
      00039F F5                     937 	push	af
      0003A0 33                     938 	inc	sp
      0003A1 C5                     939 	push	bc
      0003A2 33                     940 	inc	sp
      0003A3 2B                     941 	dec	hl
      0003A4 7E                     942 	ld	a, (hl)
      0003A5 F5                     943 	push	af
      0003A6 33                     944 	inc	sp
      0003A7 CDr00r00               945 	call	_set_bkg_tile_xy
      0003AA E8 03                  946 	add	sp, #3
                                    947 ;src/main.c:256: set_bkg_tile_xy(x + 1u, y + 2u, bkg_offset + 5u);
      0003AC F8 04                  948 	ldhl	sp,	#4
      0003AE 7E                     949 	ld	a, (hl)
      0003AF C6 05                  950 	add	a, #0x05
      0003B1 F5                     951 	push	af
      0003B2 33                     952 	inc	sp
      0003B3 C5                     953 	push	bc
      0003B4 CDr00r00               954 	call	_set_bkg_tile_xy
      0003B7 E8 03                  955 	add	sp, #3
                                    956 ;src/main.c:257: }
      0003B9 C9                     957 	ret
                                    958 ;src/main.c:259: void draw_background(void)
                                    959 ;	---------------------------------
                                    960 ; Function draw_background
                                    961 ; ---------------------------------
      0003BA                        962 _draw_background::
      0003BA E8 FD                  963 	add	sp, #-3
                                    964 ;src/main.c:262: Pile *pile = IDX_PTR(piles, 0);
      0003BC 01r38r01               965 	ld	bc, #_piles+0
                                    966 ;src/main.c:263: for (i = 0; i < 10u; i++) {
      0003BF AF                     967 	xor	a, a
      0003C0 F8 02                  968 	ldhl	sp,	#2
      0003C2 77                     969 	ld	(hl), a
      0003C3                        970 00102$:
                                    971 ;src/main.c:264: draw_pile(pile->base, i, 0);
      0003C3 59                     972 	ld	e, c
      0003C4 50                     973 	ld	d, b
      0003C5 1A                     974 	ld	a, (de)
      0003C6 F8 00                  975 	ldhl	sp,	#0
      0003C8 22                     976 	ld	(hl+), a
      0003C9 13                     977 	inc	de
      0003CA 1A                     978 	ld	a, (de)
      0003CB 77                     979 	ld	(hl), a
      0003CC C5                     980 	push	bc
      0003CD AF                     981 	xor	a, a
      0003CE F5                     982 	push	af
      0003CF 33                     983 	inc	sp
      0003D0 23                     984 	inc	hl
      0003D1 7E                     985 	ld	a, (hl)
      0003D2 F5                     986 	push	af
      0003D3 33                     987 	inc	sp
      0003D4 2B                     988 	dec	hl
      0003D5 2B                     989 	dec	hl
      0003D6 2A                     990 	ld	a, (hl+)
      0003D7 66                     991 	ld	h, (hl)
      0003D8 6F                     992 	ld	l, a
      0003D9 E5                     993 	push	hl
      0003DA CDrE5r02               994 	call	_draw_pile
      0003DD E8 04                  995 	add	sp, #4
      0003DF C1                     996 	pop	bc
                                    997 ;src/main.c:265: pile++;
      0003E0 03                     998 	inc	bc
      0003E1 03                     999 	inc	bc
      0003E2 03                    1000 	inc	bc
      0003E3 03                    1001 	inc	bc
      0003E4 03                    1002 	inc	bc
                                   1003 ;src/main.c:263: for (i = 0; i < 10u; i++) {
      0003E5 F8 02                 1004 	ldhl	sp,	#2
      0003E7 34                    1005 	inc	(hl)
      0003E8 7E                    1006 	ld	a, (hl)
      0003E9 D6 0A                 1007 	sub	a, #0x0a
      0003EB 38 D6                 1008 	jr	C, 00102$
                                   1009 ;src/main.c:267: draw_sequential_card(0, 0, OFFSET_BKG_BACK);
      0003ED 3E 18                 1010 	ld	a, #0x18
      0003EF F5                    1011 	push	af
      0003F0 33                    1012 	inc	sp
      0003F1 AF                    1013 	xor	a, a
      0003F2 F5                    1014 	push	af
      0003F3 33                    1015 	inc	sp
      0003F4 AF                    1016 	xor	a, a
      0003F5 F5                    1017 	push	af
      0003F6 33                    1018 	inc	sp
      0003F7 CDr49r03              1019 	call	_draw_sequential_card
      0003FA E8 03                 1020 	add	sp, #3
                                   1021 ;src/main.c:268: }
      0003FC E8 03                 1022 	add	sp, #3
      0003FE C9                    1023 	ret
                                   1024 ;src/main.c:270: void cursor_adjust_height(void)
                                   1025 ;	---------------------------------
                                   1026 ; Function cursor_adjust_height
                                   1027 ; ---------------------------------
      0003FF                       1028 _cursor_adjust_height::
                                   1029 ;src/main.c:272: Pile *pile = IDX_PTR(piles, cursor.pile_idx);
      0003FF 01r38r01              1030 	ld	bc, #_piles+0
      000402 FAr88r01              1031 	ld	a, (#(_cursor + 0x0006) + 0)
      000405 5F                    1032 	ld	e, a
      000406 16 00                 1033 	ld	d, #0x00
      000408 6B                    1034 	ld	l, e
      000409 62                    1035 	ld	h, d
      00040A 29                    1036 	add	hl, hl
      00040B 29                    1037 	add	hl, hl
      00040C 19                    1038 	add	hl, de
      00040D 09                    1039 	add	hl, bc
                                   1040 ;src/main.c:273: if (cursor.height > pile->height)
      00040E 01r89r01              1041 	ld	bc, #_cursor + 7
      000411 0A                    1042 	ld	a, (bc)
      000412 57                    1043 	ld	d, a
      000413 23                    1044 	inc	hl
      000414 23                    1045 	inc	hl
      000415 23                    1046 	inc	hl
      000416 23                    1047 	inc	hl
      000417 5E                    1048 	ld	e, (hl)
                                   1049 ;src/main.c:274: cursor.height = pile->height;
      000418 7B                    1050 	ld	a,e
      000419 BA                    1051 	cp	a,d
      00041A D0                    1052 	ret	NC
      00041B 02                    1053 	ld	(bc), a
                                   1054 ;src/main.c:275: }
      00041C C9                    1055 	ret
                                   1056 ;src/main.c:311: void dynamic_metasprite_deal_callback(void)
                                   1057 ;	---------------------------------
                                   1058 ; Function dynamic_metasprite_deal_callback
                                   1059 ; ---------------------------------
      00041D                       1060 _dynamic_metasprite_deal_callback::
      00041D E8 FC                 1061 	add	sp, #-4
                                   1062 ;src/main.c:313: Pile *pile = IDX_PTR(piles, dynamic_metasprite.data_0);
      00041F 21r7Br01              1063 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000422 4E                    1064 	ld	c, (hl)
      000423 06 00                 1065 	ld	b, #0x00
      000425 69                    1066 	ld	l, c
      000426 60                    1067 	ld	h, b
      000427 29                    1068 	add	hl, hl
      000428 29                    1069 	add	hl, hl
      000429 09                    1070 	add	hl, bc
      00042A 3Er38                 1071 	ld	a, #<(_piles)
      00042C 85                    1072 	add	a, l
      00042D 47                    1073 	ld	b, a
      00042E 3Es01                 1074 	ld	a, #>(_piles)
      000430 8C                    1075 	adc	a, h
      000431 F8 00                 1076 	ldhl	sp,	#0
      000433 70                    1077 	ld	(hl), b
      000434 23                    1078 	inc	hl
      000435 77                    1079 	ld	(hl), a
                                   1080 ;src/main.c:314: draw_pile(pile->top, dynamic_metasprite.data_0, pile->height);
                                   1081 ;c
      000436 D1                    1082 	pop	de
      000437 D5                    1083 	push	de
      000438 21 04 00              1084 	ld	hl, #0x0004
      00043B 19                    1085 	add	hl, de
      00043C 5D                    1086 	ld	e, l
      00043D 54                    1087 	ld	d, h
      00043E 1A                    1088 	ld	a, (de)
      00043F 47                    1089 	ld	b, a
      000440 E1                    1090 	pop	hl
      000441 E5                    1091 	push	hl
      000442 23                    1092 	inc	hl
      000443 23                    1093 	inc	hl
      000444 2A                    1094 	ld	a, (hl+)
      000445 66                    1095 	ld	h, (hl)
      000446 6F                    1096 	ld	l, a
      000447 C5                    1097 	push	bc
      000448 E5                    1098 	push	hl
      000449 CDrE5r02              1099 	call	_draw_pile
      00044C E8 04                 1100 	add	sp, #4
                                   1101 ;src/main.c:315: if (dynamic_metasprite.data_0 == 9u) {
      00044E 21r7Br01              1102 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000451 4E                    1103 	ld	c, (hl)
      000452 79                    1104 	ld	a, c
      000453 D6 09                 1105 	sub	a, #0x09
      000455 20 16                 1106 	jr	NZ, 00102$
                                   1107 ;src/main.c:316: metasprite_2x3_hide(SPRITE_DYNAMIC);
      000457 3E 0C                 1108 	ld	a, #0x0c
      000459 F5                    1109 	push	af
      00045A 33                    1110 	inc	sp
      00045B CDr00r00              1111 	call	_metasprite_2x3_hide
      00045E 33                    1112 	inc	sp
                                   1113 ;src/main.c:317: flags &= ~FLAG_PLAYING_ANIMATION;
      00045F 21r6Br01              1114 	ld	hl, #_flags
      000462 7E                    1115 	ld	a, (hl)
      000463 E6 FB                 1116 	and	a, #0xfb
      000465 77                    1117 	ld	(hl), a
                                   1118 ;src/main.c:318: dynamic_metasprite.target_frames = -1;
      000466 21r76r01              1119 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000469 36 FF                 1120 	ld	(hl), #0xff
                                   1121 ;src/main.c:319: return;
      00046B 18 49                 1122 	jr	00103$
      00046D                       1123 00102$:
                                   1124 ;src/main.c:321: pile++;
                                   1125 ;c
      00046D D1                    1126 	pop	de
      00046E D5                    1127 	push	de
      00046F 21 05 00              1128 	ld	hl, #0x0005
      000472 19                    1129 	add	hl, de
      000473 E5                    1130 	push	hl
      000474 7D                    1131 	ld	a, l
      000475 F8 04                 1132 	ldhl	sp,	#4
      000477 77                    1133 	ld	(hl), a
      000478 E1                    1134 	pop	hl
      000479 7C                    1135 	ld	a, h
      00047A F8 03                 1136 	ldhl	sp,	#3
      00047C 77                    1137 	ld	(hl), a
                                   1138 ;src/main.c:322: dynamic_metasprite.data_0++;
      00047D 0C                    1139 	inc	c
      00047E 21r7Br01              1140 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000481 71                    1141 	ld	(hl), c
                                   1142 ;src/main.c:323: dynamic_metasprite.dist[0] += 16;
      000482 21r72r01              1143 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000485 2A                    1144 	ld	a, (hl+)
      000486 4F                    1145 	ld	c, a
      000487 46                    1146 	ld	b, (hl)
      000488 21 10 00              1147 	ld	hl, #0x0010
      00048B 09                    1148 	add	hl, bc
      00048C 4D                    1149 	ld	c, l
      00048D 44                    1150 	ld	b, h
      00048E 21r72r01              1151 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000491 79                    1152 	ld	a, c
      000492 22                    1153 	ld	(hl+), a
      000493 70                    1154 	ld	(hl), b
                                   1155 ;src/main.c:324: dynamic_metasprite.dist[1] = (INT16)(SCOREBAR_HEIGHT + pile->height) * 8;
                                   1156 ;c
      000494 F8 02                 1157 	ldhl	sp,#2
      000496 2A                    1158 	ld	a, (hl+)
      000497 5F                    1159 	ld	e, a
      000498 56                    1160 	ld	d, (hl)
      000499 21 04 00              1161 	ld	hl, #0x0004
      00049C 19                    1162 	add	hl, de
      00049D 4D                    1163 	ld	c, l
      00049E 44                    1164 	ld	b, h
      00049F 0A                    1165 	ld	a, (bc)
      0004A0 6F                    1166 	ld	l, a
      0004A1 26 00                 1167 	ld	h, #0x00
      0004A3 23                    1168 	inc	hl
      0004A4 23                    1169 	inc	hl
      0004A5 23                    1170 	inc	hl
      0004A6 29                    1171 	add	hl, hl
      0004A7 29                    1172 	add	hl, hl
      0004A8 29                    1173 	add	hl, hl
      0004A9 4D                    1174 	ld	c, l
      0004AA 44                    1175 	ld	b, h
      0004AB 21r74r01              1176 	ld	hl, #(_dynamic_metasprite + 0x0006)
      0004AE 79                    1177 	ld	a, c
      0004AF 22                    1178 	ld	(hl+), a
      0004B0 70                    1179 	ld	(hl), b
                                   1180 ;src/main.c:325: dynamic_metasprite.elapsed_frames = 0;
      0004B1 21r77r01              1181 	ld	hl, #(_dynamic_metasprite + 0x0009)
      0004B4 36 00                 1182 	ld	(hl), #0x00
      0004B6                       1183 00103$:
                                   1184 ;src/main.c:326: }
      0004B6 E8 04                 1185 	add	sp, #4
      0004B8 C9                    1186 	ret
                                   1187 ;src/main.c:328: void dynamic_metasprite_deal(void)
                                   1188 ;	---------------------------------
                                   1189 ; Function dynamic_metasprite_deal
                                   1190 ; ---------------------------------
      0004B9                       1191 _dynamic_metasprite_deal::
                                   1192 ;src/main.c:330: Pile *pile = IDX_PTR(piles, 0);
                                   1193 ;src/main.c:331: dynamic_metasprite.src[0] = 0;
      0004B9 21r6Er01              1194 	ld	hl, #_dynamic_metasprite
      0004BC AF                    1195 	xor	a, a
      0004BD 22                    1196 	ld	(hl+), a
      0004BE 77                    1197 	ld	(hl), a
                                   1198 ;src/main.c:332: dynamic_metasprite.src[1] = 0;
      0004BF 21r70r01              1199 	ld	hl, #(_dynamic_metasprite + 0x0002)
      0004C2 AF                    1200 	xor	a, a
      0004C3 22                    1201 	ld	(hl+), a
      0004C4 77                    1202 	ld	(hl), a
                                   1203 ;src/main.c:333: dynamic_metasprite.dist[0] = 0;
      0004C5 21r72r01              1204 	ld	hl, #(_dynamic_metasprite + 0x0004)
      0004C8 AF                    1205 	xor	a, a
      0004C9 22                    1206 	ld	(hl+), a
      0004CA 77                    1207 	ld	(hl), a
                                   1208 ;src/main.c:334: dynamic_metasprite.dist[1] = (INT16)(SCOREBAR_HEIGHT + pile->height) * 8;
      0004CB FAr3Cr01              1209 	ld	a, (#(_piles + 0x0004) + 0)
      0004CE 26 00                 1210 	ld	h, #0x00
      0004D0 6F                    1211 	ld	l, a
      0004D1 23                    1212 	inc	hl
      0004D2 23                    1213 	inc	hl
      0004D3 23                    1214 	inc	hl
      0004D4 7C                    1215 	ld	a,h
      0004D5 29                    1216 	add	hl, hl
      0004D6 29                    1217 	add	hl, hl
      0004D7 29                    1218 	add	hl, hl
      0004D8 4D                    1219 	ld	c, l
      0004D9 44                    1220 	ld	b, h
      0004DA 21r74r01              1221 	ld	hl, #(_dynamic_metasprite + 0x0006)
      0004DD 71                    1222 	ld	(hl), c
      0004DE 23                    1223 	inc	hl
      0004DF 70                    1224 	ld	(hl), b
                                   1225 ;src/main.c:335: dynamic_metasprite.elapsed_frames = 0;
      0004E0 21r77r01              1226 	ld	hl, #(_dynamic_metasprite + 0x0009)
      0004E3 36 00                 1227 	ld	(hl), #0x00
                                   1228 ;src/main.c:336: dynamic_metasprite.target_frames = MOVE_TARGET_FRAMES;
      0004E5 21r76r01              1229 	ld	hl, #(_dynamic_metasprite + 0x0008)
      0004E8 36 10                 1230 	ld	(hl), #0x10
                                   1231 ;src/main.c:337: dynamic_metasprite.metasprite = metasprite_sequential_2x3;
      0004EA 21r78r01              1232 	ld	hl, #(_dynamic_metasprite + 0x000a)
      0004ED 36r00                 1233 	ld	(hl), #<(_metasprite_sequential_2x3)
      0004EF 23                    1234 	inc	hl
      0004F0 36s00                 1235 	ld	(hl), #>(_metasprite_sequential_2x3)
                                   1236 ;src/main.c:338: dynamic_metasprite.metasprite_offset = OFFSET_SPRITE_BACK;
      0004F2 21r7Ar01              1237 	ld	hl, #(_dynamic_metasprite + 0x000c)
      0004F5 36 20                 1238 	ld	(hl), #0x20
                                   1239 ;src/main.c:339: dynamic_metasprite.data_0 = 0;
      0004F7 21r7Br01              1240 	ld	hl, #(_dynamic_metasprite + 0x000d)
      0004FA 36 00                 1241 	ld	(hl), #0x00
                                   1242 ;src/main.c:340: dynamic_metasprite.callback = &dynamic_metasprite_deal_callback;
      0004FC 21r80r01              1243 	ld	hl, #(_dynamic_metasprite + 0x0012)
      0004FF 36r1D                 1244 	ld	(hl), #<(_dynamic_metasprite_deal_callback)
      000501 23                    1245 	inc	hl
      000502 36s04                 1246 	ld	(hl), #>(_dynamic_metasprite_deal_callback)
                                   1247 ;src/main.c:341: flags |= FLAG_PLAYING_ANIMATION;
      000504 21r6Br01              1248 	ld	hl, #_flags
      000507 7E                    1249 	ld	a, (hl)
      000508 F6 04                 1250 	or	a, #0x04
      00050A 77                    1251 	ld	(hl), a
                                   1252 ;src/main.c:342: }
      00050B C9                    1253 	ret
                                   1254 ;src/main.c:371: void set_metasprite_card(const UINT8 card_data)
                                   1255 ;	---------------------------------
                                   1256 ; Function set_metasprite_card
                                   1257 ; ---------------------------------
      00050C                       1258 _set_metasprite_card::
                                   1259 ;src/main.c:373: metasprite_t *iter = IDX_PTR(metasprite_custom_2x3, 0);
                                   1260 ;src/main.c:374: (iter++)->dtile = OFFSET_CARD_RANK + RANK(card_data);
      00050C F8 02                 1261 	ldhl	sp,	#2
      00050E 7E                    1262 	ld	a, (hl)
      00050F E6 0F                 1263 	and	a, #0x0f
      000511 4F                    1264 	ld	c, a
      000512 21r02r00              1265 	ld	hl, #(_metasprite_custom_2x3 + 0x0002)
      000515 71                    1266 	ld	(hl), c
                                   1267 ;src/main.c:375: (iter++)->dtile = OFFSET_CARD_SUIT + SUIT(card_data);
      000516 11r06r00              1268 	ld	de, #(_metasprite_custom_2x3 + 0x0004) + 2
      000519 F8 02                 1269 	ldhl	sp,	#2
      00051B 7E                    1270 	ld	a, (hl)
      00051C E6 30                 1271 	and	a, #0x30
      00051E 6F                    1272 	ld	l, a
      00051F 26 00                 1273 	ld	h, #0x00
      000521 CB 2C                 1274 	sra	h
      000523 CB 1D                 1275 	rr	l
      000525 CB 2C                 1276 	sra	h
      000527 CB 1D                 1277 	rr	l
      000529 CB 2C                 1278 	sra	h
      00052B CB 1D                 1279 	rr	l
      00052D CB 2C                 1280 	sra	h
      00052F CB 1D                 1281 	rr	l
      000531 45                    1282 	ld	b, l
      000532 78                    1283 	ld	a, b
      000533 C6 0D                 1284 	add	a, #0x0d
      000535 12                    1285 	ld	(de), a
                                   1286 ;src/main.c:376: (iter++)->dtile = OFFSET_CARD_BLANK + 2u;
      000536 21r0Ar00              1287 	ld	hl, #(_metasprite_custom_2x3 + 0x000a)
      000539 36 13                 1288 	ld	(hl), #0x13
                                   1289 ;src/main.c:377: (iter++)->dtile = OFFSET_CARD_BLANK + 3u;
      00053B 21r0Er00              1290 	ld	hl, #(_metasprite_custom_2x3 + 0x000e)
      00053E 36 14                 1291 	ld	(hl), #0x14
                                   1292 ;src/main.c:378: (iter++)->dtile = OFFSET_CARD_SUIT_ROT + SUIT(card_data);
      000540 11r12r00              1293 	ld	de, #(_metasprite_custom_2x3 + 0x0010) + 2
      000543 78                    1294 	ld	a, b
      000544 C6 2A                 1295 	add	a, #0x2a
      000546 12                    1296 	ld	(de), a
                                   1297 ;src/main.c:379: (iter++)->dtile = OFFSET_CARD_RANK_ROT + RANK(card_data);
      000547 11r16r00              1298 	ld	de, #(_metasprite_custom_2x3 + 0x0014) + 2
      00054A 79                    1299 	ld	a, c
      00054B C6 1D                 1300 	add	a, #0x1d
      00054D 12                    1301 	ld	(de), a
                                   1302 ;src/main.c:380: }
      00054E C9                    1303 	ret
                                   1304 ;src/main.c:382: void dynamic_metasprite_unfold_callback(void)
                                   1305 ;	---------------------------------
                                   1306 ; Function dynamic_metasprite_unfold_callback
                                   1307 ; ---------------------------------
      00054F                       1308 _dynamic_metasprite_unfold_callback::
      00054F E8 FC                 1309 	add	sp, #-4
                                   1310 ;src/main.c:384: Card *card = dynamic_metasprite.data_ptr;
      000551 21r7Er01              1311 	ld	hl, #(_dynamic_metasprite + 0x0010)
      000554 2A                    1312 	ld	a, (hl+)
      000555 4F                    1313 	ld	c, a
      000556 46                    1314 	ld	b, (hl)
                                   1315 ;src/main.c:385: if (!card->next_card) {
      000557 59                    1316 	ld	e, c
      000558 50                    1317 	ld	d, b
      000559 1A                    1318 	ld	a, (de)
      00055A F8 00                 1319 	ldhl	sp,	#0
      00055C 22                    1320 	ld	(hl+), a
      00055D 13                    1321 	inc	de
      00055E 1A                    1322 	ld	a, (de)
      00055F 77                    1323 	ld	(hl), a
                                   1324 ;src/main.c:386: draw_card(dynamic_metasprite.data_1 / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 1u, card->data);
      000560 03                    1325 	inc	bc
      000561 03                    1326 	inc	bc
      000562 23                    1327 	inc	hl
      000563 79                    1328 	ld	a, c
      000564 22                    1329 	ld	(hl+), a
                                   1330 ;src/main.c:385: if (!card->next_card) {
      000565 78                    1331 	ld	a, b
      000566 32                    1332 	ld	(hl-), a
      000567 2B                    1333 	dec	hl
      000568 3A                    1334 	ld	a, (hl-)
      000569 B6                    1335 	or	a, (hl)
      00056A C2rF2r05              1336 	jp	NZ, 00102$
                                   1337 ;src/main.c:386: draw_card(dynamic_metasprite.data_1 / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 1u, card->data);
      00056D F8 02                 1338 	ldhl	sp,#2
      00056F 2A                    1339 	ld	a, (hl+)
      000570 5F                    1340 	ld	e, a
      000571 56                    1341 	ld	d, (hl)
      000572 1A                    1342 	ld	a, (de)
      000573 F8 00                 1343 	ldhl	sp,	#0
      000575 77                    1344 	ld	(hl), a
      000576 FAr70r01              1345 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      000579 F8 03                 1346 	ldhl	sp,	#3
      00057B 77                    1347 	ld	(hl), a
      00057C F8 03                 1348 	ldhl	sp,	#3
      00057E 3A                    1349 	ld	a, (hl-)
      00057F 77                    1350 	ld	(hl), a
      000580 AF                    1351 	xor	a, a
      000581 23                    1352 	inc	hl
      000582 77                    1353 	ld	(hl), a
      000583 CB 3E                 1354 	srl	(hl)
      000585 2B                    1355 	dec	hl
      000586 CB 1E                 1356 	rr	(hl)
      000588 23                    1357 	inc	hl
      000589 CB 3E                 1358 	srl	(hl)
      00058B 2B                    1359 	dec	hl
      00058C CB 1E                 1360 	rr	(hl)
      00058E 23                    1361 	inc	hl
      00058F CB 3E                 1362 	srl	(hl)
      000591 2B                    1363 	dec	hl
      000592 CB 1E                 1364 	rr	(hl)
      000594 2A                    1365 	ld	a, (hl+)
      000595 77                    1366 	ld	(hl), a
      000596 3C                    1367 	inc	a
      000597 2B                    1368 	dec	hl
      000598 2B                    1369 	dec	hl
      000599 77                    1370 	ld	(hl), a
      00059A FAr7Cr01              1371 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      00059D F8 03                 1372 	ldhl	sp,	#3
      00059F 77                    1373 	ld	(hl), a
      0005A0 F8 03                 1374 	ldhl	sp,	#3
      0005A2 3A                    1375 	ld	a, (hl-)
      0005A3 77                    1376 	ld	(hl), a
      0005A4 AF                    1377 	xor	a, a
      0005A5 23                    1378 	inc	hl
      0005A6 77                    1379 	ld	(hl), a
      0005A7 CB 3E                 1380 	srl	(hl)
      0005A9 2B                    1381 	dec	hl
      0005AA CB 1E                 1382 	rr	(hl)
      0005AC 23                    1383 	inc	hl
      0005AD CB 3E                 1384 	srl	(hl)
      0005AF 2B                    1385 	dec	hl
      0005B0 CB 1E                 1386 	rr	(hl)
      0005B2 23                    1387 	inc	hl
      0005B3 CB 3E                 1388 	srl	(hl)
      0005B5 2B                    1389 	dec	hl
      0005B6 CB 1E                 1390 	rr	(hl)
      0005B8 46                    1391 	ld	b, (hl)
                                   1392 ;src/main.c:228: draw_card_top(x, y, card_data);
      0005B9 C5                    1393 	push	bc
      0005BA 2B                    1394 	dec	hl
      0005BB 2B                    1395 	dec	hl
      0005BC 7E                    1396 	ld	a, (hl)
      0005BD F5                    1397 	push	af
      0005BE 33                    1398 	inc	sp
      0005BF 23                    1399 	inc	hl
      0005C0 7E                    1400 	ld	a, (hl)
      0005C1 F5                    1401 	push	af
      0005C2 33                    1402 	inc	sp
      0005C3 C5                    1403 	push	bc
      0005C4 33                    1404 	inc	sp
      0005C5 CDr1Cr02              1405 	call	_draw_card_top
      0005C8 E8 03                 1406 	add	sp, #3
      0005CA C1                    1407 	pop	bc
                                   1408 ;src/main.c:229: draw_card_bottom(x, y + 1u, card_data);
      0005CB F8 01                 1409 	ldhl	sp,	#1
      0005CD 7E                    1410 	ld	a, (hl)
      0005CE 3C                    1411 	inc	a
      0005CF 2B                    1412 	dec	hl
      0005D0 66                    1413 	ld	h, (hl)
      0005D1 E5                    1414 	push	hl
      0005D2 33                    1415 	inc	sp
      0005D3 F5                    1416 	push	af
      0005D4 33                    1417 	inc	sp
      0005D5 C5                    1418 	push	bc
      0005D6 33                    1419 	inc	sp
      0005D7 CDr88r02              1420 	call	_draw_card_bottom
      0005DA E8 03                 1421 	add	sp, #3
                                   1422 ;src/main.c:387: metasprite_2x3_hide(SPRITE_DYNAMIC);
      0005DC 3E 0C                 1423 	ld	a, #0x0c
      0005DE F5                    1424 	push	af
      0005DF 33                    1425 	inc	sp
      0005E0 CDr00r00              1426 	call	_metasprite_2x3_hide
      0005E3 33                    1427 	inc	sp
                                   1428 ;src/main.c:388: flags &= ~FLAG_PLAYING_ANIMATION;
      0005E4 21r6Br01              1429 	ld	hl, #_flags
      0005E7 7E                    1430 	ld	a, (hl)
      0005E8 E6 FB                 1431 	and	a, #0xfb
      0005EA 77                    1432 	ld	(hl), a
                                   1433 ;src/main.c:389: dynamic_metasprite.target_frames = -1;
      0005EB 21r76r01              1434 	ld	hl, #(_dynamic_metasprite + 0x0008)
      0005EE 36 FF                 1435 	ld	(hl), #0xff
                                   1436 ;src/main.c:390: return;
      0005F0 18 4E                 1437 	jr	00104$
      0005F2                       1438 00102$:
                                   1439 ;src/main.c:392: dynamic_metasprite.data_ptr = card->next_card;
      0005F2 C1                    1440 	pop	bc
      0005F3 C5                    1441 	push	bc
      0005F4 21r7Er01              1442 	ld	hl, #(_dynamic_metasprite + 0x0010)
      0005F7 79                    1443 	ld	a, c
      0005F8 22                    1444 	ld	(hl+), a
      0005F9 70                    1445 	ld	(hl), b
                                   1446 ;src/main.c:393: dynamic_metasprite.src[1] += 8;
      0005FA 21r70r01              1447 	ld	hl, #(_dynamic_metasprite + 0x0002)
      0005FD 2A                    1448 	ld	a, (hl+)
      0005FE 4F                    1449 	ld	c, a
      0005FF 46                    1450 	ld	b, (hl)
      000600 21 08 00              1451 	ld	hl, #0x0008
      000603 09                    1452 	add	hl, bc
      000604 4D                    1453 	ld	c, l
      000605 44                    1454 	ld	b, h
      000606 21r70r01              1455 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000609 79                    1456 	ld	a, c
      00060A 22                    1457 	ld	(hl+), a
      00060B 70                    1458 	ld	(hl), b
                                   1459 ;src/main.c:394: draw_card_top(dynamic_metasprite.data_1 / 8u, dynamic_metasprite.src[1] / 8u, card->data);
      00060C F8 02                 1460 	ldhl	sp,#2
      00060E 2A                    1461 	ld	a, (hl+)
      00060F 5F                    1462 	ld	e, a
      000610 56                    1463 	ld	d, (hl)
      000611 1A                    1464 	ld	a, (de)
      000612 77                    1465 	ld	(hl), a
      000613 CB 38                 1466 	srl	b
      000615 CB 19                 1467 	rr	c
      000617 CB 38                 1468 	srl	b
      000619 CB 19                 1469 	rr	c
      00061B CB 38                 1470 	srl	b
      00061D CB 19                 1471 	rr	c
      00061F FAr7Cr01              1472 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      000622 5F                    1473 	ld	e, a
      000623 16 00                 1474 	ld	d, #0x00
      000625 CB 3A                 1475 	srl	d
      000627 CB 1B                 1476 	rr	e
      000629 CB 3A                 1477 	srl	d
      00062B CB 1B                 1478 	rr	e
      00062D CB 3A                 1479 	srl	d
      00062F CB 1B                 1480 	rr	e
      000631 7E                    1481 	ld	a, (hl)
      000632 F5                    1482 	push	af
      000633 33                    1483 	inc	sp
      000634 51                    1484 	ld	d, c
      000635 D5                    1485 	push	de
      000636 CDr1Cr02              1486 	call	_draw_card_top
      000639 E8 03                 1487 	add	sp, #3
                                   1488 ;src/main.c:395: dynamic_metasprite.elapsed_frames = 0;
      00063B 21r77r01              1489 	ld	hl, #(_dynamic_metasprite + 0x0009)
      00063E 36 00                 1490 	ld	(hl), #0x00
      000640                       1491 00104$:
                                   1492 ;src/main.c:396: }
      000640 E8 04                 1493 	add	sp, #4
      000642 C9                    1494 	ret
                                   1495 ;src/main.c:398: void dynamic_metasprite_move_stack_callback(void)
                                   1496 ;	---------------------------------
                                   1497 ; Function dynamic_metasprite_move_stack_callback
                                   1498 ; ---------------------------------
      000643                       1499 _dynamic_metasprite_move_stack_callback::
                                   1500 ;src/main.c:400: if (dynamic_metasprite.data_0 & BITMASK_DYNAMIC_METASPRITE_UNFOLD) {
      000643 01r6Er01              1501 	ld	bc, #_dynamic_metasprite+0
      000646 21r7Br01              1502 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000649 66                    1503 	ld	h, (hl)
                                   1504 ;src/main.c:405: dynamic_metasprite.target_frames = FOLD_TARGET_FRAMES;
                                   1505 ;src/main.c:400: if (dynamic_metasprite.data_0 & BITMASK_DYNAMIC_METASPRITE_UNFOLD) {
      00064A 29                    1506 	add	hl, hl
      00064B 30 43                 1507 	jr	NC, 00102$
                                   1508 ;src/main.c:401: dynamic_metasprite.src[0] = dynamic_metasprite.data_1;
      00064D FAr7Cr01              1509 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      000650 5F                    1510 	ld	e, a
      000651 16 00                 1511 	ld	d, #0x00
      000653 69                    1512 	ld	l, c
      000654 60                    1513 	ld	h, b
      000655 7B                    1514 	ld	a, e
      000656 22                    1515 	ld	(hl+), a
      000657 72                    1516 	ld	(hl), d
                                   1517 ;src/main.c:402: dynamic_metasprite.src[1] = dynamic_metasprite.data_2 - 8u;
      000658 69                    1518 	ld	l, c
      000659 60                    1519 	ld	h, b
      00065A 23                    1520 	inc	hl
      00065B 23                    1521 	inc	hl
      00065C 79                    1522 	ld	a, c
      00065D C6 0F                 1523 	add	a, #0x0f
      00065F 5F                    1524 	ld	e, a
      000660 78                    1525 	ld	a, b
      000661 CE 00                 1526 	adc	a, #0x00
      000663 57                    1527 	ld	d, a
      000664 1A                    1528 	ld	a, (de)
      000665 5F                    1529 	ld	e, a
      000666 16 00                 1530 	ld	d, #0x00
      000668 7B                    1531 	ld	a, e
      000669 C6 F8                 1532 	add	a, #0xf8
      00066B 5F                    1533 	ld	e, a
      00066C 7A                    1534 	ld	a, d
      00066D CE FF                 1535 	adc	a, #0xff
      00066F 73                    1536 	ld	(hl), e
      000670 23                    1537 	inc	hl
      000671 77                    1538 	ld	(hl), a
                                   1539 ;src/main.c:403: dynamic_metasprite.dist[0] = 0;
      000672 21r72r01              1540 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000675 AF                    1541 	xor	a, a
      000676 22                    1542 	ld	(hl+), a
      000677 77                    1543 	ld	(hl), a
                                   1544 ;src/main.c:404: dynamic_metasprite.dist[1] = 8;
      000678 21r74r01              1545 	ld	hl, #(_dynamic_metasprite + 0x0006)
      00067B 36 08                 1546 	ld	(hl), #0x08
      00067D 23                    1547 	inc	hl
      00067E 36 00                 1548 	ld	(hl), #0x00
                                   1549 ;src/main.c:405: dynamic_metasprite.target_frames = FOLD_TARGET_FRAMES;
      000680 21r76r01              1550 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000683 36 10                 1551 	ld	(hl), #0x10
                                   1552 ;src/main.c:406: dynamic_metasprite.callback = &dynamic_metasprite_unfold_callback;
      000685 21r80r01              1553 	ld	hl, #(_dynamic_metasprite + 0x0012)
      000688 36r4F                 1554 	ld	(hl), #<(_dynamic_metasprite_unfold_callback)
      00068A 23                    1555 	inc	hl
      00068B 36s05                 1556 	ld	(hl), #>(_dynamic_metasprite_unfold_callback)
                                   1557 ;src/main.c:407: dynamic_metasprite_unfold_callback();
      00068D C3r4Fr05              1558 	jp  _dynamic_metasprite_unfold_callback
      000690                       1559 00102$:
                                   1560 ;src/main.c:409: flags &= ~FLAG_PLAYING_ANIMATION;
      000690 21r6Br01              1561 	ld	hl, #_flags
      000693 7E                    1562 	ld	a, (hl)
      000694 E6 FB                 1563 	and	a, #0xfb
      000696 77                    1564 	ld	(hl), a
                                   1565 ;src/main.c:410: dynamic_metasprite.target_frames = -1;
      000697 21r76r01              1566 	ld	hl, #(_dynamic_metasprite + 0x0008)
      00069A 36 FF                 1567 	ld	(hl), #0xff
                                   1568 ;src/main.c:412: }
      00069C C9                    1569 	ret
                                   1570 ;src/main.c:414: void dynamic_metasprite_fold_callback(void)
                                   1571 ;	---------------------------------
                                   1572 ; Function dynamic_metasprite_fold_callback
                                   1573 ; ---------------------------------
      00069D                       1574 _dynamic_metasprite_fold_callback::
                                   1575 ;src/main.c:416: dynamic_metasprite.src[1] -= 8;
      00069D 21r70r01              1576 	ld	hl, #(_dynamic_metasprite + 0x0002)
      0006A0 2A                    1577 	ld	a, (hl+)
      0006A1 4F                    1578 	ld	c, a
      0006A2 46                    1579 	ld	b, (hl)
      0006A3 79                    1580 	ld	a, c
      0006A4 C6 F8                 1581 	add	a, #0xf8
      0006A6 4F                    1582 	ld	c, a
      0006A7 78                    1583 	ld	a, b
      0006A8 CE FF                 1584 	adc	a, #0xff
      0006AA 47                    1585 	ld	b, a
      0006AB 21r70r01              1586 	ld	hl, #(_dynamic_metasprite + 0x0002)
      0006AE 79                    1587 	ld	a, c
      0006AF 22                    1588 	ld	(hl+), a
      0006B0 70                    1589 	ld	(hl), b
                                   1590 ;src/main.c:417: dynamic_metasprite.elapsed_frames = 0;
      0006B1 21r77r01              1591 	ld	hl, #(_dynamic_metasprite + 0x0009)
      0006B4 36 00                 1592 	ld	(hl), #0x00
                                   1593 ;src/main.c:418: clear_bkg_2x1((UINT8)dynamic_metasprite.src[0] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 2u);
      0006B6 FAr70r01              1594 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      0006B9 4F                    1595 	ld	c, a
      0006BA 06 00                 1596 	ld	b, #0x00
      0006BC CB 38                 1597 	srl	b
      0006BE CB 19                 1598 	rr	c
      0006C0 CB 38                 1599 	srl	b
      0006C2 CB 19                 1600 	rr	c
      0006C4 CB 38                 1601 	srl	b
      0006C6 CB 19                 1602 	rr	c
      0006C8 0C                    1603 	inc	c
      0006C9 0C                    1604 	inc	c
      0006CA FAr6Er01              1605 	ld	a, (#_dynamic_metasprite + 0)
      0006CD 5F                    1606 	ld	e, a
      0006CE 16 00                 1607 	ld	d, #0x00
      0006D0 43                    1608 	ld	b, e
      0006D1 CB 3A                 1609 	srl	d
      0006D3 CB 18                 1610 	rr	b
      0006D5 CB 3A                 1611 	srl	d
      0006D7 CB 18                 1612 	rr	b
      0006D9 CB 3A                 1613 	srl	d
      0006DB CB 18                 1614 	rr	b
                                   1615 ;src/main.c:203: set_bkg_tile_xy(x, y, OFFSET_BKG_NONE);
      0006DD AF                    1616 	xor	a, a
      0006DE F5                    1617 	push	af
      0006DF 33                    1618 	inc	sp
      0006E0 79                    1619 	ld	a, c
      0006E1 F5                    1620 	push	af
      0006E2 33                    1621 	inc	sp
      0006E3 C5                    1622 	push	bc
      0006E4 33                    1623 	inc	sp
      0006E5 CDr00r00              1624 	call	_set_bkg_tile_xy
      0006E8 E8 03                 1625 	add	sp, #3
                                   1626 ;src/main.c:204: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_NONE);
      0006EA 04                    1627 	inc	b
      0006EB AF                    1628 	xor	a, a
      0006EC F5                    1629 	push	af
      0006ED 33                    1630 	inc	sp
      0006EE 79                    1631 	ld	a, c
      0006EF F5                    1632 	push	af
      0006F0 33                    1633 	inc	sp
      0006F1 C5                    1634 	push	bc
      0006F2 33                    1635 	inc	sp
      0006F3 CDr00r00              1636 	call	_set_bkg_tile_xy
      0006F6 E8 03                 1637 	add	sp, #3
                                   1638 ;src/main.c:419: if (dynamic_metasprite.data_0 & ~BITMASK_DYNAMIC_METASPRITE_UNFOLD) {
      0006F8 21r7Br01              1639 	ld	hl, #(_dynamic_metasprite + 0x000d)
      0006FB 4E                    1640 	ld	c, (hl)
      0006FC 79                    1641 	ld	a, c
      0006FD E6 7F                 1642 	and	a, #0x7f
      0006FF 28 06                 1643 	jr	Z, 00104$
                                   1644 ;src/main.c:420: dynamic_metasprite.data_0--;
      000701 0D                    1645 	dec	c
      000702 21r7Br01              1646 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000705 71                    1647 	ld	(hl), c
      000706 C9                    1648 	ret
      000707                       1649 00104$:
                                   1650 ;src/main.c:422: if (cursor.card_to_show)
      000707 21r84r01              1651 	ld	hl, #(_cursor + 0x0002)
      00070A 2A                    1652 	ld	a, (hl+)
      00070B 66                    1653 	ld	h, (hl)
      00070C 6F                    1654 	ld	l,a
      00070D B4                    1655 	or	a,h
      00070E 28 42                 1656 	jr	Z, 00102$
                                   1657 ;src/main.c:423: draw_card(dynamic_metasprite.src[0] / 8u, dynamic_metasprite.src[1] / 8u - 1u, cursor.card_to_show->data);
      000710 23                    1658 	inc	hl
      000711 23                    1659 	inc	hl
      000712 4E                    1660 	ld	c, (hl)
      000713 21r70r01              1661 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000716 2A                    1662 	ld	a, (hl+)
      000717 66                    1663 	ld	h, (hl)
      000718 6F                    1664 	ld	l, a
      000719 CB 3C                 1665 	srl	h
      00071B CB 1D                 1666 	rr	l
      00071D CB 3C                 1667 	srl	h
      00071F CB 1D                 1668 	rr	l
      000721 CB 3C                 1669 	srl	h
      000723 CB 1D                 1670 	rr	l
      000725 45                    1671 	ld	b, l
      000726 05                    1672 	dec	b
      000727 21r6Er01              1673 	ld	hl, #_dynamic_metasprite
      00072A 2A                    1674 	ld	a, (hl+)
      00072B 66                    1675 	ld	h, (hl)
      00072C 57                    1676 	ld	d, a
      00072D CB 3C                 1677 	srl	h
      00072F CB 1A                 1678 	rr	d
      000731 CB 3C                 1679 	srl	h
      000733 CB 1A                 1680 	rr	d
      000735 CB 3C                 1681 	srl	h
      000737 CB 1A                 1682 	rr	d
                                   1683 ;src/main.c:228: draw_card_top(x, y, card_data);
      000739 C5                    1684 	push	bc
      00073A D5                    1685 	push	de
      00073B 79                    1686 	ld	a, c
      00073C F5                    1687 	push	af
      00073D 33                    1688 	inc	sp
      00073E 4A                    1689 	ld	c, d
      00073F C5                    1690 	push	bc
      000740 CDr1Cr02              1691 	call	_draw_card_top
      000743 E8 03                 1692 	add	sp, #3
      000745 D1                    1693 	pop	de
      000746 C1                    1694 	pop	bc
                                   1695 ;src/main.c:229: draw_card_bottom(x, y + 1u, card_data);
      000747 04                    1696 	inc	b
      000748 79                    1697 	ld	a, c
      000749 F5                    1698 	push	af
      00074A 33                    1699 	inc	sp
      00074B 4A                    1700 	ld	c, d
      00074C C5                    1701 	push	bc
      00074D CDr88r02              1702 	call	_draw_card_bottom
      000750 E8 03                 1703 	add	sp, #3
                                   1704 ;src/main.c:423: draw_card(dynamic_metasprite.src[0] / 8u, dynamic_metasprite.src[1] / 8u - 1u, cursor.card_to_show->data);
      000752                       1705 00102$:
                                   1706 ;src/main.c:424: dynamic_metasprite.dist[0] = (INT16)dynamic_metasprite.data_1 - dynamic_metasprite.src[0];
      000752 FAr7Cr01              1707 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      000755 4F                    1708 	ld	c, a
      000756 06 00                 1709 	ld	b, #0x00
      000758 21r6Er01              1710 	ld	hl, #_dynamic_metasprite
      00075B 2A                    1711 	ld	a, (hl+)
      00075C 66                    1712 	ld	h, (hl)
      00075D 6F                    1713 	ld	l, a
      00075E 79                    1714 	ld	a, c
      00075F 95                    1715 	sub	a, l
      000760 4F                    1716 	ld	c, a
      000761 78                    1717 	ld	a, b
      000762 9C                    1718 	sbc	a, h
      000763 47                    1719 	ld	b, a
      000764 21r72r01              1720 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000767 79                    1721 	ld	a, c
      000768 22                    1722 	ld	(hl+), a
      000769 70                    1723 	ld	(hl), b
                                   1724 ;src/main.c:425: dynamic_metasprite.dist[1] = (INT16)dynamic_metasprite.data_2 - dynamic_metasprite.src[1];
      00076A FAr7Dr01              1725 	ld	a, (#(_dynamic_metasprite + 0x000f) + 0)
      00076D 4F                    1726 	ld	c, a
      00076E 06 00                 1727 	ld	b, #0x00
      000770 21r70r01              1728 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000773 2A                    1729 	ld	a, (hl+)
      000774 66                    1730 	ld	h, (hl)
      000775 6F                    1731 	ld	l, a
      000776 79                    1732 	ld	a, c
      000777 95                    1733 	sub	a, l
      000778 4F                    1734 	ld	c, a
      000779 78                    1735 	ld	a, b
      00077A 9C                    1736 	sbc	a, h
      00077B 47                    1737 	ld	b, a
      00077C 21r74r01              1738 	ld	hl, #(_dynamic_metasprite + 0x0006)
      00077F 71                    1739 	ld	(hl), c
      000780 23                    1740 	inc	hl
      000781 70                    1741 	ld	(hl), b
                                   1742 ;src/main.c:426: dynamic_metasprite.target_frames = MOVE_TARGET_FRAMES;
      000782 21r76r01              1743 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000785 36 10                 1744 	ld	(hl), #0x10
                                   1745 ;src/main.c:427: dynamic_metasprite.callback = &dynamic_metasprite_move_stack_callback;
      000787 21r80r01              1746 	ld	hl, #(_dynamic_metasprite + 0x0012)
      00078A 36r43                 1747 	ld	(hl), #<(_dynamic_metasprite_move_stack_callback)
      00078C 23                    1748 	inc	hl
      00078D 36s06                 1749 	ld	(hl), #>(_dynamic_metasprite_move_stack_callback)
                                   1750 ;src/main.c:430: }
      00078F C9                    1751 	ret
                                   1752 ;src/main.c:432: void dynamic_metasprite_fold(const UINT8 top_card_data, const UINT8 src_x, const UINT8 src_y, const UINT8 dest_x, const UINT8 dest_y, const UINT8 stack_height, const Card *base_card, const UINT8 unfold)
                                   1753 ;	---------------------------------
                                   1754 ; Function dynamic_metasprite_fold
                                   1755 ; ---------------------------------
      000790                       1756 _dynamic_metasprite_fold::
                                   1757 ;src/main.c:434: set_metasprite_card(top_card_data);
      000790 F8 02                 1758 	ldhl	sp,	#2
      000792 7E                    1759 	ld	a, (hl)
      000793 F5                    1760 	push	af
      000794 33                    1761 	inc	sp
      000795 CDr0Cr05              1762 	call	_set_metasprite_card
      000798 33                    1763 	inc	sp
                                   1764 ;src/main.c:436: dynamic_metasprite.metasprite = metasprite_custom_2x3;
      000799 21r78r01              1765 	ld	hl, #(_dynamic_metasprite + 0x000a)
      00079C 36r00                 1766 	ld	(hl), #<(_metasprite_custom_2x3)
      00079E 23                    1767 	inc	hl
      00079F 36s00                 1768 	ld	(hl), #>(_metasprite_custom_2x3)
                                   1769 ;src/main.c:437: dynamic_metasprite.metasprite_offset = OFFSET_SPRITE_CARD;
      0007A1 21r7Ar01              1770 	ld	hl, #(_dynamic_metasprite + 0x000c)
      0007A4 36 09                 1771 	ld	(hl), #0x09
                                   1772 ;src/main.c:439: dynamic_metasprite.data_1 = dest_x;
      0007A6 11r7Cr01              1773 	ld	de, #(_dynamic_metasprite + 0x000e)
      0007A9 F8 05                 1774 	ldhl	sp,	#5
      0007AB 7E                    1775 	ld	a, (hl)
      0007AC 12                    1776 	ld	(de), a
                                   1777 ;src/main.c:440: dynamic_metasprite.data_2 = dest_y;
      0007AD 11r7Dr01              1778 	ld	de, #(_dynamic_metasprite + 0x000f)
      0007B0 23                    1779 	inc	hl
      0007B1 7E                    1780 	ld	a, (hl)
      0007B2 12                    1781 	ld	(de), a
                                   1782 ;src/main.c:441: dynamic_metasprite.data_ptr = base_card;
      0007B3 F8 08                 1783 	ldhl	sp,#8
      0007B5 2A                    1784 	ld	a, (hl+)
      0007B6 4F                    1785 	ld	c, a
      0007B7 46                    1786 	ld	b, (hl)
      0007B8 21r7Er01              1787 	ld	hl, #(_dynamic_metasprite + 0x0010)
      0007BB 79                    1788 	ld	a, c
      0007BC 22                    1789 	ld	(hl+), a
      0007BD 70                    1790 	ld	(hl), b
                                   1791 ;src/main.c:443: dynamic_metasprite.src[0] = src_x;
      0007BE F8 03                 1792 	ldhl	sp,	#3
      0007C0 4E                    1793 	ld	c, (hl)
      0007C1 06 00                 1794 	ld	b, #0x00
      0007C3 21r6Er01              1795 	ld	hl, #_dynamic_metasprite
      0007C6 79                    1796 	ld	a, c
      0007C7 22                    1797 	ld	(hl+), a
      0007C8 70                    1798 	ld	(hl), b
                                   1799 ;src/main.c:444: dynamic_metasprite.src[1] = src_y + 8u;
      0007C9 F8 04                 1800 	ldhl	sp,	#4
      0007CB 4E                    1801 	ld	c, (hl)
      0007CC 06 00                 1802 	ld	b, #0x00
      0007CE 79                    1803 	ld	a, c
      0007CF C6 08                 1804 	add	a, #0x08
      0007D1 4F                    1805 	ld	c, a
      0007D2 30 01                 1806 	jr	NC, 00110$
      0007D4 04                    1807 	inc	b
      0007D5                       1808 00110$:
      0007D5 21r70r01              1809 	ld	hl, #(_dynamic_metasprite + 0x0002)
      0007D8 79                    1810 	ld	a, c
      0007D9 22                    1811 	ld	(hl+), a
      0007DA 70                    1812 	ld	(hl), b
                                   1813 ;src/main.c:446: dynamic_metasprite.data_0 = (stack_height - 1u) | unfold;
      0007DB 01r7Br01              1814 	ld	bc, #_dynamic_metasprite + 13
      0007DE F8 07                 1815 	ldhl	sp,	#7
      0007E0 7E                    1816 	ld	a, (hl)
      0007E1 3D                    1817 	dec	a
      0007E2 F8 0A                 1818 	ldhl	sp,	#10
      0007E4 B6                    1819 	or	a, (hl)
      0007E5 02                    1820 	ld	(bc), a
                                   1821 ;src/main.c:448: flags |= FLAG_PLAYING_ANIMATION;
      0007E6 21r6Br01              1822 	ld	hl, #_flags
      0007E9 7E                    1823 	ld	a, (hl)
      0007EA F6 04                 1824 	or	a, #0x04
      0007EC 77                    1825 	ld	(hl), a
                                   1826 ;src/main.c:450: if (stack_height > 1) {
      0007ED 3E 01                 1827 	ld	a, #0x01
      0007EF F8 07                 1828 	ldhl	sp,	#7
      0007F1 96                    1829 	sub	a, (hl)
      0007F2 D2r9Dr06              1830 	jp	NC,_dynamic_metasprite_fold_callback
                                   1831 ;src/main.c:451: dynamic_metasprite.dist[0] = 0;
      0007F5 21r72r01              1832 	ld	hl, #(_dynamic_metasprite + 0x0004)
      0007F8 AF                    1833 	xor	a, a
      0007F9 22                    1834 	ld	(hl+), a
      0007FA 77                    1835 	ld	(hl), a
                                   1836 ;src/main.c:452: dynamic_metasprite.dist[1] = -8;
      0007FB 21r74r01              1837 	ld	hl, #(_dynamic_metasprite + 0x0006)
      0007FE 36 F8                 1838 	ld	(hl), #0xf8
      000800 23                    1839 	inc	hl
      000801 36 FF                 1840 	ld	(hl), #0xff
                                   1841 ;src/main.c:453: dynamic_metasprite.target_frames = FOLD_TARGET_FRAMES;
      000803 21r76r01              1842 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000806 36 10                 1843 	ld	(hl), #0x10
                                   1844 ;src/main.c:454: dynamic_metasprite.callback = &dynamic_metasprite_fold_callback;
      000808 21r80r01              1845 	ld	hl, #(_dynamic_metasprite + 0x0012)
      00080B 36r9D                 1846 	ld	(hl), #<(_dynamic_metasprite_fold_callback)
      00080D 23                    1847 	inc	hl
      00080E 36s06                 1848 	ld	(hl), #>(_dynamic_metasprite_fold_callback)
                                   1849 ;src/main.c:456: dynamic_metasprite_fold_callback();
                                   1850 ;src/main.c:457: }
      000810 C3r9Dr06              1851 	jp  _dynamic_metasprite_fold_callback
                                   1852 ;src/main.c:459: void pile_append_cursor_stack(Pile *pile)
                                   1853 ;	---------------------------------
                                   1854 ; Function pile_append_cursor_stack
                                   1855 ; ---------------------------------
      000813                       1856 _pile_append_cursor_stack::
      000813 E8 F6                 1857 	add	sp, #-10
                                   1858 ;src/main.c:461: if (pile->height)
      000815 F8 0C                 1859 	ldhl	sp,	#12
      000817 2A                    1860 	ld	a, (hl+)
      000818 5E                    1861 	ld	e, (hl)
      000819 F8 06                 1862 	ldhl	sp,	#6
      00081B 22                    1863 	ld	(hl+), a
                                   1864 ;c
      00081C 7B                    1865 	ld	a, e
      00081D 32                    1866 	ld	(hl-), a
      00081E 2A                    1867 	ld	a, (hl+)
      00081F 5F                    1868 	ld	e, a
      000820 56                    1869 	ld	d, (hl)
      000821 21 04 00              1870 	ld	hl, #0x0004
      000824 19                    1871 	add	hl, de
      000825 E5                    1872 	push	hl
      000826 7D                    1873 	ld	a, l
      000827 F8 04                 1874 	ldhl	sp,	#4
      000829 77                    1875 	ld	(hl), a
      00082A E1                    1876 	pop	hl
      00082B 7C                    1877 	ld	a, h
      00082C F8 03                 1878 	ldhl	sp,	#3
      00082E 32                    1879 	ld	(hl-), a
      00082F 2A                    1880 	ld	a, (hl+)
      000830 5F                    1881 	ld	e, a
      000831 56                    1882 	ld	d, (hl)
      000832 1A                    1883 	ld	a, (de)
      000833 4F                    1884 	ld	c, a
                                   1885 ;src/main.c:462: pile->top->next_card = cursor.held_card;
                                   1886 ;c
      000834 F8 06                 1887 	ldhl	sp,#6
      000836 2A                    1888 	ld	a, (hl+)
      000837 5F                    1889 	ld	e, a
      000838 56                    1890 	ld	d, (hl)
      000839 21 02 00              1891 	ld	hl, #0x0002
      00083C 19                    1892 	add	hl, de
      00083D E5                    1893 	push	hl
      00083E 7D                    1894 	ld	a, l
      00083F F8 0A                 1895 	ldhl	sp,	#10
      000841 77                    1896 	ld	(hl), a
      000842 E1                    1897 	pop	hl
      000843 7C                    1898 	ld	a, h
      000844 F8 09                 1899 	ldhl	sp,	#9
      000846 77                    1900 	ld	(hl), a
                                   1901 ;src/main.c:461: if (pile->height)
      000847 79                    1902 	ld	a, c
      000848 B7                    1903 	or	a, a
      000849 28 1B                 1904 	jr	Z, 00102$
                                   1905 ;src/main.c:462: pile->top->next_card = cursor.held_card;
      00084B 2B                    1906 	dec	hl
      00084C 2A                    1907 	ld	a, (hl+)
      00084D 5F                    1908 	ld	e, a
      00084E 56                    1909 	ld	d, (hl)
      00084F 1A                    1910 	ld	a, (de)
      000850 F8 06                 1911 	ldhl	sp,	#6
      000852 22                    1912 	ld	(hl+), a
      000853 13                    1913 	inc	de
      000854 1A                    1914 	ld	a, (de)
      000855 77                    1915 	ld	(hl), a
      000856 21r82r01              1916 	ld	hl, #_cursor
      000859 2A                    1917 	ld	a, (hl+)
      00085A 4F                    1918 	ld	c, a
      00085B 46                    1919 	ld	b, (hl)
      00085C F8 06                 1920 	ldhl	sp,	#6
      00085E 2A                    1921 	ld	a, (hl+)
      00085F 66                    1922 	ld	h, (hl)
      000860 6F                    1923 	ld	l, a
      000861 79                    1924 	ld	a, c
      000862 22                    1925 	ld	(hl+), a
      000863 70                    1926 	ld	(hl), b
      000864 18 0E                 1927 	jr	00103$
      000866                       1928 00102$:
                                   1929 ;src/main.c:464: pile->base = cursor.held_card;
      000866 21r82r01              1930 	ld	hl, #_cursor
      000869 2A                    1931 	ld	a, (hl+)
      00086A 4F                    1932 	ld	c, a
      00086B 46                    1933 	ld	b, (hl)
      00086C F8 06                 1934 	ldhl	sp,	#6
      00086E 2A                    1935 	ld	a, (hl+)
      00086F 66                    1936 	ld	h, (hl)
      000870 6F                    1937 	ld	l, a
      000871 79                    1938 	ld	a, c
      000872 22                    1939 	ld	(hl+), a
      000873 70                    1940 	ld	(hl), b
      000874                       1941 00103$:
                                   1942 ;src/main.c:466: Pile *src_pile = IDX_PTR(piles, cursor.pile_idx);
      000874 01r38r01              1943 	ld	bc, #_piles+0
      000877 FAr88r01              1944 	ld	a, (#(_cursor + 0x0006) + 0)
      00087A 5F                    1945 	ld	e, a
      00087B 16 00                 1946 	ld	d, #0x00
      00087D 6B                    1947 	ld	l, e
      00087E 62                    1948 	ld	h, d
      00087F 29                    1949 	add	hl, hl
      000880 29                    1950 	add	hl, hl
      000881 19                    1951 	add	hl, de
      000882 09                    1952 	add	hl, bc
      000883 4D                    1953 	ld	c, l
      000884 7C                    1954 	ld	a, h
      000885 F8 00                 1955 	ldhl	sp,	#0
      000887 71                    1956 	ld	(hl), c
      000888 23                    1957 	inc	hl
      000889 77                    1958 	ld	(hl), a
                                   1959 ;src/main.c:467: Card *top_card = cursor.held_card;
      00088A 21r82r01              1960 	ld	hl, #_cursor
      00088D 2A                    1961 	ld	a, (hl+)
      00088E 4F                    1962 	ld	c, a
      00088F 46                    1963 	ld	b, (hl)
                                   1964 ;src/main.c:468: while (top_card->next_card)
      000890                       1965 00104$:
      000890 69                    1966 	ld	l, c
      000891 60                    1967 	ld	h, b
      000892 2A                    1968 	ld	a, (hl+)
      000893 66                    1969 	ld	h, (hl)
      000894 6F                    1970 	ld	l,a
      000895 B4                    1971 	or	a,h
      000896 28 04                 1972 	jr	Z, 00106$
                                   1973 ;src/main.c:469: top_card = top_card->next_card;
      000898 4D                    1974 	ld	c, l
      000899 44                    1975 	ld	b, h
      00089A 18 F4                 1976 	jr	00104$
      00089C                       1977 00106$:
                                   1978 ;src/main.c:470: pile->top = top_card;
      00089C F8 08                 1979 	ldhl	sp,	#8
      00089E 2A                    1980 	ld	a, (hl+)
      00089F 66                    1981 	ld	h, (hl)
      0008A0 6F                    1982 	ld	l, a
      0008A1 79                    1983 	ld	a, c
      0008A2 22                    1984 	ld	(hl+), a
      0008A3 70                    1985 	ld	(hl), b
                                   1986 ;src/main.c:471: if (cursor.hand_pile_idx != cursor.pile_idx) {
      0008A4 FAr87r01              1987 	ld	a, (#(_cursor + 0x0005) + 0)
      0008A7 F8 08                 1988 	ldhl	sp,	#8
      0008A9 77                    1989 	ld	(hl), a
      0008AA FAr88r01              1990 	ld	a, (#(_cursor + 0x0006) + 0)
      0008AD F8 09                 1991 	ldhl	sp,	#9
      0008AF 77                    1992 	ld	(hl), a
                                   1993 ;src/main.c:478: cursor.held_stack_size,
                                   1994 ;src/main.c:471: if (cursor.hand_pile_idx != cursor.pile_idx) {
      0008B0 F8 08                 1995 	ldhl	sp,	#8
      0008B2 2A                    1996 	ld	a, (hl+)
      0008B3 96                    1997 	sub	a, (hl)
      0008B4 28 76                 1998 	jr	Z, 00110$
                                   1999 ;src/main.c:472: if (cursor.card_to_show)
      0008B6 21r84r01              2000 	ld	hl, #_cursor + 2
      0008B9 2A                    2001 	ld	a, (hl+)
      0008BA 66                    2002 	ld	h, (hl)
      0008BB 6F                    2003 	ld	l,a
      0008BC B4                    2004 	or	a,h
      0008BD 28 04                 2005 	jr	Z, 00108$
                                   2006 ;src/main.c:473: cursor.card_to_show->data |= BITMASK_DATA_VISIBLE;
      0008BF 23                    2007 	inc	hl
      0008C0 23                    2008 	inc	hl
      0008C1 CB F6                 2009 	set	6, (hl)
      0008C3                       2010 00108$:
                                   2011 ;src/main.c:479: cursor.held_card,
      0008C3 11r82r01              2012 	ld	de, #_cursor
      0008C6 1A                    2013 	ld	a, (de)
      0008C7 F8 04                 2014 	ldhl	sp,	#4
      0008C9 22                    2015 	ld	(hl+), a
      0008CA 13                    2016 	inc	de
      0008CB 1A                    2017 	ld	a, (de)
      0008CC 77                    2018 	ld	(hl), a
                                   2019 ;src/main.c:478: cursor.held_stack_size,
      0008CD FAr86r01              2020 	ld	a, (#(_cursor + 0x0004) + 0)
      0008D0 F8 06                 2021 	ldhl	sp,	#6
      0008D2 77                    2022 	ld	(hl), a
                                   2023 ;src/main.c:477: (pile->height + SCOREBAR_HEIGHT + 1u) * 8u,
      0008D3 F8 02                 2024 	ldhl	sp,#2
      0008D5 2A                    2025 	ld	a, (hl+)
      0008D6 5F                    2026 	ld	e, a
      0008D7 56                    2027 	ld	d, (hl)
      0008D8 1A                    2028 	ld	a, (de)
      0008D9 C6 04                 2029 	add	a, #0x04
      0008DB 87                    2030 	add	a, a
      0008DC 87                    2031 	add	a, a
      0008DD 87                    2032 	add	a, a
      0008DE F8 07                 2033 	ldhl	sp,	#7
      0008E0 77                    2034 	ld	(hl), a
                                   2035 ;src/main.c:476: (src_pile->height + SCOREBAR_HEIGHT + cursor.held_stack_size) * 8u, cursor.hand_pile_idx * 16u,
      0008E1 FAr87r01              2036 	ld	a, (#(_cursor + 0x0005) + 0)
      0008E4 CB 37                 2037 	swap	a
      0008E6 E6 F0                 2038 	and	a, #0xf0
      0008E8 23                    2039 	inc	hl
      0008E9 77                    2040 	ld	(hl), a
                                   2041 ;c
      0008EA D1                    2042 	pop	de
      0008EB D5                    2043 	push	de
      0008EC 21 04 00              2044 	ld	hl, #0x0004
      0008EF 19                    2045 	add	hl, de
      0008F0 5D                    2046 	ld	e, l
      0008F1 54                    2047 	ld	d, h
      0008F2 1A                    2048 	ld	a, (de)
      0008F3 C6 03                 2049 	add	a, #0x03
      0008F5 F8 06                 2050 	ldhl	sp,	#6
      0008F7 86                    2051 	add	a, (hl)
      0008F8 87                    2052 	add	a, a
      0008F9 87                    2053 	add	a, a
      0008FA 87                    2054 	add	a, a
      0008FB F8 09                 2055 	ldhl	sp,	#9
      0008FD 77                    2056 	ld	(hl), a
                                   2057 ;src/main.c:475: cursor.pile_idx * 16u,
      0008FE FAr88r01              2058 	ld	a, (#(_cursor + 0x0006) + 0)
      000901 CB 37                 2059 	swap	a
      000903 E6 F0                 2060 	and	a, #0xf0
      000905 5F                    2061 	ld	e, a
                                   2062 ;src/main.c:474: dynamic_metasprite_fold(top_card->data,
      000906 03                    2063 	inc	bc
      000907 03                    2064 	inc	bc
      000908 0A                    2065 	ld	a, (bc)
      000909 4F                    2066 	ld	c, a
      00090A 3E 80                 2067 	ld	a, #0x80
      00090C F5                    2068 	push	af
      00090D 33                    2069 	inc	sp
      00090E F8 05                 2070 	ldhl	sp,	#5
      000910 2A                    2071 	ld	a, (hl+)
      000911 66                    2072 	ld	h, (hl)
      000912 6F                    2073 	ld	l, a
      000913 E5                    2074 	push	hl
      000914 F8 09                 2075 	ldhl	sp,	#9
      000916 7E                    2076 	ld	a, (hl)
      000917 F5                    2077 	push	af
      000918 33                    2078 	inc	sp
      000919 23                    2079 	inc	hl
      00091A 7E                    2080 	ld	a, (hl)
      00091B F5                    2081 	push	af
      00091C 33                    2082 	inc	sp
      00091D 23                    2083 	inc	hl
      00091E 7E                    2084 	ld	a, (hl)
      00091F F5                    2085 	push	af
      000920 33                    2086 	inc	sp
      000921 23                    2087 	inc	hl
      000922 56                    2088 	ld	d, (hl)
      000923 D5                    2089 	push	de
      000924 79                    2090 	ld	a, c
      000925 F5                    2091 	push	af
      000926 33                    2092 	inc	sp
      000927 CDr90r07              2093 	call	_dynamic_metasprite_fold
      00092A E8 09                 2094 	add	sp, #9
      00092C                       2095 00110$:
                                   2096 ;src/main.c:484: pile->height += cursor.held_stack_size;
      00092C F8 02                 2097 	ldhl	sp,#2
      00092E 2A                    2098 	ld	a, (hl+)
      00092F 5F                    2099 	ld	e, a
      000930 56                    2100 	ld	d, (hl)
      000931 1A                    2101 	ld	a, (de)
      000932 21r86r01              2102 	ld	hl, #(_cursor + 0x0004)
      000935 4E                    2103 	ld	c, (hl)
      000936 81                    2104 	add	a, c
      000937 4F                    2105 	ld	c, a
      000938 F8 02                 2106 	ldhl	sp,	#2
      00093A 2A                    2107 	ld	a, (hl+)
      00093B 66                    2108 	ld	h, (hl)
      00093C 6F                    2109 	ld	l, a
      00093D 71                    2110 	ld	(hl), c
                                   2111 ;src/main.c:485: cursor.held_card = NULL;
      00093E 21r82r01              2112 	ld	hl, #_cursor
      000941 AF                    2113 	xor	a, a
      000942 22                    2114 	ld	(hl+), a
      000943 77                    2115 	ld	(hl), a
                                   2116 ;src/main.c:486: cursor.pile_idx = cursor.hand_pile_idx;
      000944 FAr87r01              2117 	ld	a, (#(_cursor + 0x0005) + 0)
      000947 EAr88r01              2118 	ld	(#(_cursor + 0x0006)),a
                                   2119 ;src/main.c:487: cursor.height = pile->height;
      00094A 21r89r01              2120 	ld	hl, #(_cursor + 0x0007)
      00094D 71                    2121 	ld	(hl), c
                                   2122 ;src/main.c:488: flags |= FLAG_REDRAW_CURSOR;
      00094E 21r6Br01              2123 	ld	hl, #_flags
      000951 7E                    2124 	ld	a, (hl)
      000952 F6 01                 2125 	or	a, #0x01
      000954 77                    2126 	ld	(hl), a
                                   2127 ;src/main.c:489: }
      000955 E8 0A                 2128 	add	sp, #10
      000957 C9                    2129 	ret
                                   2130 ;src/main.c:611: void main(void)
                                   2131 ;	---------------------------------
                                   2132 ; Function main
                                   2133 ; ---------------------------------
      000958                       2134 _main::
      000958 E8 F8                 2135 	add	sp, #-8
                                   2136 ;src/main.c:613: initrand(DIV_REG);
      00095A F0r00                 2137 	ldh	a, (_DIV_REG+0)
      00095C 4F                    2138 	ld	c, a
      00095D 06 00                 2139 	ld	b, #0x00
      00095F C5                    2140 	push	bc
      000960 CDr00r00              2141 	call	_initrand
      000963 E8 02                 2142 	add	sp, #2
                                   2143 ;src/main.c:615: set_bkg_data(OFFSET_BKG_CARD, N_CARD, card_textures);
      000965 21r00r00              2144 	ld	hl, #_card_textures
      000968 E5                    2145 	push	hl
      000969 11 01 2E              2146 	ld	de, #0x2e01
      00096C D5                    2147 	push	de
      00096D CDr00r00              2148 	call	_set_bkg_data
      000970 E8 04                 2149 	add	sp, #4
                                   2150 ;src/main.c:617: init_deck();
      000972 CDr1Er00              2151 	call	_init_deck
                                   2152 ;src/main.c:619: draw_background();
      000975 CDrBAr03              2153 	call	_draw_background
                                   2154 ;src/main.c:620: SHOW_BKG;
      000978 F0r00                 2155 	ldh	a, (_LCDC_REG+0)
      00097A F6 01                 2156 	or	a, #0x01
      00097C E0r00                 2157 	ldh	(_LCDC_REG+0),a
                                   2158 ;src/main.c:622: set_sprite_data(OFFSET_SPRITE_CURSOR, N_CURSOR, cursor_textures);
      00097E 21r00r00              2159 	ld	hl, #_cursor_textures
      000981 E5                    2160 	push	hl
      000982 11 01 08              2161 	ld	de, #0x0801
      000985 D5                    2162 	push	de
      000986 CDr00r00              2163 	call	_set_sprite_data
      000989 E8 04                 2164 	add	sp, #4
                                   2165 ;src/main.c:623: set_sprite_data(OFFSET_SPRITE_CARD, N_CARD, card_textures);
      00098B 21r00r00              2166 	ld	hl, #_card_textures
      00098E E5                    2167 	push	hl
      00098F 11 09 2E              2168 	ld	de, #0x2e09
      000992 D5                    2169 	push	de
      000993 CDr00r00              2170 	call	_set_sprite_data
      000996 E8 04                 2171 	add	sp, #4
                                   2172 ;src/main.c:624: SHOW_SPRITES;
      000998 F0r00                 2173 	ldh	a, (_LCDC_REG+0)
      00099A F6 02                 2174 	or	a, #0x02
      00099C E0r00                 2175 	ldh	(_LCDC_REG+0),a
                                   2176 ;src/main.c:626: while (1) {
      00099E                       2177 00102$:
                                   2178 ;src/main.c:506: UINT8 input = joypad();
      00099E CDr00r00              2179 	call	_joypad
      0009A1 F8 00                 2180 	ldhl	sp,	#0
      0009A3 73                    2181 	ld	(hl), e
                                   2182 ;src/main.c:507: UINT8 new_input = input & ~prev_input;
      0009A4 FAr8Dr01              2183 	ld	a, (#_main_prev_input_327680_269)
      0009A7 2F                    2184 	cpl
      0009A8 F8 00                 2185 	ldhl	sp,	#0
      0009AA A6                    2186 	and	a, (hl)
      0009AB 23                    2187 	inc	hl
      0009AC 77                    2188 	ld	(hl), a
                                   2189 ;src/main.c:508: if (cursor.held_card) {
      0009AD 21r82r01              2190 	ld	hl, #_cursor
      0009B0 2A                    2191 	ld	a, (hl+)
      0009B1 4F                    2192 	ld	c, a
      0009B2 46                    2193 	ld	b, (hl)
                                   2194 ;src/main.c:509: flags |= FLAG_REDRAW_HAND;
      0009B3 21r6Br01              2195 	ld	hl, #_flags
      0009B6 5E                    2196 	ld	e, (hl)
                                   2197 ;src/main.c:511: && cursor.hand_pile_idx != 0) {
      0009B7 F8 01                 2198 	ldhl	sp,	#1
      0009B9 7E                    2199 	ld	a, (hl)
      0009BA E6 02                 2200 	and	a, #0x02
      0009BC 23                    2201 	inc	hl
      0009BD 77                    2202 	ld	(hl), a
      0009BE AF                    2203 	xor	a, a
      0009BF 23                    2204 	inc	hl
                                   2205 ;src/main.c:514: && cursor.hand_pile_idx < 9) {
      0009C0 32                    2206 	ld	(hl-), a
      0009C1 2B                    2207 	dec	hl
      0009C2 7E                    2208 	ld	a, (hl)
      0009C3 E6 01                 2209 	and	a, #0x01
      0009C5 F8 04                 2210 	ldhl	sp,	#4
      0009C7 77                    2211 	ld	(hl), a
      0009C8 AF                    2212 	xor	a, a
      0009C9 23                    2213 	inc	hl
      0009CA 77                    2214 	ld	(hl), a
                                   2215 ;src/main.c:518: && ~flags & FLAG_PLAYING_ANIMATION) {
      0009CB F8 01                 2216 	ldhl	sp,	#1
      0009CD 7E                    2217 	ld	a, (hl)
      0009CE E6 10                 2218 	and	a, #0x10
      0009D0 F8 06                 2219 	ldhl	sp,	#6
      0009D2 77                    2220 	ld	(hl), a
      0009D3 AF                    2221 	xor	a, a
      0009D4 23                    2222 	inc	hl
      0009D5 77                    2223 	ld	(hl), a
                                   2224 ;src/main.c:508: if (cursor.held_card) {
      0009D6 78                    2225 	ld	a, b
      0009D7 B1                    2226 	or	a, c
      0009D8 CAr95r0A              2227 	jp	Z, 00170$
                                   2228 ;src/main.c:509: flags |= FLAG_REDRAW_HAND;
      0009DB 7B                    2229 	ld	a, e
      0009DC F6 02                 2230 	or	a, #0x02
      0009DE EAr6Br01              2231 	ld	(#_flags),a
                                   2232 ;src/main.c:511: && cursor.hand_pile_idx != 0) {
      0009E1 F8 03                 2233 	ldhl	sp,	#3
      0009E3 3A                    2234 	ld	a, (hl-)
      0009E4 B6                    2235 	or	a, (hl)
      0009E5 28 0B                 2236 	jr	Z, 00109$
      0009E7 01r87r01              2237 	ld	bc, #_cursor+5
      0009EA 0A                    2238 	ld	a, (bc)
      0009EB B7                    2239 	or	a, a
      0009EC 28 04                 2240 	jr	Z, 00109$
                                   2241 ;src/main.c:512: cursor.hand_pile_idx--;
      0009EE 3D                    2242 	dec	a
      0009EF 02                    2243 	ld	(bc), a
      0009F0 18 10                 2244 	jr	00110$
      0009F2                       2245 00109$:
                                   2246 ;src/main.c:514: && cursor.hand_pile_idx < 9) {
      0009F2 F8 05                 2247 	ldhl	sp,	#5
      0009F4 3A                    2248 	ld	a, (hl-)
      0009F5 B6                    2249 	or	a, (hl)
      0009F6 28 0A                 2250 	jr	Z, 00110$
      0009F8 01r87r01              2251 	ld	bc, #_cursor+5
      0009FB 0A                    2252 	ld	a, (bc)
      0009FC FE 09                 2253 	cp	a, #0x09
      0009FE 30 02                 2254 	jr	NC, 00110$
                                   2255 ;src/main.c:515: cursor.hand_pile_idx++;
      000A00 3C                    2256 	inc	a
      000A01 02                    2257 	ld	(bc), a
      000A02                       2258 00110$:
                                   2259 ;src/main.c:518: && ~flags & FLAG_PLAYING_ANIMATION) {
      000A02 F8 07                 2260 	ldhl	sp,	#7
      000A04 3A                    2261 	ld	a, (hl-)
      000A05 B6                    2262 	or	a, (hl)
      000A06 CArE2r0C              2263 	jp	Z, 00171$
      000A09 FAr6Br01              2264 	ld	a, (#_flags)
      000A0C 06 00                 2265 	ld	b, #0x00
      000A0E 2F                    2266 	cpl
      000A0F 4F                    2267 	ld	c, a
      000A10 78                    2268 	ld	a, b
      000A11 2F                    2269 	cpl
      000A12 CB 51                 2270 	bit	2, c
      000A14 CArE2r0C              2271 	jp	Z,00171$
                                   2272 ;src/main.c:493: Pile *pile = IDX_PTR(piles, cursor.hand_pile_idx);
      000A17 21r87r01              2273 	ld	hl, #_cursor + 5
      000A1A 4E                    2274 	ld	c, (hl)
      000A1B 06 00                 2275 	ld	b, #0x00
      000A1D 69                    2276 	ld	l, c
      000A1E 60                    2277 	ld	h, b
      000A1F 29                    2278 	add	hl, hl
      000A20 29                    2279 	add	hl, hl
      000A21 09                    2280 	add	hl, bc
      000A22 3Er38                 2281 	ld	a, #<(_piles)
      000A24 85                    2282 	add	a, l
      000A25 47                    2283 	ld	b, a
      000A26 3Es01                 2284 	ld	a, #>(_piles)
      000A28 8C                    2285 	adc	a, h
      000A29 F8 06                 2286 	ldhl	sp,	#6
      000A2B 70                    2287 	ld	(hl), b
      000A2C 23                    2288 	inc	hl
      000A2D 77                    2289 	ld	(hl), a
                                   2290 ;src/main.c:494: if (cursor.hand_pile_idx == cursor.pile_idx) {
      000A2E FAr88r01              2291 	ld	a, (#(_cursor + 0x0006) + 0)
      000A31 91                    2292 	sub	a, c
      000A32 20 0D                 2293 	jr	NZ, 00116$
                                   2294 ;src/main.c:495: pile_append_cursor_stack(pile);
      000A34 2B                    2295 	dec	hl
      000A35 2A                    2296 	ld	a, (hl+)
      000A36 66                    2297 	ld	h, (hl)
      000A37 6F                    2298 	ld	l, a
      000A38 E5                    2299 	push	hl
      000A39 CDr13r08              2300 	call	_pile_append_cursor_stack
      000A3C E8 02                 2301 	add	sp, #2
      000A3E C3rE2r0C              2302 	jp	00171$
      000A41                       2303 00116$:
                                   2304 ;src/main.c:496: } else if (!pile->height
                                   2305 ;c
      000A41 F8 06                 2306 	ldhl	sp,#6
      000A43 2A                    2307 	ld	a, (hl+)
      000A44 5F                    2308 	ld	e, a
      000A45 56                    2309 	ld	d, (hl)
      000A46 21 04 00              2310 	ld	hl, #0x0004
      000A49 19                    2311 	add	hl, de
      000A4A 4D                    2312 	ld	c, l
      000A4B 44                    2313 	ld	b, h
      000A4C 0A                    2314 	ld	a, (bc)
      000A4D B7                    2315 	or	a, a
      000A4E 28 2B                 2316 	jr	Z, 00114$
                                   2317 ;src/main.c:497: || RANK(pile->top->data) == RANK(cursor.held_card->data) + 1u) {
      000A50 F8 06                 2318 	ldhl	sp,	#6
      000A52 2A                    2319 	ld	a, (hl+)
      000A53 66                    2320 	ld	h, (hl)
      000A54 6F                    2321 	ld	l, a
      000A55 23                    2322 	inc	hl
      000A56 23                    2323 	inc	hl
      000A57 2A                    2324 	ld	a, (hl+)
      000A58 4F                    2325 	ld	c, a
      000A59 46                    2326 	ld	b, (hl)
      000A5A 03                    2327 	inc	bc
      000A5B 03                    2328 	inc	bc
      000A5C 0A                    2329 	ld	a, (bc)
      000A5D E6 0F                 2330 	and	a, #0x0f
      000A5F 4F                    2331 	ld	c, a
      000A60 06 00                 2332 	ld	b, #0x00
      000A62 21r82r01              2333 	ld	hl, #_cursor
      000A65 2A                    2334 	ld	a, (hl+)
      000A66 66                    2335 	ld	h, (hl)
      000A67 6F                    2336 	ld	l, a
      000A68 23                    2337 	inc	hl
      000A69 23                    2338 	inc	hl
      000A6A 7E                    2339 	ld	a, (hl)
      000A6B E6 0F                 2340 	and	a, #0x0f
      000A6D 5F                    2341 	ld	e, a
      000A6E 16 00                 2342 	ld	d, #0x00
      000A70 13                    2343 	inc	de
      000A71 79                    2344 	ld	a, c
      000A72 93                    2345 	sub	a, e
      000A73 C2rE2r0C              2346 	jp	NZ,00171$
      000A76 78                    2347 	ld	a, b
      000A77 92                    2348 	sub	a, d
      000A78 C2rE2r0C              2349 	jp	NZ,00171$
      000A7B                       2350 00114$:
                                   2351 ;src/main.c:498: pile_append_cursor_stack(pile);
      000A7B F8 06                 2352 	ldhl	sp,	#6
      000A7D 2A                    2353 	ld	a, (hl+)
      000A7E 66                    2354 	ld	h, (hl)
      000A7F 6F                    2355 	ld	l, a
      000A80 E5                    2356 	push	hl
      000A81 CDr13r08              2357 	call	_pile_append_cursor_stack
      000A84 E8 02                 2358 	add	sp, #2
                                   2359 ;src/main.c:499: score--;
      000A86 21r6Dr01              2360 	ld	hl, #_score + 1
      000A89 2B                    2361 	dec	hl
      000A8A 2A                    2362 	ld	a, (hl+)
      000A8B 5F                    2363 	ld	e, a
      000A8C 56                    2364 	ld	d, (hl)
      000A8D 1B                    2365 	dec	de
      000A8E 2B                    2366 	dec	hl
      000A8F 7B                    2367 	ld	a, e
      000A90 22                    2368 	ld	(hl+), a
      000A91 72                    2369 	ld	(hl), d
                                   2370 ;src/main.c:519: cursor_place_stack();
      000A92 C3rE2r0C              2371 	jp	00171$
      000A95                       2372 00170$:
                                   2373 ;src/main.c:522: flags |= FLAG_REDRAW_CURSOR;
      000A95 7B                    2374 	ld	a, e
      000A96 F6 01                 2375 	or	a, #0x01
      000A98 EAr6Br01              2376 	ld	(#_flags),a
                                   2377 ;src/main.c:523: if (new_input & J_DOWN) {
      000A9B F8 01                 2378 	ldhl	sp,	#1
      000A9D CB 5E                 2379 	bit	3, (hl)
      000A9F 28 2C                 2380 	jr	Z, 00142$
                                   2381 ;src/main.c:524: if (cursor.pile_idx == PILE_IDX_DECK)
      000AA1 21r88r01              2382 	ld	hl, #_cursor + 6
      000AA4 46                    2383 	ld	b, (hl)
      000AA5 78                    2384 	ld	a, b
                                   2385 ;src/main.c:525: cursor.pile_idx = 0;
      000AA6 D6 0A                 2386 	sub	a,#0x0a
      000AA8 20 03                 2387 	jr	NZ, 00125$
      000AAA 77                    2388 	ld	(hl),a
      000AAB 18 6D                 2389 	jr	00143$
      000AAD                       2390 00125$:
                                   2391 ;src/main.c:526: else if (cursor.height < piles[cursor.pile_idx].height)
      000AAD 21r89r01              2392 	ld	hl, #(_cursor + 0x0007)
      000AB0 4E                    2393 	ld	c, (hl)
      000AB1 58                    2394 	ld	e, b
      000AB2 16 00                 2395 	ld	d, #0x00
      000AB4 6B                    2396 	ld	l, e
      000AB5 62                    2397 	ld	h, d
      000AB6 29                    2398 	add	hl, hl
      000AB7 29                    2399 	add	hl, hl
      000AB8 19                    2400 	add	hl, de
      000AB9 11r38r01              2401 	ld	de, #_piles
      000ABC 19                    2402 	add	hl, de
      000ABD 23                    2403 	inc	hl
      000ABE 23                    2404 	inc	hl
      000ABF 23                    2405 	inc	hl
      000AC0 23                    2406 	inc	hl
      000AC1 46                    2407 	ld	b, (hl)
      000AC2 79                    2408 	ld	a, c
      000AC3 90                    2409 	sub	a, b
      000AC4 30 54                 2410 	jr	NC, 00143$
                                   2411 ;src/main.c:527: cursor.height++;
      000AC6 0C                    2412 	inc	c
      000AC7 21r89r01              2413 	ld	hl, #(_cursor + 0x0007)
      000ACA 71                    2414 	ld	(hl), c
      000ACB 18 4D                 2415 	jr	00143$
      000ACD                       2416 00142$:
                                   2417 ;src/main.c:528: } else if (new_input & J_UP) {
      000ACD F8 01                 2418 	ldhl	sp,	#1
      000ACF CB 56                 2419 	bit	2, (hl)
      000AD1 28 1C                 2420 	jr	Z, 00140$
                                   2421 ;src/main.c:529: if (cursor.height == 0)
      000AD3 FAr89r01              2422 	ld	a, (#(_cursor + 0x0007) + 0)
      000AD6 F8 05                 2423 	ldhl	sp,	#5
      000AD8 77                    2424 	ld	(hl), a
      000AD9 F8 05                 2425 	ldhl	sp,	#5
      000ADB 7E                    2426 	ld	a, (hl)
      000ADC B7                    2427 	or	a, a
      000ADD 20 07                 2428 	jr	NZ, 00129$
                                   2429 ;src/main.c:530: cursor.pile_idx = PILE_IDX_DECK;
      000ADF 21r88r01              2430 	ld	hl, #(_cursor + 0x0006)
      000AE2 36 0A                 2431 	ld	(hl), #0x0a
      000AE4 18 34                 2432 	jr	00143$
      000AE6                       2433 00129$:
                                   2434 ;src/main.c:532: cursor.height--;
      000AE6 F8 05                 2435 	ldhl	sp,	#5
      000AE8 7E                    2436 	ld	a, (hl)
      000AE9 3D                    2437 	dec	a
      000AEA EAr89r01              2438 	ld	(#(_cursor + 0x0007)),a
      000AED 18 2B                 2439 	jr	00143$
      000AEF                       2440 00140$:
                                   2441 ;src/main.c:534: && cursor.pile_idx != 0
      000AEF F8 03                 2442 	ldhl	sp,	#3
      000AF1 3A                    2443 	ld	a, (hl-)
      000AF2 B6                    2444 	or	a, (hl)
      000AF3 28 12                 2445 	jr	Z, 00138$
      000AF5 01r88r01              2446 	ld	bc, #_cursor+6
      000AF8 0A                    2447 	ld	a, (bc)
      000AF9 B7                    2448 	or	a, a
      000AFA 28 0B                 2449 	jr	Z, 00138$
                                   2450 ;src/main.c:535: && cursor.pile_idx != PILE_IDX_DECK) {
      000AFC FE 0A                 2451 	cp	a, #0x0a
      000AFE 28 07                 2452 	jr	Z, 00138$
                                   2453 ;src/main.c:536: cursor.pile_idx--;
      000B00 3D                    2454 	dec	a
      000B01 02                    2455 	ld	(bc), a
                                   2456 ;src/main.c:537: cursor_adjust_height();
      000B02 CDrFFr03              2457 	call	_cursor_adjust_height
      000B05 18 13                 2458 	jr	00143$
      000B07                       2459 00138$:
                                   2460 ;src/main.c:539: && cursor.pile_idx < 9) {
      000B07 F8 05                 2461 	ldhl	sp,	#5
      000B09 3A                    2462 	ld	a, (hl-)
      000B0A B6                    2463 	or	a, (hl)
      000B0B 28 0D                 2464 	jr	Z, 00143$
      000B0D 01r88r01              2465 	ld	bc, #_cursor+6
      000B10 0A                    2466 	ld	a, (bc)
      000B11 FE 09                 2467 	cp	a, #0x09
      000B13 30 05                 2468 	jr	NC, 00143$
                                   2469 ;src/main.c:540: cursor.pile_idx++;
      000B15 3C                    2470 	inc	a
      000B16 02                    2471 	ld	(bc), a
                                   2472 ;src/main.c:541: cursor_adjust_height();
      000B17 CDrFFr03              2473 	call	_cursor_adjust_height
      000B1A                       2474 00143$:
                                   2475 ;src/main.c:544: && ~flags & FLAG_PLAYING_ANIMATION) {
      000B1A F8 07                 2476 	ldhl	sp,	#7
      000B1C 3A                    2477 	ld	a, (hl-)
      000B1D B6                    2478 	or	a, (hl)
      000B1E CArE2r0C              2479 	jp	Z, 00171$
      000B21 FAr6Br01              2480 	ld	a, (#_flags)
      000B24 06 00                 2481 	ld	b, #0x00
      000B26 2F                    2482 	cpl
      000B27 4F                    2483 	ld	c, a
      000B28 78                    2484 	ld	a, b
      000B29 2F                    2485 	cpl
      000B2A CB 51                 2486 	bit	2, c
      000B2C CArE2r0C              2487 	jp	Z,00171$
                                   2488 ;src/main.c:545: if (cursor.pile_idx == PILE_IDX_DECK && top_card_idx != 104u)
      000B2F 21r88r01              2489 	ld	hl, #(_cursor + 0x0006)
      000B32 4E                    2490 	ld	c, (hl)
      000B33 79                    2491 	ld	a, c
      000B34 D6 0A                 2492 	sub	a, #0x0a
      000B36 C2rE4r0B              2493 	jp	NZ,00166$
      000B39 FAr6Ar01              2494 	ld	a, (#_top_card_idx)
      000B3C D6 68                 2495 	sub	a, #0x68
      000B3E CArE4r0B              2496 	jp	Z,00166$
                                   2497 ;src/main.c:347: Pile *pile = IDX_PTR(piles, 0);
      000B41 01r38r01              2498 	ld	bc, #_piles
                                   2499 ;src/main.c:348: for (i = 0; i < 10u; i++) {
      000B44 1E 00                 2500 	ld	e, #0x00
      000B46                       2501 00196$:
                                   2502 ;src/main.c:349: if (!pile->height)
      000B46 21 04 00              2503 	ld	hl, #0x0004
      000B49 09                    2504 	add	hl, bc
      000B4A 7E                    2505 	ld	a, (hl)
      000B4B B7                    2506 	or	a, a
      000B4C CArE2r0C              2507 	jp	Z, 00171$
                                   2508 ;src/main.c:351: pile++;
      000B4F 03                    2509 	inc	bc
      000B50 03                    2510 	inc	bc
      000B51 03                    2511 	inc	bc
      000B52 03                    2512 	inc	bc
      000B53 03                    2513 	inc	bc
                                   2514 ;src/main.c:348: for (i = 0; i < 10u; i++) {
      000B54 1C                    2515 	inc	e
      000B55 7B                    2516 	ld	a, e
      000B56 D6 0A                 2517 	sub	a, #0x0a
      000B58 38 EC                 2518 	jr	C, 00196$
                                   2519 ;src/main.c:354: pile = IDX_PTR(piles, 0);
      000B5A F8 05                 2520 	ldhl	sp,	#5
      000B5C 36r38                 2521 	ld	(hl), #<(_piles)
      000B5E 23                    2522 	inc	hl
      000B5F 36s01                 2523 	ld	(hl), #>(_piles)
                                   2524 ;src/main.c:355: Card *deck_top = IDX_PTR(deck, top_card_idx);
      000B61 21r6Ar01              2525 	ld	hl, #_top_card_idx
      000B64 4E                    2526 	ld	c, (hl)
      000B65 06 00                 2527 	ld	b, #0x00
      000B67 69                    2528 	ld	l, c
      000B68 60                    2529 	ld	h, b
      000B69 29                    2530 	add	hl, hl
      000B6A 09                    2531 	add	hl, bc
      000B6B 01r00r00              2532 	ld	bc,#_deck
      000B6E 09                    2533 	add	hl,bc
      000B6F 4D                    2534 	ld	c, l
      000B70 44                    2535 	ld	b, h
                                   2536 ;src/main.c:356: for (i = 0; i < 10u; i++) {
      000B71 F8 07                 2537 	ldhl	sp,	#7
      000B73 36 0A                 2538 	ld	(hl), #0x0a
      000B75                       2539 00200$:
                                   2540 ;src/main.c:357: pile->top->next_card = deck_top;
                                   2541 ;c
      000B75 F8 05                 2542 	ldhl	sp,#5
      000B77 2A                    2543 	ld	a, (hl+)
      000B78 5F                    2544 	ld	e, a
      000B79 56                    2545 	ld	d, (hl)
      000B7A 21 02 00              2546 	ld	hl, #0x0002
      000B7D 19                    2547 	add	hl, de
      000B7E E5                    2548 	push	hl
      000B7F 7D                    2549 	ld	a, l
      000B80 F8 05                 2550 	ldhl	sp,	#5
      000B82 77                    2551 	ld	(hl), a
      000B83 E1                    2552 	pop	hl
      000B84 7C                    2553 	ld	a, h
      000B85 F8 04                 2554 	ldhl	sp,	#4
      000B87 32                    2555 	ld	(hl-), a
      000B88 2A                    2556 	ld	a, (hl+)
      000B89 5F                    2557 	ld	e, a
      000B8A 56                    2558 	ld	d, (hl)
      000B8B 1A                    2559 	ld	a, (de)
      000B8C 6F                    2560 	ld	l, a
      000B8D 13                    2561 	inc	de
      000B8E 1A                    2562 	ld	a, (de)
      000B8F 67                    2563 	ld	h, a
      000B90 79                    2564 	ld	a, c
      000B91 22                    2565 	ld	(hl+), a
      000B92 70                    2566 	ld	(hl), b
                                   2567 ;src/main.c:358: pile->top = deck_top;
      000B93 F8 03                 2568 	ldhl	sp,	#3
      000B95 2A                    2569 	ld	a, (hl+)
      000B96 66                    2570 	ld	h, (hl)
      000B97 6F                    2571 	ld	l, a
      000B98 79                    2572 	ld	a, c
      000B99 22                    2573 	ld	(hl+), a
      000B9A 70                    2574 	ld	(hl), b
                                   2575 ;src/main.c:359: pile->height++;
                                   2576 ;c
      000B9B F8 05                 2577 	ldhl	sp,#5
      000B9D 2A                    2578 	ld	a, (hl+)
      000B9E 5F                    2579 	ld	e, a
      000B9F 56                    2580 	ld	d, (hl)
      000BA0 21 04 00              2581 	ld	hl, #0x0004
      000BA3 19                    2582 	add	hl, de
      000BA4 5D                    2583 	ld	e, l
      000BA5 54                    2584 	ld	d, h
      000BA6 1A                    2585 	ld	a, (de)
      000BA7 3C                    2586 	inc	a
      000BA8 12                    2587 	ld	(de), a
                                   2588 ;src/main.c:360: deck_top++;
      000BA9 03                    2589 	inc	bc
      000BAA 03                    2590 	inc	bc
      000BAB 03                    2591 	inc	bc
                                   2592 ;src/main.c:361: pile++;
                                   2593 ;c
      000BAC F8 05                 2594 	ldhl	sp,#5
      000BAE 2A                    2595 	ld	a, (hl+)
      000BAF 5F                    2596 	ld	e, a
      000BB0 56                    2597 	ld	d, (hl)
      000BB1 21 05 00              2598 	ld	hl, #0x0005
      000BB4 19                    2599 	add	hl, de
      000BB5 E5                    2600 	push	hl
      000BB6 7D                    2601 	ld	a, l
      000BB7 F8 07                 2602 	ldhl	sp,	#7
      000BB9 77                    2603 	ld	(hl), a
      000BBA E1                    2604 	pop	hl
      000BBB 7C                    2605 	ld	a, h
      000BBC F8 06                 2606 	ldhl	sp,	#6
      000BBE 22                    2607 	ld	(hl+), a
                                   2608 ;src/main.c:356: for (i = 0; i < 10u; i++) {
      000BBF 35                    2609 	dec	(hl)
      000BC0 7E                    2610 	ld	a, (hl)
      000BC1 20 B2                 2611 	jr	NZ, 00200$
                                   2612 ;src/main.c:363: top_card_idx += 10u;
      000BC3 21r6Ar01              2613 	ld	hl, #_top_card_idx
      000BC6 7E                    2614 	ld	a, (hl)
      000BC7 C6 0A                 2615 	add	a, #0x0a
      000BC9 77                    2616 	ld	(hl), a
                                   2617 ;src/main.c:365: if (top_card_idx == 104u)
      000BCA 7E                    2618 	ld	a, (hl)
      000BCB D6 68                 2619 	sub	a, #0x68
      000BCD 20 0F                 2620 	jr	NZ, 00151$
                                   2621 ;src/main.c:366: draw_sequential_card(0, 0, OFFSET_BKG_BLANK);
      000BCF 3E 12                 2622 	ld	a, #0x12
      000BD1 F5                    2623 	push	af
      000BD2 33                    2624 	inc	sp
      000BD3 AF                    2625 	xor	a, a
      000BD4 F5                    2626 	push	af
      000BD5 33                    2627 	inc	sp
      000BD6 AF                    2628 	xor	a, a
      000BD7 F5                    2629 	push	af
      000BD8 33                    2630 	inc	sp
      000BD9 CDr49r03              2631 	call	_draw_sequential_card
      000BDC E8 03                 2632 	add	sp, #3
      000BDE                       2633 00151$:
                                   2634 ;src/main.c:368: dynamic_metasprite_deal();
      000BDE CDrB9r04              2635 	call	_dynamic_metasprite_deal
                                   2636 ;src/main.c:546: deal();
      000BE1 C3rE2r0C              2637 	jp	00171$
      000BE4                       2638 00166$:
                                   2639 ;src/main.c:280: Pile *pile = IDX_PTR(piles, cursor.pile_idx);
      000BE4 06 00                 2640 	ld	b, #0x00
      000BE6 69                    2641 	ld	l, c
      000BE7 60                    2642 	ld	h, b
      000BE8 29                    2643 	add	hl, hl
      000BE9 29                    2644 	add	hl, hl
      000BEA 09                    2645 	add	hl, bc
      000BEB 3Er38                 2646 	ld	a, #<(_piles)
      000BED 85                    2647 	add	a, l
      000BEE 4F                    2648 	ld	c, a
      000BEF 3Es01                 2649 	ld	a, #>(_piles)
      000BF1 8C                    2650 	adc	a, h
      000BF2 F8 03                 2651 	ldhl	sp,	#3
      000BF4 71                    2652 	ld	(hl), c
      000BF5 23                    2653 	inc	hl
                                   2654 ;src/main.c:281: Card *top = pile->base;
      000BF6 32                    2655 	ld	(hl-), a
      000BF7 2A                    2656 	ld	a, (hl+)
      000BF8 5F                    2657 	ld	e, a
      000BF9 56                    2658 	ld	d, (hl)
      000BFA 1A                    2659 	ld	a, (de)
      000BFB 23                    2660 	inc	hl
      000BFC 23                    2661 	inc	hl
      000BFD 22                    2662 	ld	(hl+), a
      000BFE 13                    2663 	inc	de
      000BFF 1A                    2664 	ld	a, (de)
      000C00 77                    2665 	ld	(hl), a
                                   2666 ;src/main.c:282: for (i = 1; i < cursor.height; i++)
      000C01 06 01                 2667 	ld	b, #0x01
      000C03                       2668 00202$:
      000C03 21r89r01              2669 	ld	hl, #(_cursor + 0x0007)
      000C06 4E                    2670 	ld	c, (hl)
      000C07 78                    2671 	ld	a, b
      000C08 91                    2672 	sub	a, c
      000C09 30 0E                 2673 	jr	NC, 00154$
                                   2674 ;src/main.c:283: top = top->next_card;
      000C0B F8 06                 2675 	ldhl	sp,#6
      000C0D 2A                    2676 	ld	a, (hl+)
      000C0E 5F                    2677 	ld	e, a
      000C0F 56                    2678 	ld	d, (hl)
      000C10 1A                    2679 	ld	a, (de)
      000C11 2B                    2680 	dec	hl
      000C12 22                    2681 	ld	(hl+), a
      000C13 13                    2682 	inc	de
      000C14 1A                    2683 	ld	a, (de)
      000C15 77                    2684 	ld	(hl), a
                                   2685 ;src/main.c:282: for (i = 1; i < cursor.height; i++)
      000C16 04                    2686 	inc	b
      000C17 18 EA                 2687 	jr	00202$
      000C19                       2688 00154$:
                                   2689 ;src/main.c:284: Card *stack = cursor.height ? top->next_card : top;
      000C19 79                    2690 	ld	a, c
      000C1A B7                    2691 	or	a, a
      000C1B 28 0C                 2692 	jr	Z, 00206$
      000C1D F8 06                 2693 	ldhl	sp,#6
      000C1F 2A                    2694 	ld	a, (hl+)
      000C20 5F                    2695 	ld	e, a
      000C21 56                    2696 	ld	d, (hl)
      000C22 1A                    2697 	ld	a, (de)
      000C23 4F                    2698 	ld	c, a
      000C24 13                    2699 	inc	de
      000C25 1A                    2700 	ld	a, (de)
      000C26 47                    2701 	ld	b, a
      000C27 18 05                 2702 	jr	00207$
      000C29                       2703 00206$:
      000C29 F8 06                 2704 	ldhl	sp,#6
      000C2B 2A                    2705 	ld	a, (hl+)
      000C2C 4F                    2706 	ld	c, a
      000C2D 46                    2707 	ld	b, (hl)
      000C2E                       2708 00207$:
      000C2E F8 01                 2709 	ldhl	sp,	#1
      000C30 79                    2710 	ld	a, c
      000C31 22                    2711 	ld	(hl+), a
                                   2712 ;src/main.c:285: if (!VISIBLE(stack->data))
      000C32 78                    2713 	ld	a, b
      000C33 32                    2714 	ld	(hl-), a
      000C34 2A                    2715 	ld	a, (hl+)
      000C35 66                    2716 	ld	h, (hl)
      000C36 6F                    2717 	ld	l, a
      000C37 23                    2718 	inc	hl
      000C38 23                    2719 	inc	hl
      000C39 CB 76                 2720 	bit	6, (hl)
      000C3B CArE2r0C              2721 	jp	Z,00171$
                                   2722 ;src/main.c:288: Card *card = stack;
      000C3E F8 01                 2723 	ldhl	sp,#1
      000C40 2A                    2724 	ld	a, (hl+)
      000C41 4F                    2725 	ld	c, a
      000C42 46                    2726 	ld	b, (hl)
                                   2727 ;src/main.c:289: while (card->next_card) {
      000C43                       2728 00157$:
      000C43 69                    2729 	ld	l, c
      000C44 60                    2730 	ld	h, b
      000C45 2A                    2731 	ld	a, (hl+)
      000C46 66                    2732 	ld	h, (hl)
      000C47 6F                    2733 	ld	l,a
      000C48 B4                    2734 	or	a,h
      000C49 28 1A                 2735 	jr	Z, 00161$
                                   2736 ;src/main.c:290: UINT8 prev_data = card->data;
      000C4B 03                    2737 	inc	bc
      000C4C 03                    2738 	inc	bc
      000C4D 0A                    2739 	ld	a, (bc)
                                   2740 ;src/main.c:291: card = card->next_card;
                                   2741 ;src/main.c:292: if (prev_data != card->data + 1u)
      000C4E 4D                    2742 	ld	c,l
      000C4F 44                    2743 	ld	b,h
      000C50 23                    2744 	inc	hl
      000C51 23                    2745 	inc	hl
      000C52 5E                    2746 	ld	e, (hl)
      000C53 16 00                 2747 	ld	d, #0x00
      000C55 13                    2748 	inc	de
      000C56 6F                    2749 	ld	l, a
      000C57 26 00                 2750 	ld	h, #0x00
      000C59 7D                    2751 	ld	a, l
      000C5A 93                    2752 	sub	a, e
      000C5B C2rE2r0C              2753 	jp	NZ,00171$
      000C5E 7C                    2754 	ld	a, h
      000C5F 92                    2755 	sub	a, d
      000C60 28 E1                 2756 	jr	Z, 00157$
                                   2757 ;src/main.c:293: return;
      000C62 C3rE2r0C              2758 	jp	00171$
      000C65                       2759 00161$:
                                   2760 ;src/main.c:296: cursor.held_card = stack;
      000C65 11r82r01              2761 	ld	de, #_cursor
      000C68 F8 01                 2762 	ldhl	sp,	#1
      000C6A 7E                    2763 	ld	a, (hl)
      000C6B 12                    2764 	ld	(de), a
      000C6C 13                    2765 	inc	de
      000C6D 23                    2766 	inc	hl
      000C6E 7E                    2767 	ld	a, (hl)
      000C6F 12                    2768 	ld	(de), a
                                   2769 ;src/main.c:297: cursor.hand_pile_idx = cursor.pile_idx;
      000C70 FAr88r01              2770 	ld	a, (#(_cursor + 0x0006) + 0)
      000C73 EAr87r01              2771 	ld	(#(_cursor + 0x0005)),a
                                   2772 ;src/main.c:298: cursor.held_stack_size = pile->height - cursor.height + !!cursor.height;//NOTE: this is somewhat jank and may cause problems
                                   2773 ;c
      000C76 F8 03                 2774 	ldhl	sp,#3
      000C78 2A                    2775 	ld	a, (hl+)
      000C79 5F                    2776 	ld	e, a
      000C7A 56                    2777 	ld	d, (hl)
      000C7B 21 04 00              2778 	ld	hl, #0x0004
      000C7E 19                    2779 	add	hl, de
      000C7F 4D                    2780 	ld	c, l
      000C80 44                    2781 	ld	b, h
      000C81 0A                    2782 	ld	a, (bc)
      000C82 21r89r01              2783 	ld	hl, #(_cursor + 0x0007)
      000C85 6E                    2784 	ld	l, (hl)
      000C86 95                    2785 	sub	a, l
      000C87 5F                    2786 	ld	e, a
      000C88 7D                    2787 	ld	a, l
      000C89 D6 01                 2788 	sub	a,#0x01
      000C8B 3E 00                 2789 	ld	a, #0x00
      000C8D 17                    2790 	rla
      000C8E EE 01                 2791 	xor	a, #0x01
      000C90 83                    2792 	add	a, e
      000C91 EAr86r01              2793 	ld	(#(_cursor + 0x0004)),a
                                   2794 ;src/main.c:299: pile->height = cursor.height - !!cursor.height;
      000C94 21r89r01              2795 	ld	hl, #(_cursor + 0x0007)
      000C97 6E                    2796 	ld	l, (hl)
      000C98 7D                    2797 	ld	a, l
      000C99 D6 01                 2798 	sub	a,#0x01
      000C9B 3E 00                 2799 	ld	a, #0x00
      000C9D 17                    2800 	rla
      000C9E EE 01                 2801 	xor	a, #0x01
      000CA0 5F                    2802 	ld	e, a
      000CA1 7D                    2803 	ld	a, l
      000CA2 93                    2804 	sub	a, e
      000CA3 02                    2805 	ld	(bc), a
                                   2806 ;src/main.c:300: if (cursor.height) {
      000CA4 FAr89r01              2807 	ld	a, (#(_cursor + 0x0007) + 0)
      000CA7 F8 05                 2808 	ldhl	sp,	#5
      000CA9 77                    2809 	ld	(hl), a
                                   2810 ;src/main.c:301: pile->top = top;
      000CAA F8 03                 2811 	ldhl	sp,#3
      000CAC 2A                    2812 	ld	a, (hl+)
      000CAD 4F                    2813 	ld	c, a
      000CAE 46                    2814 	ld	b, (hl)
      000CAF 03                    2815 	inc	bc
      000CB0 03                    2816 	inc	bc
                                   2817 ;src/main.c:303: cursor.card_to_show = top;
                                   2818 ;src/main.c:300: if (cursor.height) {
      000CB1 23                    2819 	inc	hl
      000CB2 7E                    2820 	ld	a, (hl)
      000CB3 B7                    2821 	or	a, a
      000CB4 28 1A                 2822 	jr	Z, 00163$
                                   2823 ;src/main.c:301: pile->top = top;
      000CB6 23                    2824 	inc	hl
      000CB7 2A                    2825 	ld	a, (hl+)
      000CB8 02                    2826 	ld	(bc), a
      000CB9 03                    2827 	inc	bc
      000CBA 7E                    2828 	ld	a, (hl)
      000CBB 02                    2829 	ld	(bc), a
                                   2830 ;src/main.c:302: top->next_card = NULL;
      000CBC 2B                    2831 	dec	hl
      000CBD 2A                    2832 	ld	a, (hl+)
      000CBE 66                    2833 	ld	h, (hl)
      000CBF 6F                    2834 	ld	l, a
      000CC0 AF                    2835 	xor	a, a
      000CC1 22                    2836 	ld	(hl+), a
      000CC2 77                    2837 	ld	(hl), a
                                   2838 ;src/main.c:303: cursor.card_to_show = top;
      000CC3 11r84r01              2839 	ld	de, #(_cursor + 0x0002)
      000CC6 F8 06                 2840 	ldhl	sp,	#6
      000CC8 7E                    2841 	ld	a, (hl)
      000CC9 12                    2842 	ld	(de), a
      000CCA 13                    2843 	inc	de
      000CCB 23                    2844 	inc	hl
      000CCC 7E                    2845 	ld	a, (hl)
      000CCD 12                    2846 	ld	(de), a
      000CCE 18 12                 2847 	jr	00171$
      000CD0                       2848 00163$:
                                   2849 ;src/main.c:305: pile->base = NULL;
      000CD0 F8 03                 2850 	ldhl	sp,	#3
      000CD2 2A                    2851 	ld	a, (hl+)
      000CD3 66                    2852 	ld	h, (hl)
      000CD4 6F                    2853 	ld	l, a
      000CD5 AF                    2854 	xor	a, a
      000CD6 22                    2855 	ld	(hl+), a
      000CD7 77                    2856 	ld	(hl), a
                                   2857 ;src/main.c:306: pile->top = NULL;
      000CD8 AF                    2858 	xor	a, a
      000CD9 02                    2859 	ld	(bc), a
      000CDA 03                    2860 	inc	bc
      000CDB 02                    2861 	ld	(bc), a
                                   2862 ;src/main.c:307: cursor.card_to_show = NULL;
      000CDC 21r84r01              2863 	ld	hl, #(_cursor + 0x0002)
      000CDF AF                    2864 	xor	a, a
      000CE0 22                    2865 	ld	(hl+), a
      000CE1 77                    2866 	ld	(hl), a
                                   2867 ;src/main.c:548: cursor_grab_stack();
      000CE2                       2868 00171$:
                                   2869 ;src/main.c:551: prev_input = input;
      000CE2 F8 00                 2870 	ldhl	sp,	#0
      000CE4 7E                    2871 	ld	a, (hl)
      000CE5 EAr8Dr01              2872 	ld	(#_main_prev_input_327680_269),a
                                   2873 ;src/main.c:556: cursor.anim_ctr++;
      000CE8 21r8Ar01              2874 	ld	hl, #_cursor + 8
      000CEB 4E                    2875 	ld	c, (hl)
      000CEC 0C                    2876 	inc	c
      000CED 71                    2877 	ld	(hl), c
                                   2878 ;src/main.c:557: cursor.anim_ctr &= (1u << (CURSOR_PERIOD + 1u)) - 1u;
      000CEE CB B9                 2879 	res	7, c
      000CF0 71                    2880 	ld	(hl), c
                                   2881 ;src/main.c:558: UINT8 prev_anim_frame = cursor.anim_frame;
      000CF1 FAr8Br01              2882 	ld	a, (#(_cursor + 0x0009) + 0)
                                   2883 ;src/main.c:559: cursor.anim_frame = cursor.anim_ctr >> CURSOR_PERIOD;
      000CF4 F5                    2884 	push	af
      000CF5 79                    2885 	ld	a, c
      000CF6 07                    2886 	rlca
      000CF7 07                    2887 	rlca
      000CF8 E6 03                 2888 	and	a, #0x03
      000CFA 4F                    2889 	ld	c, a
      000CFB F1                    2890 	pop	af
      000CFC 21r8Br01              2891 	ld	hl, #(_cursor + 0x0009)
      000CFF 71                    2892 	ld	(hl), c
                                   2893 ;src/main.c:560: if (cursor.anim_frame != prev_anim_frame)
      000D00 91                    2894 	sub	a, c
      000D01 28 07                 2895 	jr	Z, 00174$
                                   2896 ;src/main.c:561: flags |= FLAG_REDRAW_CURSOR;
      000D03 21r6Br01              2897 	ld	hl, #_flags
      000D06 7E                    2898 	ld	a, (hl)
      000D07 F6 01                 2899 	or	a, #0x01
      000D09 77                    2900 	ld	(hl), a
      000D0A                       2901 00174$:
                                   2902 ;src/main.c:563: if (flags & FLAG_REDRAW_CURSOR) {
      000D0A FAr6Br01              2903 	ld	a, (#_flags)
      000D0D 0F                    2904 	rrca
      000D0E 30 61                 2905 	jr	NC, 00181$
                                   2906 ;src/main.c:564: flags &= ~FLAG_REDRAW_CURSOR;
      000D10 21r6Br01              2907 	ld	hl, #_flags
      000D13 7E                    2908 	ld	a, (hl)
      000D14 E6 FE                 2909 	and	a, #0xfe
      000D16 77                    2910 	ld	(hl), a
                                   2911 ;src/main.c:565: if (cursor.pile_idx == PILE_IDX_DECK)
      000D17 21r88r01              2912 	ld	hl, #_cursor + 6
      000D1A 4E                    2913 	ld	c, (hl)
                                   2914 ;src/main.c:558: UINT8 prev_anim_frame = cursor.anim_frame;
      000D1B FAr8Br01              2915 	ld	a, (#(_cursor + 0x0009) + 0)
                                   2916 ;src/main.c:566: move_metasprite(cursor_metasprites[cursor.anim_frame],
      000D1E 6F                    2917 	ld	l, a
      000D1F 26 00                 2918 	ld	h, #0x00
      000D21 29                    2919 	add	hl, hl
      000D22 5D                    2920 	ld	e, l
      000D23 54                    2921 	ld	d, h
                                   2922 ;src/main.c:565: if (cursor.pile_idx == PILE_IDX_DECK)
      000D24 79                    2923 	ld	a, c
      000D25 D6 0A                 2924 	sub	a, #0x0a
      000D27 20 20                 2925 	jr	NZ, 00178$
                                   2926 ;src/main.c:566: move_metasprite(cursor_metasprites[cursor.anim_frame],
      000D29 21r00r00              2927 	ld	hl, #_cursor_metasprites
      000D2C 19                    2928 	add	hl, de
      000D2D 2A                    2929 	ld	a, (hl+)
      000D2E 4E                    2930 	ld	c, (hl)
                                   2931 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000D2F 21r00r00              2932 	ld	hl, #___current_metasprite
      000D32 22                    2933 	ld	(hl+), a
      000D33 71                    2934 	ld	(hl), c
                                   2935 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      000D34 21r00r00              2936 	ld	hl, #___current_base_tile
      000D37 36 01                 2937 	ld	(hl), #0x01
                                   2938 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000D39 AF                    2939 	xor	a, a
      000D3A F5                    2940 	push	af
      000D3B 33                    2941 	inc	sp
      000D3C AF                    2942 	xor	a, a
      000D3D F5                    2943 	push	af
      000D3E 33                    2944 	inc	sp
      000D3F AF                    2945 	xor	a, a
      000D40 F5                    2946 	push	af
      000D41 33                    2947 	inc	sp
      000D42 CDr00r00              2948 	call	___move_metasprite
      000D45 E8 03                 2949 	add	sp, #3
                                   2950 ;src/main.c:571: );
      000D47 18 28                 2951 	jr	00181$
      000D49                       2952 00178$:
                                   2953 ;src/main.c:577: SCOREBAR_HEIGHT * 8u  + (cursor.height << 3u)
      000D49 FAr89r01              2954 	ld	a, (#_cursor + 7)
      000D4C 87                    2955 	add	a, a
      000D4D 87                    2956 	add	a, a
      000D4E 87                    2957 	add	a, a
      000D4F C6 18                 2958 	add	a, #0x18
      000D51 47                    2959 	ld	b, a
                                   2960 ;src/main.c:576: cursor.pile_idx << 4u,
      000D52 79                    2961 	ld	a, c
      000D53 CB 37                 2962 	swap	a
      000D55 E6 F0                 2963 	and	a, #0xf0
      000D57 4F                    2964 	ld	c, a
                                   2965 ;src/main.c:573: move_metasprite(cursor_metasprites[cursor.anim_frame],
      000D58 21r00r00              2966 	ld	hl, #_cursor_metasprites
      000D5B 19                    2967 	add	hl, de
      000D5C 2A                    2968 	ld	a, (hl+)
                                   2969 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000D5D 5E                    2970 	ld	e, (hl)
      000D5E 21r00r00              2971 	ld	hl, #___current_metasprite
      000D61 22                    2972 	ld	(hl+), a
      000D62 73                    2973 	ld	(hl), e
                                   2974 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      000D63 21r00r00              2975 	ld	hl, #___current_base_tile
      000D66 36 01                 2976 	ld	(hl), #0x01
                                   2977 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000D68 C5                    2978 	push	bc
      000D69 AF                    2979 	xor	a, a
      000D6A F5                    2980 	push	af
      000D6B 33                    2981 	inc	sp
      000D6C CDr00r00              2982 	call	___move_metasprite
      000D6F E8 03                 2983 	add	sp, #3
                                   2984 ;src/main.c:578: );
      000D71                       2985 00181$:
                                   2986 ;src/main.c:580: if (flags & FLAG_REDRAW_HAND) {
      000D71 FAr6Br01              2987 	ld	a, (#_flags)
      000D74 CB 4F                 2988 	bit	1, a
      000D76 28 50                 2989 	jr	Z, 00188$
                                   2990 ;src/main.c:581: flags &= ~FLAG_REDRAW_HAND;
      000D78 21r6Br01              2991 	ld	hl, #_flags
      000D7B 7E                    2992 	ld	a, (hl)
      000D7C E6 FD                 2993 	and	a, #0xfd
      000D7E 77                    2994 	ld	(hl), a
                                   2995 ;src/main.c:582: if (cursor.held_card)
      000D7F 21r82r01              2996 	ld	hl, #_cursor
      000D82 2A                    2997 	ld	a, (hl+)
      000D83 B6                    2998 	or	a,(hl)
      000D84 28 3A                 2999 	jr	Z, 00184$
                                   3000 ;src/main.c:587: SCOREBAR_HEIGHT * 8u + (piles[cursor.hand_pile_idx].height << 3u)
      000D86 21r87r01              3001 	ld	hl, #_cursor + 5
      000D89 4E                    3002 	ld	c, (hl)
      000D8A 06 00                 3003 	ld	b, #0x00
      000D8C 69                    3004 	ld	l, c
      000D8D 60                    3005 	ld	h, b
      000D8E 29                    3006 	add	hl, hl
      000D8F 29                    3007 	add	hl, hl
      000D90 09                    3008 	add	hl, bc
      000D91 11r38r01              3009 	ld	de, #_piles
      000D94 19                    3010 	add	hl, de
      000D95 23                    3011 	inc	hl
      000D96 23                    3012 	inc	hl
      000D97 23                    3013 	inc	hl
      000D98 23                    3014 	inc	hl
      000D99 7E                    3015 	ld	a, (hl)
      000D9A 87                    3016 	add	a, a
      000D9B 87                    3017 	add	a, a
      000D9C 87                    3018 	add	a, a
      000D9D C6 18                 3019 	add	a, #0x18
      000D9F 57                    3020 	ld	d, a
                                   3021 ;src/main.c:586: cursor.hand_pile_idx << 4u,
      000DA0 79                    3022 	ld	a, c
      000DA1 CB 37                 3023 	swap	a
      000DA3 E6 F0                 3024 	and	a, #0xf0
      000DA5 47                    3025 	ld	b, a
                                   3026 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000DA6 21r00r00              3027 	ld	hl, #___current_metasprite
      000DA9 36r00                 3028 	ld	(hl), #<(_metasprite_sequential_2x3)
      000DAB 23                    3029 	inc	hl
      000DAC 36s00                 3030 	ld	(hl), #>(_metasprite_sequential_2x3)
                                   3031 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      000DAE 21r00r00              3032 	ld	hl, #___current_base_tile
      000DB1 36 03                 3033 	ld	(hl), #0x03
                                   3034 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000DB3 58                    3035 	ld	e, b
      000DB4 D5                    3036 	push	de
      000DB5 3E 06                 3037 	ld	a, #0x06
      000DB7 F5                    3038 	push	af
      000DB8 33                    3039 	inc	sp
      000DB9 CDr00r00              3040 	call	___move_metasprite
      000DBC E8 03                 3041 	add	sp, #3
                                   3042 ;src/main.c:588: );
      000DBE 18 08                 3043 	jr	00188$
      000DC0                       3044 00184$:
                                   3045 ;src/main.c:590: metasprite_2x3_hide(SPRITE_HAND);
      000DC0 3E 06                 3046 	ld	a, #0x06
      000DC2 F5                    3047 	push	af
      000DC3 33                    3048 	inc	sp
      000DC4 CDr00r00              3049 	call	_metasprite_2x3_hide
      000DC7 33                    3050 	inc	sp
                                   3051 ;src/main.c:629: cursor_process();
      000DC8                       3052 00188$:
                                   3053 ;src/main.c:596: if (dynamic_metasprite.elapsed_frames >= dynamic_metasprite.target_frames)
      000DC8 FAr77r01              3054 	ld	a, (#(_dynamic_metasprite + 0x0009) + 0)
      000DCB F8 07                 3055 	ldhl	sp,	#7
      000DCD 77                    3056 	ld	(hl), a
      000DCE 21r76r01              3057 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000DD1 4E                    3058 	ld	c, (hl)
      000DD2 59                    3059 	ld	e, c
      000DD3 F8 07                 3060 	ldhl	sp,	#7
      000DD5 56                    3061 	ld	d, (hl)
      000DD6 7E                    3062 	ld	a, (hl)
      000DD7 91                    3063 	sub	a, c
      000DD8 CB 7B                 3064 	bit	7, e
      000DDA 28 07                 3065 	jr	Z, 00463$
      000DDC CB 7A                 3066 	bit	7, d
      000DDE 20 08                 3067 	jr	NZ, 00464$
      000DE0 BF                    3068 	cp	a, a
      000DE1 18 05                 3069 	jr	00464$
      000DE3                       3070 00463$:
      000DE3 CB 7A                 3071 	bit	7, d
      000DE5 28 01                 3072 	jr	Z, 00464$
      000DE7 37                    3073 	scf
      000DE8                       3074 00464$:
      000DE8 D2r90r0E              3075 	jp	NC, 00195$
                                   3076 ;src/main.c:599: dynamic_metasprite.elapsed_frames++;
      000DEB F8 07                 3077 	ldhl	sp,	#7
      000DED 7E                    3078 	ld	a, (hl)
      000DEE 3C                    3079 	inc	a
      000DEF 2B                    3080 	dec	hl
      000DF0 77                    3081 	ld	(hl), a
      000DF1 11r77r01              3082 	ld	de, #(_dynamic_metasprite + 0x0009)
      000DF4 7E                    3083 	ld	a, (hl)
      000DF5 12                    3084 	ld	(de), a
                                   3085 ;src/main.c:604: dynamic_metasprite.src[1] + (dynamic_metasprite.dist[1] * dynamic_metasprite.elapsed_frames / dynamic_metasprite.target_frames)
      000DF6 FAr70r01              3086 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      000DF9 F8 07                 3087 	ldhl	sp,	#7
      000DFB 77                    3088 	ld	(hl), a
      000DFC 21r74r01              3089 	ld	hl, #_dynamic_metasprite + 6
      000DFF 2A                    3090 	ld	a, (hl+)
      000E00 4F                    3091 	ld	c, a
      000E01 46                    3092 	ld	b, (hl)
      000E02 F8 06                 3093 	ldhl	sp,	#6
      000E04 7E                    3094 	ld	a, (hl)
      000E05 F8 02                 3095 	ldhl	sp,	#2
      000E07 77                    3096 	ld	(hl), a
      000E08 17                    3097 	rla
      000E09 9F                    3098 	sbc	a, a
      000E0A 23                    3099 	inc	hl
      000E0B 32                    3100 	ld	(hl-), a
      000E0C 2A                    3101 	ld	a, (hl+)
      000E0D 66                    3102 	ld	h, (hl)
      000E0E 6F                    3103 	ld	l, a
      000E0F E5                    3104 	push	hl
      000E10 C5                    3105 	push	bc
      000E11 CDr00r00              3106 	call	__mulint
      000E14 E8 04                 3107 	add	sp, #4
      000E16 4B                    3108 	ld	c, e
      000E17 42                    3109 	ld	b, d
      000E18 FAr76r01              3110 	ld	a, (#(_dynamic_metasprite + 0x0008) + 0)
      000E1B F8 04                 3111 	ldhl	sp,	#4
      000E1D 77                    3112 	ld	(hl), a
      000E1E 17                    3113 	rla
      000E1F 9F                    3114 	sbc	a, a
      000E20 23                    3115 	inc	hl
      000E21 32                    3116 	ld	(hl-), a
      000E22 2A                    3117 	ld	a, (hl+)
      000E23 66                    3118 	ld	h, (hl)
      000E24 6F                    3119 	ld	l, a
      000E25 E5                    3120 	push	hl
      000E26 C5                    3121 	push	bc
      000E27 CDr00r00              3122 	call	__divsint
      000E2A E8 04                 3123 	add	sp, #4
      000E2C 7B                    3124 	ld	a, e
      000E2D F8 07                 3125 	ldhl	sp,	#7
      000E2F 86                    3126 	add	a, (hl)
      000E30 2B                    3127 	dec	hl
      000E31 77                    3128 	ld	(hl), a
                                   3129 ;src/main.c:603: dynamic_metasprite.src[0] + (dynamic_metasprite.dist[0] * dynamic_metasprite.elapsed_frames / dynamic_metasprite.target_frames),
      000E32 FAr6Er01              3130 	ld	a, (#_dynamic_metasprite + 0)
      000E35 F8 07                 3131 	ldhl	sp,	#7
      000E37 77                    3132 	ld	(hl), a
      000E38 21r72r01              3133 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000E3B 2A                    3134 	ld	a, (hl+)
      000E3C 4F                    3135 	ld	c, a
      000E3D 46                    3136 	ld	b, (hl)
      000E3E F8 02                 3137 	ldhl	sp,	#2
      000E40 2A                    3138 	ld	a, (hl+)
      000E41 66                    3139 	ld	h, (hl)
      000E42 6F                    3140 	ld	l, a
      000E43 E5                    3141 	push	hl
      000E44 C5                    3142 	push	bc
      000E45 CDr00r00              3143 	call	__mulint
      000E48 E8 04                 3144 	add	sp, #4
      000E4A F8 04                 3145 	ldhl	sp,	#4
      000E4C 2A                    3146 	ld	a, (hl+)
      000E4D 66                    3147 	ld	h, (hl)
      000E4E 6F                    3148 	ld	l, a
      000E4F E5                    3149 	push	hl
      000E50 D5                    3150 	push	de
      000E51 CDr00r00              3151 	call	__divsint
      000E54 E8 04                 3152 	add	sp, #4
      000E56 7B                    3153 	ld	a, e
      000E57 F8 07                 3154 	ldhl	sp,	#7
      000E59 86                    3155 	add	a, (hl)
      000E5A 47                    3156 	ld	b, a
                                   3157 ;src/main.c:601: dynamic_metasprite.metasprite_offset,
      000E5B FAr7Ar01              3158 	ld	a, (#(_dynamic_metasprite + 0x000c) + 0)
      000E5E EAr00r00              3159 	ld	(#___current_base_tile),a
                                   3160 ;src/main.c:600: move_metasprite(dynamic_metasprite.metasprite,
      000E61 21r78r01              3161 	ld	hl, #_dynamic_metasprite + 10
      000E64 2A                    3162 	ld	a, (hl+)
      000E65 4E                    3163 	ld	c, (hl)
                                   3164 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000E66 21r00r00              3165 	ld	hl, #___current_metasprite
      000E69 22                    3166 	ld	(hl+), a
      000E6A 71                    3167 	ld	(hl), c
                                   3168 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000E6B F8 06                 3169 	ldhl	sp,	#6
      000E6D 7E                    3170 	ld	a, (hl)
      000E6E F5                    3171 	push	af
      000E6F 33                    3172 	inc	sp
      000E70 0E 0C                 3173 	ld	c, #0x0c
      000E72 C5                    3174 	push	bc
      000E73 CDr00r00              3175 	call	___move_metasprite
      000E76 E8 03                 3176 	add	sp, #3
                                   3177 ;src/main.c:606: if (dynamic_metasprite.elapsed_frames == dynamic_metasprite.target_frames
      000E78 FAr77r01              3178 	ld	a, (#(_dynamic_metasprite + 0x0009) + 0)
      000E7B 21r76r01              3179 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000E7E 4E                    3180 	ld	c, (hl)
      000E7F 91                    3181 	sub	a, c
      000E80 20 0E                 3182 	jr	NZ, 00195$
                                   3183 ;src/main.c:607: && dynamic_metasprite.callback)
      000E82 21r80r01              3184 	ld	hl, #_dynamic_metasprite + 18
      000E85 2A                    3185 	ld	a, (hl+)
      000E86 4F                    3186 	ld	c, a
      000E87 66                    3187 	ld	h, (hl)
      000E88 7C                    3188 	ld	a, h
      000E89 B1                    3189 	or	a, c
      000E8A 28 04                 3190 	jr	Z, 00195$
                                   3191 ;src/main.c:608: dynamic_metasprite.callback();
      000E8C 69                    3192 	ld	l, c
      000E8D CDr00r00              3193 	call	___sdcc_call_hl
                                   3194 ;src/main.c:631: dynamic_metasprite_process();
      000E90                       3195 00195$:
                                   3196 ;src/main.c:633: wait_vbl_done();
      000E90 CDr00r00              3197 	call	_wait_vbl_done
      000E93 C3r9Er09              3198 	jp	00102$
                                   3199 ;src/main.c:635: }
      000E96 E8 08                 3200 	add	sp, #8
      000E98 C9                    3201 	ret
                                   3202 	.area _CODE
                                   3203 	.area _CABS (ABS)
