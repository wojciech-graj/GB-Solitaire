                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _pile_append_cursor_stack
                                     13 	.globl _dynamic_metasprite_fold_callback
                                     14 	.globl _dynamic_metasprite_move_stack_callback
                                     15 	.globl _dynamic_metasprite_unfold_callback
                                     16 	.globl _dynamic_metasprite_fold_pile
                                     17 	.globl _set_metasprite_card
                                     18 	.globl _dynamic_metasprite_deal
                                     19 	.globl _dynamic_metasprite_deal_callback
                                     20 	.globl _is_stack_coherent
                                     21 	.globl _cursor_adjust_height
                                     22 	.globl _draw_background
                                     23 	.globl _draw_sequential_card
                                     24 	.globl _draw_pile
                                     25 	.globl _draw_card_bottom
                                     26 	.globl _draw_card_top
                                     27 	.globl _init_deck
                                     28 	.globl _metasprite_2x3_hide
                                     29 	.globl _rand
                                     30 	.globl _initrand
                                     31 	.globl _set_sprite_data
                                     32 	.globl _set_bkg_tile_xy
                                     33 	.globl _set_bkg_data
                                     34 	.globl _wait_vbl_done
                                     35 	.globl _joypad
                                     36 	.globl _cursor
                                     37 	.globl _dynamic_metasprite
                                     38 	.globl _score
                                     39 	.globl _flags
                                     40 	.globl _top_card_idx
                                     41 	.globl _piles
                                     42 	.globl _deck
                                     43 	.globl _dynamic_metasprite_fold
                                     44 ;--------------------------------------------------------
                                     45 ; special function registers
                                     46 ;--------------------------------------------------------
                                     47 ;--------------------------------------------------------
                                     48 ; ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area _DATA
      000000                         51 _deck::
      000000                         52 	.ds 312
      000138                         53 _piles::
      000138                         54 	.ds 50
      00016A                         55 _top_card_idx::
      00016A                         56 	.ds 1
      00016B                         57 _flags::
      00016B                         58 	.ds 1
      00016C                         59 _score::
      00016C                         60 	.ds 2
      00016E                         61 _dynamic_metasprite::
      00016E                         62 	.ds 21
      000183                         63 _cursor::
      000183                         64 	.ds 10
      00018D                         65 _input_process_prev_input_65536_228:
      00018D                         66 	.ds 1
      00018E                         67 _main_prev_input_327680_282:
      00018E                         68 	.ds 1
                                     69 ;--------------------------------------------------------
                                     70 ; absolute external ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area _DABS (ABS)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area _HOME
                                     77 	.area _GSINIT
                                     78 	.area _GSFINAL
                                     79 	.area _GSINIT
                                     80 ;src/main.c:548: static UINT8 prev_input = 0;
      000000 21r8Dr01                81 	ld	hl, #_input_process_prev_input_65536_228
      000003 36 00                   82 	ld	(hl), #0x00
      000005 21r8Er01                83 	ld	hl, #_main_prev_input_327680_282
      000008 36 00                   84 	ld	(hl), #0x00
                                     85 ;src/main.c:115: UINT8 flags = 0;
      00000A 21r6Br01                86 	ld	hl, #_flags
      00000D 36 00                   87 	ld	(hl), #0x00
                                     88 ;src/main.c:117: UINT16 score = 500;
      00000F 21r6Cr01                89 	ld	hl, #_score
      000012 36 F4                   90 	ld	(hl), #0xf4
      000014 23                      91 	inc	hl
      000015 36 01                   92 	ld	(hl), #0x01
                                     93 ;src/main.c:119: DynamicMetaSprite dynamic_metasprite = {
      000017 21r76r01                94 	ld	hl, #(_dynamic_metasprite + 0x0008)
      00001A 36 FF                   95 	ld	(hl), #0xff
      00001C 21r77r01                96 	ld	hl, #(_dynamic_metasprite + 0x0009)
      00001F 36 00                   97 	ld	(hl), #0x00
                                     98 ;src/main.c:124: Cursor cursor = {
      000021 21r83r01                99 	ld	hl, #_cursor
      000024 AF                     100 	xor	a, a
      000025 22                     101 	ld	(hl+), a
      000026 77                     102 	ld	(hl), a
      000027 21r85r01               103 	ld	hl, #(_cursor + 0x0002)
      00002A AF                     104 	xor	a, a
      00002B 22                     105 	ld	(hl+), a
      00002C 77                     106 	ld	(hl), a
      00002D 21r88r01               107 	ld	hl, #(_cursor + 0x0005)
      000030 36 00                  108 	ld	(hl), #0x00
      000032 21r89r01               109 	ld	hl, #(_cursor + 0x0006)
      000035 36 0A                  110 	ld	(hl), #0x0a
      000037 21r8Ar01               111 	ld	hl, #(_cursor + 0x0007)
      00003A 36 00                  112 	ld	(hl), #0x00
      00003C 21r8Br01               113 	ld	hl, #(_cursor + 0x0008)
      00003F 36 00                  114 	ld	(hl), #0x00
      000041 21r8Cr01               115 	ld	hl, #(_cursor + 0x0009)
      000044 36 00                  116 	ld	(hl), #0x00
                                    117 ;--------------------------------------------------------
                                    118 ; Home
                                    119 ;--------------------------------------------------------
                                    120 	.area _HOME
                                    121 	.area _HOME
                                    122 ;--------------------------------------------------------
                                    123 ; code
                                    124 ;--------------------------------------------------------
                                    125 	.area _CODE
                                    126 ;src/main.c:134: void metasprite_2x3_hide(UINT8 sprite)
                                    127 ;	---------------------------------
                                    128 ; Function metasprite_2x3_hide
                                    129 ; ---------------------------------
      000000                        130 _metasprite_2x3_hide::
                                    131 ;src/main.c:141: );
      000000 F8 02                  132 	ldhl	sp,	#2
      000002 46                     133 	ld	b, (hl)
                                    134 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000003 21r00r00               135 	ld	hl, #___current_metasprite
      000006 36r00                  136 	ld	(hl), #<(_metasprite_same_2x3)
      000008 23                     137 	inc	hl
      000009 36s00                  138 	ld	(hl), #>(_metasprite_same_2x3)
                                    139 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      00000B 21r00r00               140 	ld	hl, #___current_base_tile
      00000E 36 00                  141 	ld	(hl), #0x00
                                    142 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000010 AF                     143 	xor	a, a
      000011 F5                     144 	push	af
      000012 33                     145 	inc	sp
      000013 AF                     146 	xor	a, a
      000014 F5                     147 	push	af
      000015 33                     148 	inc	sp
      000016 C5                     149 	push	bc
      000017 33                     150 	inc	sp
      000018 CDr00r00               151 	call	___move_metasprite
      00001B E8 03                  152 	add	sp, #3
                                    153 ;src/main.c:141: );
                                    154 ;src/main.c:142: }
      00001D C9                     155 	ret
                                    156 ;src/main.c:145: void init_deck(void)
                                    157 ;	---------------------------------
                                    158 ; Function init_deck
                                    159 ; ---------------------------------
      00001E                        160 _init_deck::
      00001E E8 F0                  161 	add	sp, #-16
                                    162 ;src/main.c:147: Card *card = IDX_PTR(deck, 0);
      000020 01r00r00               163 	ld	bc, #_deck
                                    164 ;src/main.c:152: for (suit = 0; suit < 4u; suit++) {
      000023 AF                     165 	xor	a, a
      000024 F8 0B                  166 	ldhl	sp,	#11
      000026 77                     167 	ld	(hl), a
                                    168 ;src/main.c:153: for (rank = 0; rank < 13u; rank++) {
      000027                        169 00131$:
      000027 F8 0B                  170 	ldhl	sp,	#11
      000029 7E                     171 	ld	a, (hl)
      00002A CB 37                  172 	swap	a
      00002C E6 F0                  173 	and	a, #0xf0
      00002E F8 07                  174 	ldhl	sp,	#7
      000030 77                     175 	ld	(hl), a
      000031 AF                     176 	xor	a, a
      000032 F8 0C                  177 	ldhl	sp,	#12
      000034 77                     178 	ld	(hl), a
                                    179 ;src/main.c:154: for (i = 0; i < 2u; i++) {
      000035                        180 00129$:
      000035 F8 0C                  181 	ldhl	sp,	#12
      000037 7E                     182 	ld	a, (hl)
      000038 F8 07                  183 	ldhl	sp,	#7
      00003A B6                     184 	or	a, (hl)
      00003B 23                     185 	inc	hl
      00003C 77                     186 	ld	(hl), a
      00003D F8 0D                  187 	ldhl	sp,	#13
      00003F 79                     188 	ld	a, c
      000040 22                     189 	ld	(hl+), a
      000041 78                     190 	ld	a, b
      000042 22                     191 	ld	(hl+), a
      000043 36 02                  192 	ld	(hl), #0x02
      000045                        193 00113$:
                                    194 ;src/main.c:155: card->data = rank | (suit << BIT_OFFSET_DATA_SUIT);
                                    195 ;c
      000045 F8 0D                  196 	ldhl	sp,#13
      000047 2A                     197 	ld	a, (hl+)
      000048 5F                     198 	ld	e, a
      000049 56                     199 	ld	d, (hl)
      00004A 21 02 00               200 	ld	hl, #0x0002
      00004D 19                     201 	add	hl, de
      00004E E5                     202 	push	hl
      00004F 7D                     203 	ld	a, l
      000050 F8 0B                  204 	ldhl	sp,	#11
      000052 77                     205 	ld	(hl), a
      000053 E1                     206 	pop	hl
      000054 7C                     207 	ld	a, h
      000055 F8 0A                  208 	ldhl	sp,	#10
      000057 32                     209 	ld	(hl-), a
      000058 2A                     210 	ld	a, (hl+)
      000059 5F                     211 	ld	e, a
      00005A 3A                     212 	ld	a, (hl-)
      00005B 57                     213 	ld	d, a
      00005C 2B                     214 	dec	hl
      00005D 7E                     215 	ld	a, (hl)
      00005E 12                     216 	ld	(de), a
                                    217 ;src/main.c:156: card++;
                                    218 ;c
      00005F F8 0D                  219 	ldhl	sp,#13
      000061 2A                     220 	ld	a, (hl+)
      000062 5F                     221 	ld	e, a
      000063 56                     222 	ld	d, (hl)
      000064 21 03 00               223 	ld	hl, #0x0003
      000067 19                     224 	add	hl, de
      000068 E5                     225 	push	hl
      000069 7D                     226 	ld	a, l
      00006A F8 0F                  227 	ldhl	sp,	#15
      00006C 77                     228 	ld	(hl), a
      00006D E1                     229 	pop	hl
      00006E 7C                     230 	ld	a, h
      00006F F8 0E                  231 	ldhl	sp,	#14
      000071 22                     232 	ld	(hl+), a
                                    233 ;src/main.c:154: for (i = 0; i < 2u; i++) {
      000072 35                     234 	dec	(hl)
      000073 20 D0                  235 	jr	NZ, 00113$
                                    236 ;src/main.c:153: for (rank = 0; rank < 13u; rank++) {
      000075 2B                     237 	dec	hl
      000076 2B                     238 	dec	hl
      000077 2A                     239 	ld	a, (hl+)
      000078 4F                     240 	ld	c, a
      000079 3A                     241 	ld	a, (hl-)
      00007A 47                     242 	ld	b, a
      00007B 2B                     243 	dec	hl
      00007C 34                     244 	inc	(hl)
      00007D 7E                     245 	ld	a, (hl)
      00007E D6 0D                  246 	sub	a, #0x0d
      000080 38 B3                  247 	jr	C, 00129$
                                    248 ;src/main.c:152: for (suit = 0; suit < 4u; suit++) {
      000082 2B                     249 	dec	hl
      000083 34                     250 	inc	(hl)
      000084 7E                     251 	ld	a, (hl)
      000085 D6 04                  252 	sub	a, #0x04
      000087 38 9E                  253 	jr	C, 00131$
                                    254 ;src/main.c:161: card = IDX_PTR(deck, 103u);
      000089 23                     255 	inc	hl
      00008A 23                     256 	inc	hl
      00008B 3Er35                  257 	ld	a, #<((_deck + 0x0135))
      00008D 22                     258 	ld	(hl+), a
      00008E 36s01                  259 	ld	(hl), #>((_deck + 0x0135))
                                    260 ;src/main.c:162: for (i = 103u; i; i--) {
      000090 F8 02                  261 	ldhl	sp,	#2
      000092 7D                     262 	ld	a, l
      000093 54                     263 	ld	d, h
      000094 F8 07                  264 	ldhl	sp,	#7
      000096 22                     265 	ld	(hl+), a
      000097 7A                     266 	ld	a, d
      000098 32                     267 	ld	(hl-), a
      000099 2A                     268 	ld	a, (hl+)
      00009A 5E                     269 	ld	e, (hl)
      00009B 23                     270 	inc	hl
      00009C 22                     271 	ld	(hl+), a
      00009D 73                     272 	ld	(hl), e
      00009E F8 0F                  273 	ldhl	sp,	#15
      0000A0 36 67                  274 	ld	(hl), #0x67
      0000A2                        275 00118$:
                                    276 ;src/main.c:163: Card *swap = IDX_PTR(deck, (UINT8)rand() % i);
      0000A2 CDr00r00               277 	call	_rand
      0000A5 7B                     278 	ld	a, e
      0000A6 F8 0F                  279 	ldhl	sp,	#15
      0000A8 66                     280 	ld	h, (hl)
      0000A9 E5                     281 	push	hl
      0000AA 33                     282 	inc	sp
      0000AB F5                     283 	push	af
      0000AC 33                     284 	inc	sp
      0000AD CDr00r00               285 	call	__moduchar
      0000B0 E8 02                  286 	add	sp, #2
      0000B2 4B                     287 	ld	c, e
      0000B3 06 00                  288 	ld	b, #0x00
      0000B5 69                     289 	ld	l, c
      0000B6 60                     290 	ld	h, b
      0000B7 29                     291 	add	hl, hl
      0000B8 09                     292 	add	hl, bc
      0000B9 7D                     293 	ld	a, l
      0000BA C6r00                  294 	add	a, #<(_deck)
      0000BC 4F                     295 	ld	c, a
      0000BD 7C                     296 	ld	a, h
      0000BE CEs00                  297 	adc	a, #>(_deck)
      0000C0 47                     298 	ld	b, a
      0000C1 F8 0B                  299 	ldhl	sp,	#11
      0000C3 79                     300 	ld	a, c
      0000C4 22                     301 	ld	(hl+), a
                                    302 ;src/main.c:165: temp = *card;
      0000C5 78                     303 	ld	a, b
      0000C6 22                     304 	ld	(hl+), a
      0000C7 2A                     305 	ld	a, (hl+)
      0000C8 5F                     306 	ld	e, a
      0000C9 56                     307 	ld	d, (hl)
      0000CA F8 07                  308 	ldhl	sp,#7
      0000CC 2A                     309 	ld	a, (hl+)
      0000CD 4F                     310 	ld	c, a
      0000CE 46                     311 	ld	b, (hl)
      0000CF 21 03 00               312 	ld	hl, #0x0003
      0000D2 E5                     313 	push	hl
      0000D3 D5                     314 	push	de
      0000D4 C5                     315 	push	bc
      0000D5 CDr00r00               316 	call	___memcpy
      0000D8 E8 06                  317 	add	sp, #6
                                    318 ;src/main.c:166: *card = *swap;
      0000DA F8 0B                  319 	ldhl	sp,#11
      0000DC 2A                     320 	ld	a, (hl+)
      0000DD 5F                     321 	ld	e, a
      0000DE 2A                     322 	ld	a, (hl+)
      0000DF 57                     323 	ld	d, a
      0000E0 2A                     324 	ld	a, (hl+)
      0000E1 4F                     325 	ld	c, a
      0000E2 46                     326 	ld	b, (hl)
      0000E3 21 03 00               327 	ld	hl, #0x0003
      0000E6 E5                     328 	push	hl
      0000E7 D5                     329 	push	de
      0000E8 C5                     330 	push	bc
      0000E9 CDr00r00               331 	call	___memcpy
      0000EC E8 06                  332 	add	sp, #6
                                    333 ;src/main.c:167: *swap = temp;
      0000EE F8 09                  334 	ldhl	sp,#9
      0000F0 2A                     335 	ld	a, (hl+)
      0000F1 5F                     336 	ld	e, a
      0000F2 2A                     337 	ld	a, (hl+)
      0000F3 57                     338 	ld	d, a
      0000F4 2A                     339 	ld	a, (hl+)
      0000F5 4F                     340 	ld	c, a
      0000F6 46                     341 	ld	b, (hl)
      0000F7 21 03 00               342 	ld	hl, #0x0003
      0000FA E5                     343 	push	hl
      0000FB D5                     344 	push	de
      0000FC C5                     345 	push	bc
      0000FD CDr00r00               346 	call	___memcpy
      000100 E8 06                  347 	add	sp, #6
                                    348 ;src/main.c:168: card--;
      000102 F8 0D                  349 	ldhl	sp,#13
      000104 2A                     350 	ld	a, (hl+)
      000105 5F                     351 	ld	e, a
      000106 56                     352 	ld	d, (hl)
      000107 21 03 00               353 	ld	hl, #0x0003
      00010A 7B                     354 	ld	a, e
      00010B 95                     355 	sub	a, l
      00010C 5F                     356 	ld	e, a
      00010D 7A                     357 	ld	a, d
      00010E 9C                     358 	sbc	a, h
      00010F F8 0E                  359 	ldhl	sp,	#14
      000111 32                     360 	ld	(hl-), a
                                    361 ;src/main.c:162: for (i = 103u; i; i--) {
      000112 7B                     362 	ld	a, e
      000113 22                     363 	ld	(hl+), a
      000114 23                     364 	inc	hl
      000115 35                     365 	dec	(hl)
      000116 20 8A                  366 	jr	NZ, 00118$
                                    367 ;src/main.c:171: card = IDX_PTR(deck, 0);
      000118 01r00r00               368 	ld	bc, #_deck
                                    369 ;src/main.c:172: for (i = 0; i < 44u; i++) {
      00011B AF                     370 	xor	a, a
      00011C 77                     371 	ld	(hl), a
      00011D                        372 00120$:
                                    373 ;src/main.c:173: card->next_card = IDX_PTR(deck, i + 10u);
      00011D F8 0F                  374 	ldhl	sp,	#15
      00011F 5E                     375 	ld	e, (hl)
      000120 16 00                  376 	ld	d, #0x00
      000122 6B                     377 	ld	l, e
      000123 62                     378 	ld	h, d
      000124 29                     379 	add	hl, hl
      000125 19                     380 	add	hl, de
      000126 11r00r00               381 	ld	de, #_deck
      000129 19                     382 	add	hl, de
      00012A 11 1E 00               383 	ld	de, #0x001e
      00012D 19                     384 	add	hl, de
      00012E 5D                     385 	ld	e, l
      00012F 54                     386 	ld	d, h
      000130 69                     387 	ld	l, c
      000131 60                     388 	ld	h, b
      000132 7B                     389 	ld	a, e
      000133 22                     390 	ld	(hl+), a
      000134 72                     391 	ld	(hl), d
                                    392 ;src/main.c:174: card++;
      000135 03                     393 	inc	bc
      000136 03                     394 	inc	bc
      000137 03                     395 	inc	bc
                                    396 ;src/main.c:172: for (i = 0; i < 44u; i++) {
      000138 F8 0F                  397 	ldhl	sp,	#15
      00013A 34                     398 	inc	(hl)
      00013B 7E                     399 	ld	a, (hl)
      00013C D6 2C                  400 	sub	a, #0x2c
      00013E 38 DD                  401 	jr	C, 00120$
      000140 5E                     402 	ld	e, (hl)
      000141                        403 00123$:
                                    404 ;src/main.c:176: for (; i < 104u; i++) {
      000141 7B                     405 	ld	a, e
      000142 D6 68                  406 	sub	a, #0x68
      000144 30 11                  407 	jr	NC, 00106$
                                    408 ;src/main.c:177: card->data |= BITMASK_DATA_VISIBLE;
      000146 69                     409 	ld	l, c
      000147 60                     410 	ld	h, b
      000148 23                     411 	inc	hl
      000149 23                     412 	inc	hl
      00014A CB F6                  413 	set	6, (hl)
                                    414 ;src/main.c:178: card->next_card = NULL;
      00014C 69                     415 	ld	l, c
      00014D 60                     416 	ld	h, b
      00014E AF                     417 	xor	a, a
      00014F 22                     418 	ld	(hl+), a
      000150 77                     419 	ld	(hl), a
                                    420 ;src/main.c:179: card++;
      000151 03                     421 	inc	bc
      000152 03                     422 	inc	bc
      000153 03                     423 	inc	bc
                                    424 ;src/main.c:176: for (; i < 104u; i++) {
      000154 1C                     425 	inc	e
      000155 18 EA                  426 	jr	00123$
      000157                        427 00106$:
                                    428 ;src/main.c:182: card = IDX_PTR(deck, 0);
      000157 F8 0B                  429 	ldhl	sp,	#11
      000159 3Er00                  430 	ld	a, #<(_deck)
      00015B 22                     431 	ld	(hl+), a
                                    432 ;src/main.c:183: Pile *pile = IDX_PTR(piles, 0);
      00015C 3Es00                  433 	ld	a, #>(_deck)
      00015E 22                     434 	ld	(hl+), a
      00015F 3Er38                  435 	ld	a, #<(_piles)
      000161 22                     436 	ld	(hl+), a
      000162 36s01                  437 	ld	(hl), #>(_piles)
                                    438 ;src/main.c:184: for (i = 0; i < 10; i++) {
      000164 AF                     439 	xor	a, a
      000165 23                     440 	inc	hl
      000166 77                     441 	ld	(hl), a
      000167                        442 00125$:
                                    443 ;src/main.c:185: pile->base = card;
      000167 F8 0D                  444 	ldhl	sp,#13
      000169 2A                     445 	ld	a, (hl+)
      00016A 5F                     446 	ld	e, a
      00016B 56                     447 	ld	d, (hl)
      00016C F8 0B                  448 	ldhl	sp,	#11
      00016E 7E                     449 	ld	a, (hl)
      00016F 12                     450 	ld	(de), a
      000170 13                     451 	inc	de
      000171 23                     452 	inc	hl
      000172 7E                     453 	ld	a, (hl)
      000173 12                     454 	ld	(de), a
                                    455 ;src/main.c:187: pile->top = IDX_PTR(deck, 50u + i);
                                    456 ;c
      000174 23                     457 	inc	hl
      000175 2A                     458 	ld	a, (hl+)
      000176 5F                     459 	ld	e, a
      000177 56                     460 	ld	d, (hl)
      000178 21 02 00               461 	ld	hl, #0x0002
      00017B 19                     462 	add	hl, de
      00017C E5                     463 	push	hl
      00017D 7D                     464 	ld	a, l
      00017E F8 07                  465 	ldhl	sp,	#7
      000180 77                     466 	ld	(hl), a
      000181 E1                     467 	pop	hl
      000182 7C                     468 	ld	a, h
      000183 F8 06                  469 	ldhl	sp,	#6
      000185 77                     470 	ld	(hl), a
      000186 F8 0F                  471 	ldhl	sp,	#15
      000188 4E                     472 	ld	c, (hl)
      000189 06 00                  473 	ld	b, #0x00
      00018B 69                     474 	ld	l, c
      00018C 60                     475 	ld	h, b
      00018D 29                     476 	add	hl, hl
      00018E 09                     477 	add	hl, bc
      00018F 33                     478 	inc	sp
      000190 33                     479 	inc	sp
      000191 E5                     480 	push	hl
                                    481 ;src/main.c:188: pile->height = 6u;
                                    482 ;c
      000192 F8 0D                  483 	ldhl	sp,#13
      000194 2A                     484 	ld	a, (hl+)
      000195 5F                     485 	ld	e, a
      000196 56                     486 	ld	d, (hl)
      000197 21 04 00               487 	ld	hl, #0x0004
      00019A 19                     488 	add	hl, de
      00019B E5                     489 	push	hl
      00019C 7D                     490 	ld	a, l
      00019D F8 09                  491 	ldhl	sp,	#9
      00019F 77                     492 	ld	(hl), a
      0001A0 E1                     493 	pop	hl
      0001A1 7C                     494 	ld	a, h
      0001A2 F8 08                  495 	ldhl	sp,	#8
      0001A4 77                     496 	ld	(hl), a
                                    497 ;src/main.c:186: if (i < 4u) {
      0001A5 F8 0F                  498 	ldhl	sp,	#15
      0001A7 7E                     499 	ld	a, (hl)
      0001A8 D6 04                  500 	sub	a, #0x04
      0001AA 30 26                  501 	jr	NC, 00108$
                                    502 ;src/main.c:187: pile->top = IDX_PTR(deck, 50u + i);
                                    503 ;c
      0001AC D1                     504 	pop	de
      0001AD D5                     505 	push	de
      0001AE 21r96r00               506 	ld	hl, #(_deck + 0x0096)
      0001B1 19                     507 	add	hl, de
      0001B2 E5                     508 	push	hl
      0001B3 7D                     509 	ld	a, l
      0001B4 F8 0B                  510 	ldhl	sp,	#11
      0001B6 77                     511 	ld	(hl), a
      0001B7 E1                     512 	pop	hl
      0001B8 7C                     513 	ld	a, h
      0001B9 F8 0A                  514 	ldhl	sp,	#10
      0001BB 77                     515 	ld	(hl), a
      0001BC F8 05                  516 	ldhl	sp,#5
      0001BE 2A                     517 	ld	a, (hl+)
      0001BF 5F                     518 	ld	e, a
      0001C0 56                     519 	ld	d, (hl)
      0001C1 F8 09                  520 	ldhl	sp,	#9
      0001C3 7E                     521 	ld	a, (hl)
      0001C4 12                     522 	ld	(de), a
      0001C5 13                     523 	inc	de
      0001C6 23                     524 	inc	hl
      0001C7 7E                     525 	ld	a, (hl)
      0001C8 12                     526 	ld	(de), a
                                    527 ;src/main.c:188: pile->height = 6u;
      0001C9 F8 07                  528 	ldhl	sp,	#7
      0001CB 2A                     529 	ld	a, (hl+)
      0001CC 66                     530 	ld	h, (hl)
      0001CD 6F                     531 	ld	l, a
      0001CE 36 06                  532 	ld	(hl), #0x06
      0001D0 18 17                  533 	jr	00109$
      0001D2                        534 00108$:
                                    535 ;src/main.c:190: pile->top = IDX_PTR(deck, 40u + i);
                                    536 ;c
      0001D2 11r78r00               537 	ld	de, #(_deck + 0x0078)
      0001D5 E1                     538 	pop	hl
      0001D6 E5                     539 	push	hl
      0001D7 19                     540 	add	hl, de
      0001D8 4D                     541 	ld	c, l
      0001D9 44                     542 	ld	b, h
      0001DA F8 05                  543 	ldhl	sp,	#5
      0001DC 2A                     544 	ld	a, (hl+)
      0001DD 66                     545 	ld	h, (hl)
      0001DE 6F                     546 	ld	l, a
      0001DF 79                     547 	ld	a, c
      0001E0 22                     548 	ld	(hl+), a
      0001E1 70                     549 	ld	(hl), b
                                    550 ;src/main.c:191: pile->height = 5u;
      0001E2 F8 07                  551 	ldhl	sp,	#7
      0001E4 2A                     552 	ld	a, (hl+)
      0001E5 66                     553 	ld	h, (hl)
      0001E6 6F                     554 	ld	l, a
      0001E7 36 05                  555 	ld	(hl), #0x05
      0001E9                        556 00109$:
                                    557 ;src/main.c:194: card++;
                                    558 ;c
      0001E9 F8 0B                  559 	ldhl	sp,#11
      0001EB 2A                     560 	ld	a, (hl+)
      0001EC 5F                     561 	ld	e, a
      0001ED 56                     562 	ld	d, (hl)
      0001EE 21 03 00               563 	ld	hl, #0x0003
      0001F1 19                     564 	add	hl, de
      0001F2 E5                     565 	push	hl
      0001F3 7D                     566 	ld	a, l
      0001F4 F8 0D                  567 	ldhl	sp,	#13
      0001F6 77                     568 	ld	(hl), a
      0001F7 E1                     569 	pop	hl
      0001F8 7C                     570 	ld	a, h
      0001F9 F8 0C                  571 	ldhl	sp,	#12
                                    572 ;src/main.c:195: pile++;
                                    573 ;c
      0001FB 22                     574 	ld	(hl+), a
      0001FC 2A                     575 	ld	a, (hl+)
      0001FD 5F                     576 	ld	e, a
      0001FE 56                     577 	ld	d, (hl)
      0001FF 21 05 00               578 	ld	hl, #0x0005
      000202 19                     579 	add	hl, de
      000203 E5                     580 	push	hl
      000204 7D                     581 	ld	a, l
      000205 F8 0F                  582 	ldhl	sp,	#15
      000207 77                     583 	ld	(hl), a
      000208 E1                     584 	pop	hl
      000209 7C                     585 	ld	a, h
      00020A F8 0E                  586 	ldhl	sp,	#14
                                    587 ;src/main.c:184: for (i = 0; i < 10; i++) {
      00020C 22                     588 	ld	(hl+), a
      00020D 34                     589 	inc	(hl)
      00020E 7E                     590 	ld	a, (hl)
      00020F D6 0A                  591 	sub	a, #0x0a
      000211 DAr67r01               592 	jp	C, 00125$
                                    593 ;src/main.c:198: top_card_idx = 54u;
      000214 21r6Ar01               594 	ld	hl, #_top_card_idx
      000217 36 36                  595 	ld	(hl), #0x36
                                    596 ;src/main.c:199: }
      000219 E8 10                  597 	add	sp, #16
      00021B C9                     598 	ret
                                    599 ;src/main.c:207: void draw_card_top(const UINT8 x, const UINT8 y, const UINT8 card_data)
                                    600 ;	---------------------------------
                                    601 ; Function draw_card_top
                                    602 ; ---------------------------------
      00021C                        603 _draw_card_top::
                                    604 ;src/main.c:209: if (VISIBLE(card_data)) {
      00021C F8 04                  605 	ldhl	sp,	#4
                                    606 ;src/main.c:211: set_bkg_tile_xy(x + 1u, y, SUIT(card_data) + OFFSET_BKG_SUIT);
      00021E 3A                     607 	ld	a, (hl-)
      00021F 4F                     608 	ld	c, a
      000220 2B                     609 	dec	hl
      000221 46                     610 	ld	b, (hl)
      000222 04                     611 	inc	b
                                    612 ;src/main.c:209: if (VISIBLE(card_data)) {
      000223 CB 71                  613 	bit	6, c
      000225 28 3E                  614 	jr	Z, 00102$
                                    615 ;src/main.c:210: set_bkg_tile_xy(x, y, RANK(card_data) + OFFSET_BKG_RANK);
      000227 79                     616 	ld	a, c
      000228 E6 0F                  617 	and	a, #0x0f
      00022A 3C                     618 	inc	a
      00022B F5                     619 	push	af
      00022C 33                     620 	inc	sp
      00022D F8 04                  621 	ldhl	sp,	#4
      00022F 7E                     622 	ld	a, (hl)
      000230 F5                     623 	push	af
      000231 33                     624 	inc	sp
      000232 2B                     625 	dec	hl
      000233 7E                     626 	ld	a, (hl)
      000234 F5                     627 	push	af
      000235 33                     628 	inc	sp
      000236 CDr00r00               629 	call	_set_bkg_tile_xy
      000239 E8 03                  630 	add	sp, #3
                                    631 ;src/main.c:211: set_bkg_tile_xy(x + 1u, y, SUIT(card_data) + OFFSET_BKG_SUIT);
      00023B 79                     632 	ld	a, c
      00023C 0E 00                  633 	ld	c, #0x00
      00023E E6 30                  634 	and	a, #0x30
      000240 5F                     635 	ld	e, a
      000241 16 00                  636 	ld	d, #0x00
      000243 CB 2A                  637 	sra	d
      000245 CB 1B                  638 	rr	e
      000247 CB 2A                  639 	sra	d
      000249 CB 1B                  640 	rr	e
      00024B CB 2A                  641 	sra	d
      00024D CB 1B                  642 	rr	e
      00024F CB 2A                  643 	sra	d
      000251 CB 1B                  644 	rr	e
      000253 7B                     645 	ld	a, e
      000254 C6 0E                  646 	add	a, #0x0e
      000256 F5                     647 	push	af
      000257 33                     648 	inc	sp
      000258 F8 04                  649 	ldhl	sp,	#4
      00025A 7E                     650 	ld	a, (hl)
      00025B F5                     651 	push	af
      00025C 33                     652 	inc	sp
      00025D C5                     653 	push	bc
      00025E 33                     654 	inc	sp
      00025F CDr00r00               655 	call	_set_bkg_tile_xy
      000262 E8 03                  656 	add	sp, #3
      000264 C9                     657 	ret
      000265                        658 00102$:
                                    659 ;src/main.c:213: set_bkg_tile_xy(x, y, OFFSET_BKG_BACK);
      000265 3E 18                  660 	ld	a, #0x18
      000267 F5                     661 	push	af
      000268 33                     662 	inc	sp
      000269 F8 04                  663 	ldhl	sp,	#4
      00026B 7E                     664 	ld	a, (hl)
      00026C F5                     665 	push	af
      00026D 33                     666 	inc	sp
      00026E 2B                     667 	dec	hl
      00026F 7E                     668 	ld	a, (hl)
      000270 F5                     669 	push	af
      000271 33                     670 	inc	sp
      000272 CDr00r00               671 	call	_set_bkg_tile_xy
      000275 E8 03                  672 	add	sp, #3
                                    673 ;src/main.c:214: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_BACK + 1u);
      000277 3E 19                  674 	ld	a, #0x19
      000279 F5                     675 	push	af
      00027A 33                     676 	inc	sp
      00027B F8 04                  677 	ldhl	sp,	#4
      00027D 7E                     678 	ld	a, (hl)
      00027E F5                     679 	push	af
      00027F 33                     680 	inc	sp
      000280 C5                     681 	push	bc
      000281 33                     682 	inc	sp
      000282 CDr00r00               683 	call	_set_bkg_tile_xy
      000285 E8 03                  684 	add	sp, #3
                                    685 ;src/main.c:216: }
      000287 C9                     686 	ret
                                    687 ;src/main.c:218: void draw_card_bottom(const UINT8 x, const UINT8 y, const UINT8 card_data)
                                    688 ;	---------------------------------
                                    689 ; Function draw_card_bottom
                                    690 ; ---------------------------------
      000288                        691 _draw_card_bottom::
                                    692 ;src/main.c:220: set_bkg_tile_xy(x, y, OFFSET_BKG_BLANK + 2u);
      000288 3E 14                  693 	ld	a, #0x14
      00028A F5                     694 	push	af
      00028B 33                     695 	inc	sp
      00028C F8 04                  696 	ldhl	sp,	#4
      00028E 7E                     697 	ld	a, (hl)
      00028F F5                     698 	push	af
      000290 33                     699 	inc	sp
      000291 2B                     700 	dec	hl
      000292 7E                     701 	ld	a, (hl)
      000293 F5                     702 	push	af
      000294 33                     703 	inc	sp
      000295 CDr00r00               704 	call	_set_bkg_tile_xy
      000298 E8 03                  705 	add	sp, #3
                                    706 ;src/main.c:221: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_BLANK + 3u);
      00029A F8 02                  707 	ldhl	sp,	#2
      00029C 4E                     708 	ld	c, (hl)
      00029D 0C                     709 	inc	c
      00029E 3E 15                  710 	ld	a, #0x15
      0002A0 F5                     711 	push	af
      0002A1 33                     712 	inc	sp
      0002A2 23                     713 	inc	hl
      0002A3 46                     714 	ld	b, (hl)
      0002A4 C5                     715 	push	bc
      0002A5 CDr00r00               716 	call	_set_bkg_tile_xy
      0002A8 E8 03                  717 	add	sp, #3
                                    718 ;src/main.c:222: set_bkg_tile_xy(x, y+ 1u, SUIT(card_data) + OFFSET_BKG_SUIT_ROT);
      0002AA F8 04                  719 	ldhl	sp,	#4
      0002AC 7E                     720 	ld	a, (hl)
      0002AD E6 30                  721 	and	a, #0x30
      0002AF 5F                     722 	ld	e, a
      0002B0 16 00                  723 	ld	d, #0x00
      0002B2 CB 2A                  724 	sra	d
      0002B4 CB 1B                  725 	rr	e
      0002B6 CB 2A                  726 	sra	d
      0002B8 CB 1B                  727 	rr	e
      0002BA CB 2A                  728 	sra	d
      0002BC CB 1B                  729 	rr	e
      0002BE CB 2A                  730 	sra	d
      0002C0 CB 1B                  731 	rr	e
      0002C2 7B                     732 	ld	a, e
      0002C3 C6 2B                  733 	add	a, #0x2b
      0002C5 2B                     734 	dec	hl
      0002C6 46                     735 	ld	b, (hl)
      0002C7 04                     736 	inc	b
      0002C8 F5                     737 	push	af
      0002C9 33                     738 	inc	sp
      0002CA C5                     739 	push	bc
      0002CB 33                     740 	inc	sp
      0002CC 2B                     741 	dec	hl
      0002CD 7E                     742 	ld	a, (hl)
      0002CE F5                     743 	push	af
      0002CF 33                     744 	inc	sp
      0002D0 CDr00r00               745 	call	_set_bkg_tile_xy
      0002D3 E8 03                  746 	add	sp, #3
                                    747 ;src/main.c:223: set_bkg_tile_xy(x + 1u, y+ 1u, RANK(card_data) + OFFSET_BKG_RANK_ROT);
      0002D5 F8 04                  748 	ldhl	sp,	#4
      0002D7 7E                     749 	ld	a, (hl)
      0002D8 E6 0F                  750 	and	a, #0x0f
      0002DA C6 1E                  751 	add	a, #0x1e
      0002DC F5                     752 	push	af
      0002DD 33                     753 	inc	sp
      0002DE C5                     754 	push	bc
      0002DF CDr00r00               755 	call	_set_bkg_tile_xy
      0002E2 E8 03                  756 	add	sp, #3
                                    757 ;src/main.c:224: }
      0002E4 C9                     758 	ret
                                    759 ;src/main.c:232: void draw_pile(Card *card, UINT8 pile_idx, UINT8 height)
                                    760 ;	---------------------------------
                                    761 ; Function draw_pile
                                    762 ; ---------------------------------
      0002E5                        763 _draw_pile::
      0002E5 E8 FD                  764 	add	sp, #-3
                                    765 ;src/main.c:234: pile_idx <<= 1;
      0002E7 F8 07                  766 	ldhl	sp,	#7
      0002E9 7E                     767 	ld	a, (hl)
      0002EA 87                     768 	add	a, a
                                    769 ;src/main.c:235: height += SCOREBAR_HEIGHT;
      0002EB 22                     770 	ld	(hl+), a
      0002EC 34                     771 	inc	(hl)
      0002ED 34                     772 	inc	(hl)
      0002EE 34                     773 	inc	(hl)
                                    774 ;src/main.c:236: if (!card)
      0002EF 2B                     775 	dec	hl
      0002F0 2B                     776 	dec	hl
      0002F1 3A                     777 	ld	a, (hl-)
      0002F2 B6                     778 	or	a, (hl)
                                    779 ;src/main.c:237: return;
                                    780 ;src/main.c:238: while (1) {
      0002F3 28 59                  781 	jr	Z, 00108$
      0002F5 F8 08                  782 	ldhl	sp,	#8
      0002F7 7E                     783 	ld	a, (hl)
      0002F8 F8 00                  784 	ldhl	sp,	#0
      0002FA 77                     785 	ld	(hl), a
      0002FB                        786 00106$:
                                    787 ;src/main.c:239: draw_card_top(pile_idx, height, card->data);
      0002FB F8 05                  788 	ldhl	sp,	#5
      0002FD 2A                     789 	ld	a, (hl+)
      0002FE 5E                     790 	ld	e, (hl)
      0002FF F8 01                  791 	ldhl	sp,	#1
      000301 22                     792 	ld	(hl+), a
      000302 7B                     793 	ld	a, e
      000303 32                     794 	ld	(hl-), a
      000304 2A                     795 	ld	a, (hl+)
      000305 4F                     796 	ld	c, a
      000306 46                     797 	ld	b, (hl)
      000307 03                     798 	inc	bc
      000308 03                     799 	inc	bc
      000309 0A                     800 	ld	a, (bc)
      00030A C5                     801 	push	bc
      00030B F5                     802 	push	af
      00030C 33                     803 	inc	sp
      00030D 2B                     804 	dec	hl
      00030E 2B                     805 	dec	hl
      00030F 7E                     806 	ld	a, (hl)
      000310 F5                     807 	push	af
      000311 33                     808 	inc	sp
      000312 F8 0B                  809 	ldhl	sp,	#11
      000314 7E                     810 	ld	a, (hl)
      000315 F5                     811 	push	af
      000316 33                     812 	inc	sp
      000317 CDr1Cr02               813 	call	_draw_card_top
      00031A E8 03                  814 	add	sp, #3
      00031C C1                     815 	pop	bc
                                    816 ;src/main.c:240: if (!card->next_card) {
      00031D F8 01                  817 	ldhl	sp,#1
      00031F 2A                     818 	ld	a, (hl+)
      000320 5F                     819 	ld	e, a
      000321 56                     820 	ld	d, (hl)
      000322 1A                     821 	ld	a, (de)
      000323 2B                     822 	dec	hl
      000324 22                     823 	ld	(hl+), a
      000325 13                     824 	inc	de
      000326 1A                     825 	ld	a, (de)
                                    826 ;src/main.c:241: draw_card_bottom(pile_idx, height + 1u, card->data);
      000327 32                     827 	ld	(hl-), a
      000328 2B                     828 	dec	hl
      000329 56                     829 	ld	d, (hl)
      00032A 14                     830 	inc	d
                                    831 ;src/main.c:240: if (!card->next_card) {
      00032B 23                     832 	inc	hl
      00032C 23                     833 	inc	hl
      00032D 3A                     834 	ld	a, (hl-)
      00032E B6                     835 	or	a, (hl)
      00032F 20 11                  836 	jr	NZ, 00104$
                                    837 ;src/main.c:241: draw_card_bottom(pile_idx, height + 1u, card->data);
      000331 0A                     838 	ld	a, (bc)
      000332 F5                     839 	push	af
      000333 33                     840 	inc	sp
      000334 D5                     841 	push	de
      000335 33                     842 	inc	sp
      000336 F8 09                  843 	ldhl	sp,	#9
      000338 7E                     844 	ld	a, (hl)
      000339 F5                     845 	push	af
      00033A 33                     846 	inc	sp
      00033B CDr88r02               847 	call	_draw_card_bottom
      00033E E8 03                  848 	add	sp, #3
                                    849 ;src/main.c:242: break;
      000340 18 0C                  850 	jr	00108$
      000342                        851 00104$:
                                    852 ;src/main.c:244: height++;
      000342 F8 00                  853 	ldhl	sp,	#0
                                    854 ;src/main.c:245: card = card->next_card;
      000344 7A                     855 	ld	a, d
      000345 22                     856 	ld	(hl+), a
      000346 2A                     857 	ld	a, (hl+)
      000347 5E                     858 	ld	e, (hl)
      000348 F8 05                  859 	ldhl	sp,	#5
      00034A 22                     860 	ld	(hl+), a
      00034B 73                     861 	ld	(hl), e
      00034C 18 AD                  862 	jr	00106$
      00034E                        863 00108$:
                                    864 ;src/main.c:247: }
      00034E E8 03                  865 	add	sp, #3
      000350 C9                     866 	ret
                                    867 ;src/main.c:249: void draw_sequential_card(const UINT8 x, const UINT8 y, const UINT8 bkg_offset)
                                    868 ;	---------------------------------
                                    869 ; Function draw_sequential_card
                                    870 ; ---------------------------------
      000351                        871 _draw_sequential_card::
                                    872 ;src/main.c:251: set_bkg_tile_xy(x, y, bkg_offset);
      000351 F8 04                  873 	ldhl	sp,	#4
      000353 7E                     874 	ld	a, (hl)
      000354 F5                     875 	push	af
      000355 33                     876 	inc	sp
      000356 2B                     877 	dec	hl
      000357 7E                     878 	ld	a, (hl)
      000358 F5                     879 	push	af
      000359 33                     880 	inc	sp
      00035A 2B                     881 	dec	hl
      00035B 7E                     882 	ld	a, (hl)
      00035C F5                     883 	push	af
      00035D 33                     884 	inc	sp
      00035E CDr00r00               885 	call	_set_bkg_tile_xy
      000361 E8 03                  886 	add	sp, #3
                                    887 ;src/main.c:252: set_bkg_tile_xy(x + 1u, y, bkg_offset + 1u);
      000363 F8 04                  888 	ldhl	sp,	#4
      000365 7E                     889 	ld	a, (hl)
      000366 3C                     890 	inc	a
      000367 2B                     891 	dec	hl
      000368 2B                     892 	dec	hl
      000369 4E                     893 	ld	c, (hl)
      00036A 0C                     894 	inc	c
      00036B F5                     895 	push	af
      00036C 33                     896 	inc	sp
      00036D 23                     897 	inc	hl
      00036E 46                     898 	ld	b, (hl)
      00036F C5                     899 	push	bc
      000370 CDr00r00               900 	call	_set_bkg_tile_xy
      000373 E8 03                  901 	add	sp, #3
                                    902 ;src/main.c:253: set_bkg_tile_xy(x, y + 1u, bkg_offset + 2u);
      000375 F8 04                  903 	ldhl	sp,	#4
      000377 7E                     904 	ld	a, (hl)
      000378 3C                     905 	inc	a
      000379 3C                     906 	inc	a
      00037A 2B                     907 	dec	hl
      00037B 46                     908 	ld	b, (hl)
      00037C 04                     909 	inc	b
      00037D F5                     910 	push	af
      00037E 33                     911 	inc	sp
      00037F C5                     912 	push	bc
      000380 33                     913 	inc	sp
      000381 2B                     914 	dec	hl
      000382 7E                     915 	ld	a, (hl)
      000383 F5                     916 	push	af
      000384 33                     917 	inc	sp
      000385 CDr00r00               918 	call	_set_bkg_tile_xy
      000388 E8 03                  919 	add	sp, #3
                                    920 ;src/main.c:254: set_bkg_tile_xy(x + 1u, y + 1u, bkg_offset + 3u);
      00038A F8 04                  921 	ldhl	sp,	#4
      00038C 7E                     922 	ld	a, (hl)
      00038D 3C                     923 	inc	a
      00038E 3C                     924 	inc	a
      00038F 3C                     925 	inc	a
      000390 F5                     926 	push	af
      000391 33                     927 	inc	sp
      000392 C5                     928 	push	bc
      000393 33                     929 	inc	sp
      000394 79                     930 	ld	a, c
      000395 F5                     931 	push	af
      000396 33                     932 	inc	sp
      000397 CDr00r00               933 	call	_set_bkg_tile_xy
      00039A E8 03                  934 	add	sp, #3
                                    935 ;src/main.c:255: set_bkg_tile_xy(x, y + 2u, bkg_offset + 4u);
      00039C F8 04                  936 	ldhl	sp,	#4
      00039E 7E                     937 	ld	a, (hl)
      00039F 3C                     938 	inc	a
      0003A0 3C                     939 	inc	a
      0003A1 3C                     940 	inc	a
      0003A2 3C                     941 	inc	a
      0003A3 2B                     942 	dec	hl
      0003A4 46                     943 	ld	b, (hl)
      0003A5 04                     944 	inc	b
      0003A6 04                     945 	inc	b
      0003A7 F5                     946 	push	af
      0003A8 33                     947 	inc	sp
      0003A9 C5                     948 	push	bc
      0003AA 33                     949 	inc	sp
      0003AB 2B                     950 	dec	hl
      0003AC 7E                     951 	ld	a, (hl)
      0003AD F5                     952 	push	af
      0003AE 33                     953 	inc	sp
      0003AF CDr00r00               954 	call	_set_bkg_tile_xy
      0003B2 E8 03                  955 	add	sp, #3
                                    956 ;src/main.c:256: set_bkg_tile_xy(x + 1u, y + 2u, bkg_offset + 5u);
      0003B4 F8 04                  957 	ldhl	sp,	#4
      0003B6 7E                     958 	ld	a, (hl)
      0003B7 C6 05                  959 	add	a, #0x05
      0003B9 F5                     960 	push	af
      0003BA 33                     961 	inc	sp
      0003BB C5                     962 	push	bc
      0003BC CDr00r00               963 	call	_set_bkg_tile_xy
      0003BF E8 03                  964 	add	sp, #3
                                    965 ;src/main.c:257: }
      0003C1 C9                     966 	ret
                                    967 ;src/main.c:259: void draw_background(void)
                                    968 ;	---------------------------------
                                    969 ; Function draw_background
                                    970 ; ---------------------------------
      0003C2                        971 _draw_background::
      0003C2 E8 FD                  972 	add	sp, #-3
                                    973 ;src/main.c:262: Pile *pile = IDX_PTR(piles, 0);
      0003C4 01r38r01               974 	ld	bc, #_piles+0
                                    975 ;src/main.c:263: for (i = 0; i < 10u; i++) {
      0003C7 AF                     976 	xor	a, a
      0003C8 F8 02                  977 	ldhl	sp,	#2
      0003CA 77                     978 	ld	(hl), a
      0003CB                        979 00102$:
                                    980 ;src/main.c:264: draw_pile(pile->base, i, 0);
      0003CB 59                     981 	ld	e, c
      0003CC 50                     982 	ld	d, b
      0003CD 1A                     983 	ld	a, (de)
      0003CE F8 00                  984 	ldhl	sp,	#0
      0003D0 22                     985 	ld	(hl+), a
      0003D1 13                     986 	inc	de
      0003D2 1A                     987 	ld	a, (de)
      0003D3 77                     988 	ld	(hl), a
      0003D4 C5                     989 	push	bc
      0003D5 AF                     990 	xor	a, a
      0003D6 F5                     991 	push	af
      0003D7 33                     992 	inc	sp
      0003D8 23                     993 	inc	hl
      0003D9 7E                     994 	ld	a, (hl)
      0003DA F5                     995 	push	af
      0003DB 33                     996 	inc	sp
      0003DC 2B                     997 	dec	hl
      0003DD 2B                     998 	dec	hl
      0003DE 2A                     999 	ld	a, (hl+)
      0003DF 66                    1000 	ld	h, (hl)
      0003E0 6F                    1001 	ld	l, a
      0003E1 E5                    1002 	push	hl
      0003E2 CDrE5r02              1003 	call	_draw_pile
      0003E5 E8 04                 1004 	add	sp, #4
      0003E7 C1                    1005 	pop	bc
                                   1006 ;src/main.c:265: pile++;
      0003E8 03                    1007 	inc	bc
      0003E9 03                    1008 	inc	bc
      0003EA 03                    1009 	inc	bc
      0003EB 03                    1010 	inc	bc
      0003EC 03                    1011 	inc	bc
                                   1012 ;src/main.c:263: for (i = 0; i < 10u; i++) {
      0003ED F8 02                 1013 	ldhl	sp,	#2
      0003EF 34                    1014 	inc	(hl)
      0003F0 7E                    1015 	ld	a, (hl)
      0003F1 D6 0A                 1016 	sub	a, #0x0a
      0003F3 38 D6                 1017 	jr	C, 00102$
                                   1018 ;src/main.c:267: draw_sequential_card(0, 0, OFFSET_BKG_BACK);
      0003F5 3E 18                 1019 	ld	a, #0x18
      0003F7 F5                    1020 	push	af
      0003F8 33                    1021 	inc	sp
      0003F9 AF                    1022 	xor	a, a
      0003FA F5                    1023 	push	af
      0003FB 33                    1024 	inc	sp
      0003FC AF                    1025 	xor	a, a
      0003FD F5                    1026 	push	af
      0003FE 33                    1027 	inc	sp
      0003FF CDr51r03              1028 	call	_draw_sequential_card
      000402 E8 03                 1029 	add	sp, #3
                                   1030 ;src/main.c:268: }
      000404 E8 03                 1031 	add	sp, #3
      000406 C9                    1032 	ret
                                   1033 ;src/main.c:270: void cursor_adjust_height(void)
                                   1034 ;	---------------------------------
                                   1035 ; Function cursor_adjust_height
                                   1036 ; ---------------------------------
      000407                       1037 _cursor_adjust_height::
                                   1038 ;src/main.c:272: Pile *pile = IDX_PTR(piles, cursor.pile_idx);
      000407 01r38r01              1039 	ld	bc, #_piles+0
      00040A FAr89r01              1040 	ld	a, (#(_cursor + 0x0006) + 0)
      00040D 5F                    1041 	ld	e, a
      00040E 16 00                 1042 	ld	d, #0x00
      000410 6B                    1043 	ld	l, e
      000411 62                    1044 	ld	h, d
      000412 29                    1045 	add	hl, hl
      000413 29                    1046 	add	hl, hl
      000414 19                    1047 	add	hl, de
      000415 09                    1048 	add	hl, bc
                                   1049 ;src/main.c:273: if (cursor.height >= pile->height)
      000416 01r8Ar01              1050 	ld	bc, #_cursor + 7
      000419 0A                    1051 	ld	a, (bc)
      00041A 57                    1052 	ld	d, a
      00041B 23                    1053 	inc	hl
      00041C 23                    1054 	inc	hl
      00041D 23                    1055 	inc	hl
      00041E 23                    1056 	inc	hl
      00041F 5E                    1057 	ld	e, (hl)
      000420 7A                    1058 	ld	a, d
      000421 93                    1059 	sub	a, e
      000422 D8                    1060 	ret	C
                                   1061 ;src/main.c:274: cursor.height = pile->height - !!pile->height;
      000423 7B                    1062 	ld	a, e
      000424 D6 01                 1063 	sub	a,#0x01
      000426 3E 00                 1064 	ld	a, #0x00
      000428 17                    1065 	rla
      000429 EE 01                 1066 	xor	a, #0x01
      00042B 57                    1067 	ld	d, a
      00042C 7B                    1068 	ld	a, e
      00042D 92                    1069 	sub	a, d
      00042E 02                    1070 	ld	(bc), a
                                   1071 ;src/main.c:275: }
      00042F C9                    1072 	ret
                                   1073 ;src/main.c:277: UINT8 is_stack_coherent(Card *card)
                                   1074 ;	---------------------------------
                                   1075 ; Function is_stack_coherent
                                   1076 ; ---------------------------------
      000430                       1077 _is_stack_coherent::
      000430 E8 FE                 1078 	add	sp, #-2
                                   1079 ;src/main.c:279: while (card->next_card) {
      000432                       1080 00103$:
      000432 F8 04                 1081 	ldhl	sp,#4
      000434 2A                    1082 	ld	a, (hl+)
      000435 4F                    1083 	ld	c, a
      000436 46                    1084 	ld	b, (hl)
      000437 59                    1085 	ld	e, c
      000438 50                    1086 	ld	d, b
      000439 1A                    1087 	ld	a, (de)
      00043A F8 00                 1088 	ldhl	sp,	#0
      00043C 22                    1089 	ld	(hl+), a
      00043D 13                    1090 	inc	de
      00043E 1A                    1091 	ld	a, (de)
      00043F 77                    1092 	ld	(hl), a
      000440 3A                    1093 	ld	a, (hl-)
      000441 B6                    1094 	or	a, (hl)
      000442 28 27                 1095 	jr	Z, 00105$
                                   1096 ;src/main.c:280: UINT8 prev_data = card->data;
      000444 03                    1097 	inc	bc
      000445 03                    1098 	inc	bc
      000446 78                    1099 	ld	a, b
      000447 69                    1100 	ld	l, c
      000448 67                    1101 	ld	h, a
      000449 4E                    1102 	ld	c, (hl)
                                   1103 ;src/main.c:281: card = card->next_card;
      00044A F8 00                 1104 	ldhl	sp,	#0
      00044C 2A                    1105 	ld	a, (hl+)
      00044D 5E                    1106 	ld	e, (hl)
      00044E F8 04                 1107 	ldhl	sp,	#4
      000450 22                    1108 	ld	(hl+), a
                                   1109 ;src/main.c:282: if (prev_data != card->data + 1u)
      000451 7B                    1110 	ld	a, e
      000452 32                    1111 	ld	(hl-), a
      000453 2A                    1112 	ld	a, (hl+)
      000454 5F                    1113 	ld	e, a
      000455 56                    1114 	ld	d, (hl)
      000456 13                    1115 	inc	de
      000457 13                    1116 	inc	de
      000458 1A                    1117 	ld	a, (de)
      000459 5F                    1118 	ld	e, a
      00045A 16 00                 1119 	ld	d, #0x00
      00045C 13                    1120 	inc	de
      00045D 06 00                 1121 	ld	b, #0x00
      00045F 79                    1122 	ld	a, c
      000460 93                    1123 	sub	a, e
      000461 20 04                 1124 	jr	NZ, 00123$
      000463 78                    1125 	ld	a, b
      000464 92                    1126 	sub	a, d
      000465 28 CB                 1127 	jr	Z, 00103$
      000467                       1128 00123$:
                                   1129 ;src/main.c:283: return 0;
      000467 1E 00                 1130 	ld	e, #0x00
      000469 18 02                 1131 	jr	00106$
      00046B                       1132 00105$:
                                   1133 ;src/main.c:285: return 1u;
      00046B 1E 01                 1134 	ld	e, #0x01
      00046D                       1135 00106$:
                                   1136 ;src/main.c:286: }
      00046D E8 02                 1137 	add	sp, #2
      00046F C9                    1138 	ret
                                   1139 ;src/main.c:314: void dynamic_metasprite_deal_callback(void)
                                   1140 ;	---------------------------------
                                   1141 ; Function dynamic_metasprite_deal_callback
                                   1142 ; ---------------------------------
      000470                       1143 _dynamic_metasprite_deal_callback::
      000470 E8 FC                 1144 	add	sp, #-4
                                   1145 ;src/main.c:316: Pile *pile = IDX_PTR(piles, dynamic_metasprite.data[0]);
      000472 21r7Br01              1146 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000475 4E                    1147 	ld	c, (hl)
      000476 06 00                 1148 	ld	b, #0x00
      000478 69                    1149 	ld	l, c
      000479 60                    1150 	ld	h, b
      00047A 29                    1151 	add	hl, hl
      00047B 29                    1152 	add	hl, hl
      00047C 09                    1153 	add	hl, bc
      00047D 3Er38                 1154 	ld	a, #<(_piles)
      00047F 85                    1155 	add	a, l
      000480 47                    1156 	ld	b, a
      000481 3Es01                 1157 	ld	a, #>(_piles)
      000483 8C                    1158 	adc	a, h
      000484 F8 00                 1159 	ldhl	sp,	#0
      000486 70                    1160 	ld	(hl), b
      000487 23                    1161 	inc	hl
      000488 77                    1162 	ld	(hl), a
                                   1163 ;src/main.c:317: draw_card(dynamic_metasprite.data[0] * 2u, SCOREBAR_HEIGHT + pile->height - 1u, pile->top->data);
      000489 E1                    1164 	pop	hl
      00048A E5                    1165 	push	hl
      00048B 23                    1166 	inc	hl
      00048C 23                    1167 	inc	hl
      00048D 2A                    1168 	ld	a, (hl+)
      00048E 66                    1169 	ld	h, (hl)
      00048F 6F                    1170 	ld	l, a
      000490 23                    1171 	inc	hl
      000491 23                    1172 	inc	hl
      000492 46                    1173 	ld	b, (hl)
                                   1174 ;c
      000493 D1                    1175 	pop	de
      000494 D5                    1176 	push	de
      000495 21 04 00              1177 	ld	hl, #0x0004
      000498 19                    1178 	add	hl, de
      000499 5D                    1179 	ld	e, l
      00049A 54                    1180 	ld	d, h
      00049B 1A                    1181 	ld	a, (de)
      00049C C6 02                 1182 	add	a, #0x02
      00049E 57                    1183 	ld	d, a
      00049F CB 21                 1184 	sla	c
                                   1185 ;src/main.c:228: draw_card_top(x, y, card_data);
      0004A1 C5                    1186 	push	bc
      0004A2 D5                    1187 	push	de
      0004A3 C5                    1188 	push	bc
      0004A4 33                    1189 	inc	sp
      0004A5 59                    1190 	ld	e, c
      0004A6 D5                    1191 	push	de
      0004A7 CDr1Cr02              1192 	call	_draw_card_top
      0004AA E8 03                 1193 	add	sp, #3
      0004AC D1                    1194 	pop	de
      0004AD C1                    1195 	pop	bc
                                   1196 ;src/main.c:229: draw_card_bottom(x, y + 1u, card_data);
      0004AE 14                    1197 	inc	d
      0004AF C5                    1198 	push	bc
      0004B0 33                    1199 	inc	sp
      0004B1 59                    1200 	ld	e, c
      0004B2 D5                    1201 	push	de
      0004B3 CDr88r02              1202 	call	_draw_card_bottom
      0004B6 E8 03                 1203 	add	sp, #3
                                   1204 ;src/main.c:318: if (dynamic_metasprite.data[0] == 9u) {
      0004B8 21r7Br01              1205 	ld	hl, #(_dynamic_metasprite + 0x000d)
      0004BB 4E                    1206 	ld	c, (hl)
      0004BC 79                    1207 	ld	a, c
      0004BD D6 09                 1208 	sub	a, #0x09
      0004BF 20 2C                 1209 	jr	NZ, 00104$
                                   1210 ;src/main.c:319: if (top_card_idx == 104u)
      0004C1 FAr6Ar01              1211 	ld	a, (#_top_card_idx)
      0004C4 D6 68                 1212 	sub	a, #0x68
      0004C6 20 0F                 1213 	jr	NZ, 00102$
                                   1214 ;src/main.c:320: draw_sequential_card(0, 0, OFFSET_BKG_OUTLINE);
      0004C8 3E 2F                 1215 	ld	a, #0x2f
      0004CA F5                    1216 	push	af
      0004CB 33                    1217 	inc	sp
      0004CC AF                    1218 	xor	a, a
      0004CD F5                    1219 	push	af
      0004CE 33                    1220 	inc	sp
      0004CF AF                    1221 	xor	a, a
      0004D0 F5                    1222 	push	af
      0004D1 33                    1223 	inc	sp
      0004D2 CDr51r03              1224 	call	_draw_sequential_card
      0004D5 E8 03                 1225 	add	sp, #3
      0004D7                       1226 00102$:
                                   1227 ;src/main.c:321: metasprite_2x3_hide(SPRITE_DYNAMIC);
      0004D7 3E 0C                 1228 	ld	a, #0x0c
      0004D9 F5                    1229 	push	af
      0004DA 33                    1230 	inc	sp
      0004DB CDr00r00              1231 	call	_metasprite_2x3_hide
      0004DE 33                    1232 	inc	sp
                                   1233 ;src/main.c:322: flags &= ~FLAG_PLAYING_ANIMATION;
      0004DF 21r6Br01              1234 	ld	hl, #_flags
      0004E2 7E                    1235 	ld	a, (hl)
      0004E3 E6 FB                 1236 	and	a, #0xfb
      0004E5 77                    1237 	ld	(hl), a
                                   1238 ;src/main.c:323: dynamic_metasprite.target_frames = -1;
      0004E6 21r76r01              1239 	ld	hl, #(_dynamic_metasprite + 0x0008)
      0004E9 36 FF                 1240 	ld	(hl), #0xff
                                   1241 ;src/main.c:324: return;
      0004EB 18 48                 1242 	jr	00106$
      0004ED                       1243 00104$:
                                   1244 ;src/main.c:326: pile++;
                                   1245 ;c
      0004ED D1                    1246 	pop	de
      0004EE D5                    1247 	push	de
      0004EF 21 05 00              1248 	ld	hl, #0x0005
      0004F2 19                    1249 	add	hl, de
      0004F3 E5                    1250 	push	hl
      0004F4 7D                    1251 	ld	a, l
      0004F5 F8 04                 1252 	ldhl	sp,	#4
      0004F7 77                    1253 	ld	(hl), a
      0004F8 E1                    1254 	pop	hl
      0004F9 7C                    1255 	ld	a, h
      0004FA F8 03                 1256 	ldhl	sp,	#3
      0004FC 77                    1257 	ld	(hl), a
                                   1258 ;src/main.c:327: dynamic_metasprite.data[0]++;
      0004FD 0C                    1259 	inc	c
      0004FE 21r7Br01              1260 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000501 71                    1261 	ld	(hl), c
                                   1262 ;src/main.c:328: dynamic_metasprite.dist[0] += 16;
      000502 21r72r01              1263 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000505 2A                    1264 	ld	a, (hl+)
      000506 4F                    1265 	ld	c, a
      000507 46                    1266 	ld	b, (hl)
      000508 21 10 00              1267 	ld	hl, #0x0010
      00050B 09                    1268 	add	hl, bc
      00050C 4D                    1269 	ld	c, l
      00050D 44                    1270 	ld	b, h
      00050E 21r72r01              1271 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000511 79                    1272 	ld	a, c
      000512 22                    1273 	ld	(hl+), a
      000513 70                    1274 	ld	(hl), b
                                   1275 ;src/main.c:329: dynamic_metasprite.dist[1] = (INT16)(SCOREBAR_HEIGHT + pile->height - 1u) * 8;
                                   1276 ;c
      000514 F8 02                 1277 	ldhl	sp,#2
      000516 2A                    1278 	ld	a, (hl+)
      000517 5F                    1279 	ld	e, a
      000518 56                    1280 	ld	d, (hl)
      000519 21 04 00              1281 	ld	hl, #0x0004
      00051C 19                    1282 	add	hl, de
      00051D 4D                    1283 	ld	c, l
      00051E 44                    1284 	ld	b, h
      00051F 0A                    1285 	ld	a, (bc)
      000520 6F                    1286 	ld	l, a
      000521 26 00                 1287 	ld	h, #0x00
      000523 23                    1288 	inc	hl
      000524 23                    1289 	inc	hl
      000525 29                    1290 	add	hl, hl
      000526 29                    1291 	add	hl, hl
      000527 29                    1292 	add	hl, hl
      000528 4D                    1293 	ld	c, l
      000529 44                    1294 	ld	b, h
      00052A 21r74r01              1295 	ld	hl, #(_dynamic_metasprite + 0x0006)
      00052D 79                    1296 	ld	a, c
      00052E 22                    1297 	ld	(hl+), a
      00052F 70                    1298 	ld	(hl), b
                                   1299 ;src/main.c:330: dynamic_metasprite.elapsed_frames = 0;
      000530 21r77r01              1300 	ld	hl, #(_dynamic_metasprite + 0x0009)
      000533 36 00                 1301 	ld	(hl), #0x00
      000535                       1302 00106$:
                                   1303 ;src/main.c:331: }
      000535 E8 04                 1304 	add	sp, #4
      000537 C9                    1305 	ret
                                   1306 ;src/main.c:333: void dynamic_metasprite_deal(void)
                                   1307 ;	---------------------------------
                                   1308 ; Function dynamic_metasprite_deal
                                   1309 ; ---------------------------------
      000538                       1310 _dynamic_metasprite_deal::
                                   1311 ;src/main.c:335: Pile *pile = IDX_PTR(piles, 0);
                                   1312 ;src/main.c:336: dynamic_metasprite.src[0] = 0;
      000538 21r6Er01              1313 	ld	hl, #_dynamic_metasprite
      00053B AF                    1314 	xor	a, a
      00053C 22                    1315 	ld	(hl+), a
      00053D 77                    1316 	ld	(hl), a
                                   1317 ;src/main.c:337: dynamic_metasprite.src[1] = 0;
      00053E 21r70r01              1318 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000541 AF                    1319 	xor	a, a
      000542 22                    1320 	ld	(hl+), a
      000543 77                    1321 	ld	(hl), a
                                   1322 ;src/main.c:338: dynamic_metasprite.dist[0] = 0;
      000544 21r72r01              1323 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000547 AF                    1324 	xor	a, a
      000548 22                    1325 	ld	(hl+), a
      000549 77                    1326 	ld	(hl), a
                                   1327 ;src/main.c:339: dynamic_metasprite.dist[1] = (INT16)(SCOREBAR_HEIGHT + pile->height - 1u) * 8;
      00054A FAr3Cr01              1328 	ld	a, (#(_piles + 0x0004) + 0)
      00054D 26 00                 1329 	ld	h, #0x00
      00054F 6F                    1330 	ld	l, a
      000550 23                    1331 	inc	hl
      000551 23                    1332 	inc	hl
      000552 29                    1333 	add	hl, hl
      000553 29                    1334 	add	hl, hl
      000554 29                    1335 	add	hl, hl
      000555 4D                    1336 	ld	c, l
      000556 44                    1337 	ld	b, h
      000557 21r74r01              1338 	ld	hl, #(_dynamic_metasprite + 0x0006)
      00055A 71                    1339 	ld	(hl), c
      00055B 23                    1340 	inc	hl
      00055C 70                    1341 	ld	(hl), b
                                   1342 ;src/main.c:340: dynamic_metasprite.elapsed_frames = 0;
      00055D 21r77r01              1343 	ld	hl, #(_dynamic_metasprite + 0x0009)
      000560 36 00                 1344 	ld	(hl), #0x00
                                   1345 ;src/main.c:341: dynamic_metasprite.target_frames = MOVE_TARGET_FRAMES;
      000562 21r76r01              1346 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000565 36 10                 1347 	ld	(hl), #0x10
                                   1348 ;src/main.c:342: dynamic_metasprite.metasprite = metasprite_sequential_2x3;
      000567 21r78r01              1349 	ld	hl, #(_dynamic_metasprite + 0x000a)
      00056A 36r00                 1350 	ld	(hl), #<(_metasprite_sequential_2x3)
      00056C 23                    1351 	inc	hl
      00056D 36s00                 1352 	ld	(hl), #>(_metasprite_sequential_2x3)
                                   1353 ;src/main.c:343: dynamic_metasprite.metasprite_offset = OFFSET_SPRITE_BACK;
      00056F 21r7Ar01              1354 	ld	hl, #(_dynamic_metasprite + 0x000c)
      000572 36 20                 1355 	ld	(hl), #0x20
                                   1356 ;src/main.c:344: dynamic_metasprite.data[0] = 0;
      000574 21r7Br01              1357 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000577 36 00                 1358 	ld	(hl), #0x00
                                   1359 ;src/main.c:345: dynamic_metasprite.callback = &dynamic_metasprite_deal_callback;
      000579 21r81r01              1360 	ld	hl, #(_dynamic_metasprite + 0x0013)
      00057C 36r70                 1361 	ld	(hl), #<(_dynamic_metasprite_deal_callback)
      00057E 23                    1362 	inc	hl
      00057F 36s04                 1363 	ld	(hl), #>(_dynamic_metasprite_deal_callback)
                                   1364 ;src/main.c:346: flags |= FLAG_PLAYING_ANIMATION;
      000581 21r6Br01              1365 	ld	hl, #_flags
      000584 7E                    1366 	ld	a, (hl)
      000585 F6 04                 1367 	or	a, #0x04
      000587 77                    1368 	ld	(hl), a
                                   1369 ;src/main.c:347: }
      000588 C9                    1370 	ret
                                   1371 ;src/main.c:373: void set_metasprite_card(const UINT8 card_data)
                                   1372 ;	---------------------------------
                                   1373 ; Function set_metasprite_card
                                   1374 ; ---------------------------------
      000589                       1375 _set_metasprite_card::
                                   1376 ;src/main.c:375: metasprite_t *iter = IDX_PTR(metasprite_custom_2x3, 0);
                                   1377 ;src/main.c:376: (iter++)->dtile = OFFSET_CARD_RANK + RANK(card_data);
      000589 F8 02                 1378 	ldhl	sp,	#2
      00058B 7E                    1379 	ld	a, (hl)
      00058C E6 0F                 1380 	and	a, #0x0f
      00058E 4F                    1381 	ld	c, a
      00058F 21r02r00              1382 	ld	hl, #(_metasprite_custom_2x3 + 0x0002)
      000592 71                    1383 	ld	(hl), c
                                   1384 ;src/main.c:377: (iter++)->dtile = OFFSET_CARD_SUIT + SUIT(card_data);
      000593 11r06r00              1385 	ld	de, #(_metasprite_custom_2x3 + 0x0004) + 2
      000596 F8 02                 1386 	ldhl	sp,	#2
      000598 7E                    1387 	ld	a, (hl)
      000599 E6 30                 1388 	and	a, #0x30
      00059B 6F                    1389 	ld	l, a
      00059C 26 00                 1390 	ld	h, #0x00
      00059E CB 2C                 1391 	sra	h
      0005A0 CB 1D                 1392 	rr	l
      0005A2 CB 2C                 1393 	sra	h
      0005A4 CB 1D                 1394 	rr	l
      0005A6 CB 2C                 1395 	sra	h
      0005A8 CB 1D                 1396 	rr	l
      0005AA CB 2C                 1397 	sra	h
      0005AC CB 1D                 1398 	rr	l
      0005AE 45                    1399 	ld	b, l
      0005AF 78                    1400 	ld	a, b
      0005B0 C6 0D                 1401 	add	a, #0x0d
      0005B2 12                    1402 	ld	(de), a
                                   1403 ;src/main.c:378: (iter++)->dtile = OFFSET_CARD_BLANK + 2u;
      0005B3 21r0Ar00              1404 	ld	hl, #(_metasprite_custom_2x3 + 0x000a)
      0005B6 36 13                 1405 	ld	(hl), #0x13
                                   1406 ;src/main.c:379: (iter++)->dtile = OFFSET_CARD_BLANK + 3u;
      0005B8 21r0Er00              1407 	ld	hl, #(_metasprite_custom_2x3 + 0x000e)
      0005BB 36 14                 1408 	ld	(hl), #0x14
                                   1409 ;src/main.c:380: (iter++)->dtile = OFFSET_CARD_SUIT_ROT + SUIT(card_data);
      0005BD 11r12r00              1410 	ld	de, #(_metasprite_custom_2x3 + 0x0010) + 2
      0005C0 78                    1411 	ld	a, b
      0005C1 C6 2A                 1412 	add	a, #0x2a
      0005C3 12                    1413 	ld	(de), a
                                   1414 ;src/main.c:381: (iter++)->dtile = OFFSET_CARD_RANK_ROT + RANK(card_data);
      0005C4 11r16r00              1415 	ld	de, #(_metasprite_custom_2x3 + 0x0014) + 2
      0005C7 79                    1416 	ld	a, c
      0005C8 C6 1D                 1417 	add	a, #0x1d
      0005CA 12                    1418 	ld	(de), a
                                   1419 ;src/main.c:382: }
      0005CB C9                    1420 	ret
                                   1421 ;src/main.c:386: void dynamic_metasprite_fold_pile(void)
                                   1422 ;	---------------------------------
                                   1423 ; Function dynamic_metasprite_fold_pile
                                   1424 ; ---------------------------------
      0005CC                       1425 _dynamic_metasprite_fold_pile::
      0005CC E8 FA                 1426 	add	sp, #-6
                                   1427 ;src/main.c:388: UINT8 pile_idx = dynamic_metasprite.data[3] & 0xF;
      0005CE FAr7Er01              1428 	ld	a, (#(_dynamic_metasprite + 0x0010) + 0)
      0005D1 F8 05                 1429 	ldhl	sp,	#5
      0005D3 77                    1430 	ld	(hl), a
      0005D4 F8 05                 1431 	ldhl	sp,	#5
      0005D6 7E                    1432 	ld	a, (hl)
      0005D7 E6 0F                 1433 	and	a, #0x0f
      0005D9 2B                    1434 	dec	hl
                                   1435 ;src/main.c:389: if (!pile_idx) {
      0005DA 77                    1436 	ld	(hl), a
      0005DB B7                    1437 	or	a, a
      0005DC 20 16                 1438 	jr	NZ, 00102$
                                   1439 ;src/main.c:390: metasprite_2x3_hide(SPRITE_DYNAMIC);
      0005DE 3E 0C                 1440 	ld	a, #0x0c
      0005E0 F5                    1441 	push	af
      0005E1 33                    1442 	inc	sp
      0005E2 CDr00r00              1443 	call	_metasprite_2x3_hide
      0005E5 33                    1444 	inc	sp
                                   1445 ;src/main.c:391: flags &= ~FLAG_PLAYING_ANIMATION;
      0005E6 21r6Br01              1446 	ld	hl, #_flags
      0005E9 7E                    1447 	ld	a, (hl)
      0005EA E6 FB                 1448 	and	a, #0xfb
      0005EC 77                    1449 	ld	(hl), a
                                   1450 ;src/main.c:392: dynamic_metasprite.target_frames = -1;
      0005ED 21r76r01              1451 	ld	hl, #(_dynamic_metasprite + 0x0008)
      0005F0 36 FF                 1452 	ld	(hl), #0xff
                                   1453 ;src/main.c:393: return;
      0005F2 18 77                 1454 	jr	00103$
      0005F4                       1455 00102$:
                                   1456 ;src/main.c:396: Pile *pile = IDX_PTR(piles, pile_idx);
      0005F4 01r38r01              1457 	ld	bc, #_piles+0
      0005F7 F8 04                 1458 	ldhl	sp,	#4
      0005F9 5E                    1459 	ld	e, (hl)
      0005FA 16 00                 1460 	ld	d, #0x00
      0005FC 6B                    1461 	ld	l, e
      0005FD 62                    1462 	ld	h, d
      0005FE 29                    1463 	add	hl, hl
      0005FF 29                    1464 	add	hl, hl
      000600 19                    1465 	add	hl, de
      000601 09                    1466 	add	hl, bc
      000602 4D                    1467 	ld	c, l
      000603 44                    1468 	ld	b, h
      000604 33                    1469 	inc	sp
      000605 33                    1470 	inc	sp
      000606 C5                    1471 	push	bc
                                   1472 ;src/main.c:397: UINT8 x = pile_idx * 16u;
      000607 F8 04                 1473 	ldhl	sp,	#4
      000609 7E                    1474 	ld	a, (hl)
      00060A CB 37                 1475 	swap	a
      00060C E6 F0                 1476 	and	a, #0xf0
      00060E 2B                    1477 	dec	hl
      00060F 2B                    1478 	dec	hl
      000610 77                    1479 	ld	(hl), a
                                   1480 ;src/main.c:406: dynamic_metasprite.data[3] >> 4u
      000611 F8 05                 1481 	ldhl	sp,	#5
      000613 7E                    1482 	ld	a, (hl)
      000614 CB 37                 1483 	swap	a
      000616 E6 0F                 1484 	and	a, #0x0f
      000618 2B                    1485 	dec	hl
      000619 2B                    1486 	dec	hl
      00061A 77                    1487 	ld	(hl), a
                                   1488 ;src/main.c:404: pile->base,
      00061B D1                    1489 	pop	de
      00061C D5                    1490 	push	de
      00061D 1A                    1491 	ld	a, (de)
      00061E 23                    1492 	inc	hl
      00061F 22                    1493 	ld	(hl+), a
      000620 13                    1494 	inc	de
      000621 1A                    1495 	ld	a, (de)
      000622 77                    1496 	ld	(hl), a
                                   1497 ;src/main.c:398: dynamic_metasprite_fold(pile->top->data,
      000623 C1                    1498 	pop	bc
      000624 C5                    1499 	push	bc
      000625 03                    1500 	inc	bc
      000626 03                    1501 	inc	bc
      000627 69                    1502 	ld	l, c
      000628 60                    1503 	ld	h, b
      000629 2A                    1504 	ld	a, (hl+)
      00062A 66                    1505 	ld	h, (hl)
      00062B 6F                    1506 	ld	l, a
      00062C 23                    1507 	inc	hl
      00062D 23                    1508 	inc	hl
      00062E 56                    1509 	ld	d, (hl)
      00062F C5                    1510 	push	bc
      000630 F8 05                 1511 	ldhl	sp,	#5
      000632 7E                    1512 	ld	a, (hl)
      000633 F5                    1513 	push	af
      000634 33                    1514 	inc	sp
      000635 AF                    1515 	xor	a, a
      000636 F5                    1516 	push	af
      000637 33                    1517 	inc	sp
      000638 23                    1518 	inc	hl
      000639 2A                    1519 	ld	a, (hl+)
      00063A 66                    1520 	ld	h, (hl)
      00063B 6F                    1521 	ld	l, a
      00063C E5                    1522 	push	hl
      00063D 3E 0D                 1523 	ld	a, #0x0d
      00063F F5                    1524 	push	af
      000640 33                    1525 	inc	sp
      000641 AF                    1526 	xor	a, a
      000642 F5                    1527 	push	af
      000643 33                    1528 	inc	sp
      000644 F8 0A                 1529 	ldhl	sp,	#10
      000646 46                    1530 	ld	b, (hl)
      000647 0E 7B                 1531 	ld	c, #0x7b
      000649 C5                    1532 	push	bc
      00064A 7E                    1533 	ld	a, (hl)
      00064B F5                    1534 	push	af
      00064C 33                    1535 	inc	sp
      00064D D5                    1536 	push	de
      00064E 33                    1537 	inc	sp
      00064F CDrB2r08              1538 	call	_dynamic_metasprite_fold
      000652 E8 0A                 1539 	add	sp, #10
      000654 C1                    1540 	pop	bc
                                   1541 ;src/main.c:408: pile->base = NULL;
      000655 E1                    1542 	pop	hl
      000656 E5                    1543 	push	hl
      000657 AF                    1544 	xor	a, a
      000658 22                    1545 	ld	(hl+), a
      000659 77                    1546 	ld	(hl), a
                                   1547 ;src/main.c:409: pile->top = NULL;
      00065A AF                    1548 	xor	a, a
      00065B 02                    1549 	ld	(bc), a
      00065C 03                    1550 	inc	bc
      00065D 02                    1551 	ld	(bc), a
                                   1552 ;src/main.c:410: pile->height = 0;
                                   1553 ;c
      00065E D1                    1554 	pop	de
      00065F D5                    1555 	push	de
      000660 21 04 00              1556 	ld	hl, #0x0004
      000663 19                    1557 	add	hl, de
      000664 4D                    1558 	ld	c, l
      000665 44                    1559 	ld	b, h
      000666 AF                    1560 	xor	a, a
      000667 02                    1561 	ld	(bc), a
                                   1562 ;src/main.c:411: cursor_adjust_height();
      000668 CDr07r04              1563 	call	_cursor_adjust_height
      00066B                       1564 00103$:
                                   1565 ;src/main.c:412: }
      00066B E8 06                 1566 	add	sp, #6
      00066D C9                    1567 	ret
                                   1568 ;src/main.c:414: void dynamic_metasprite_unfold_callback(void)
                                   1569 ;	---------------------------------
                                   1570 ; Function dynamic_metasprite_unfold_callback
                                   1571 ; ---------------------------------
      00066E                       1572 _dynamic_metasprite_unfold_callback::
      00066E E8 FC                 1573 	add	sp, #-4
                                   1574 ;src/main.c:416: Card *card = dynamic_metasprite.data_ptr;
      000670 21r7Fr01              1575 	ld	hl, #(_dynamic_metasprite + 0x0011)
      000673 2A                    1576 	ld	a, (hl+)
      000674 4F                    1577 	ld	c, a
      000675 46                    1578 	ld	b, (hl)
                                   1579 ;src/main.c:417: if (!card->next_card) {
      000676 59                    1580 	ld	e, c
      000677 50                    1581 	ld	d, b
      000678 1A                    1582 	ld	a, (de)
      000679 F8 00                 1583 	ldhl	sp,	#0
      00067B 22                    1584 	ld	(hl+), a
      00067C 13                    1585 	inc	de
      00067D 1A                    1586 	ld	a, (de)
      00067E 77                    1587 	ld	(hl), a
                                   1588 ;src/main.c:418: draw_card(dynamic_metasprite.data[1] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 1u, card->data);
      00067F 03                    1589 	inc	bc
      000680 03                    1590 	inc	bc
      000681 23                    1591 	inc	hl
      000682 79                    1592 	ld	a, c
      000683 22                    1593 	ld	(hl+), a
                                   1594 ;src/main.c:417: if (!card->next_card) {
      000684 78                    1595 	ld	a, b
      000685 32                    1596 	ld	(hl-), a
      000686 2B                    1597 	dec	hl
      000687 3A                    1598 	ld	a, (hl-)
      000688 B6                    1599 	or	a, (hl)
      000689 20 74                 1600 	jr	NZ, 00102$
                                   1601 ;src/main.c:418: draw_card(dynamic_metasprite.data[1] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 1u, card->data);
      00068B F8 02                 1602 	ldhl	sp,#2
      00068D 2A                    1603 	ld	a, (hl+)
      00068E 5F                    1604 	ld	e, a
      00068F 56                    1605 	ld	d, (hl)
      000690 1A                    1606 	ld	a, (de)
      000691 F8 00                 1607 	ldhl	sp,	#0
      000693 77                    1608 	ld	(hl), a
      000694 FAr70r01              1609 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      000697 F8 03                 1610 	ldhl	sp,	#3
      000699 77                    1611 	ld	(hl), a
      00069A F8 03                 1612 	ldhl	sp,	#3
      00069C 3A                    1613 	ld	a, (hl-)
      00069D 77                    1614 	ld	(hl), a
      00069E AF                    1615 	xor	a, a
      00069F 23                    1616 	inc	hl
      0006A0 77                    1617 	ld	(hl), a
      0006A1 CB 3E                 1618 	srl	(hl)
      0006A3 2B                    1619 	dec	hl
      0006A4 CB 1E                 1620 	rr	(hl)
      0006A6 23                    1621 	inc	hl
      0006A7 CB 3E                 1622 	srl	(hl)
      0006A9 2B                    1623 	dec	hl
      0006AA CB 1E                 1624 	rr	(hl)
      0006AC 23                    1625 	inc	hl
      0006AD CB 3E                 1626 	srl	(hl)
      0006AF 2B                    1627 	dec	hl
      0006B0 CB 1E                 1628 	rr	(hl)
      0006B2 2A                    1629 	ld	a, (hl+)
      0006B3 77                    1630 	ld	(hl), a
      0006B4 3C                    1631 	inc	a
      0006B5 2B                    1632 	dec	hl
      0006B6 2B                    1633 	dec	hl
      0006B7 77                    1634 	ld	(hl), a
      0006B8 FAr7Cr01              1635 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      0006BB F8 03                 1636 	ldhl	sp,	#3
      0006BD 77                    1637 	ld	(hl), a
      0006BE F8 03                 1638 	ldhl	sp,	#3
      0006C0 3A                    1639 	ld	a, (hl-)
      0006C1 77                    1640 	ld	(hl), a
      0006C2 AF                    1641 	xor	a, a
      0006C3 23                    1642 	inc	hl
      0006C4 77                    1643 	ld	(hl), a
      0006C5 CB 3E                 1644 	srl	(hl)
      0006C7 2B                    1645 	dec	hl
      0006C8 CB 1E                 1646 	rr	(hl)
      0006CA 23                    1647 	inc	hl
      0006CB CB 3E                 1648 	srl	(hl)
      0006CD 2B                    1649 	dec	hl
      0006CE CB 1E                 1650 	rr	(hl)
      0006D0 23                    1651 	inc	hl
      0006D1 CB 3E                 1652 	srl	(hl)
      0006D3 2B                    1653 	dec	hl
      0006D4 CB 1E                 1654 	rr	(hl)
      0006D6 46                    1655 	ld	b, (hl)
                                   1656 ;src/main.c:228: draw_card_top(x, y, card_data);
      0006D7 C5                    1657 	push	bc
      0006D8 2B                    1658 	dec	hl
      0006D9 2B                    1659 	dec	hl
      0006DA 7E                    1660 	ld	a, (hl)
      0006DB F5                    1661 	push	af
      0006DC 33                    1662 	inc	sp
      0006DD 23                    1663 	inc	hl
      0006DE 7E                    1664 	ld	a, (hl)
      0006DF F5                    1665 	push	af
      0006E0 33                    1666 	inc	sp
      0006E1 C5                    1667 	push	bc
      0006E2 33                    1668 	inc	sp
      0006E3 CDr1Cr02              1669 	call	_draw_card_top
      0006E6 E8 03                 1670 	add	sp, #3
      0006E8 C1                    1671 	pop	bc
                                   1672 ;src/main.c:229: draw_card_bottom(x, y + 1u, card_data);
      0006E9 F8 01                 1673 	ldhl	sp,	#1
      0006EB 7E                    1674 	ld	a, (hl)
      0006EC 3C                    1675 	inc	a
      0006ED 2B                    1676 	dec	hl
      0006EE 66                    1677 	ld	h, (hl)
      0006EF E5                    1678 	push	hl
      0006F0 33                    1679 	inc	sp
      0006F1 F5                    1680 	push	af
      0006F2 33                    1681 	inc	sp
      0006F3 C5                    1682 	push	bc
      0006F4 33                    1683 	inc	sp
      0006F5 CDr88r02              1684 	call	_draw_card_bottom
      0006F8 E8 03                 1685 	add	sp, #3
                                   1686 ;src/main.c:419: dynamic_metasprite_fold_pile();
      0006FA CDrCCr05              1687 	call	_dynamic_metasprite_fold_pile
                                   1688 ;src/main.c:420: return;
      0006FD 18 4E                 1689 	jr	00104$
      0006FF                       1690 00102$:
                                   1691 ;src/main.c:422: dynamic_metasprite.data_ptr = card->next_card;
      0006FF C1                    1692 	pop	bc
      000700 C5                    1693 	push	bc
      000701 21r7Fr01              1694 	ld	hl, #(_dynamic_metasprite + 0x0011)
      000704 79                    1695 	ld	a, c
      000705 22                    1696 	ld	(hl+), a
      000706 70                    1697 	ld	(hl), b
                                   1698 ;src/main.c:423: dynamic_metasprite.src[1] += 8;
      000707 21r70r01              1699 	ld	hl, #(_dynamic_metasprite + 0x0002)
      00070A 2A                    1700 	ld	a, (hl+)
      00070B 4F                    1701 	ld	c, a
      00070C 46                    1702 	ld	b, (hl)
      00070D 21 08 00              1703 	ld	hl, #0x0008
      000710 09                    1704 	add	hl, bc
      000711 4D                    1705 	ld	c, l
      000712 44                    1706 	ld	b, h
      000713 21r70r01              1707 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000716 79                    1708 	ld	a, c
      000717 22                    1709 	ld	(hl+), a
      000718 70                    1710 	ld	(hl), b
                                   1711 ;src/main.c:424: draw_card_top(dynamic_metasprite.data[1] / 8u, dynamic_metasprite.src[1] / 8u, card->data);
      000719 F8 02                 1712 	ldhl	sp,#2
      00071B 2A                    1713 	ld	a, (hl+)
      00071C 5F                    1714 	ld	e, a
      00071D 56                    1715 	ld	d, (hl)
      00071E 1A                    1716 	ld	a, (de)
      00071F 77                    1717 	ld	(hl), a
      000720 CB 38                 1718 	srl	b
      000722 CB 19                 1719 	rr	c
      000724 CB 38                 1720 	srl	b
      000726 CB 19                 1721 	rr	c
      000728 CB 38                 1722 	srl	b
      00072A CB 19                 1723 	rr	c
      00072C FAr7Cr01              1724 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      00072F 5F                    1725 	ld	e, a
      000730 16 00                 1726 	ld	d, #0x00
      000732 CB 3A                 1727 	srl	d
      000734 CB 1B                 1728 	rr	e
      000736 CB 3A                 1729 	srl	d
      000738 CB 1B                 1730 	rr	e
      00073A CB 3A                 1731 	srl	d
      00073C CB 1B                 1732 	rr	e
      00073E 7E                    1733 	ld	a, (hl)
      00073F F5                    1734 	push	af
      000740 33                    1735 	inc	sp
      000741 51                    1736 	ld	d, c
      000742 D5                    1737 	push	de
      000743 CDr1Cr02              1738 	call	_draw_card_top
      000746 E8 03                 1739 	add	sp, #3
                                   1740 ;src/main.c:425: dynamic_metasprite.elapsed_frames = 0;
      000748 21r77r01              1741 	ld	hl, #(_dynamic_metasprite + 0x0009)
      00074B 36 00                 1742 	ld	(hl), #0x00
      00074D                       1743 00104$:
                                   1744 ;src/main.c:426: }
      00074D E8 04                 1745 	add	sp, #4
      00074F C9                    1746 	ret
                                   1747 ;src/main.c:428: void dynamic_metasprite_move_stack_callback(void)
                                   1748 ;	---------------------------------
                                   1749 ; Function dynamic_metasprite_move_stack_callback
                                   1750 ; ---------------------------------
      000750                       1751 _dynamic_metasprite_move_stack_callback::
                                   1752 ;src/main.c:430: if (dynamic_metasprite.data[0] & BITMASK_DYNAMIC_METASPRITE_UNFOLD) {
      000750 FAr7Br01              1753 	ld	a, (#(_dynamic_metasprite + 0x000d) + 0)
      000753 07                    1754 	rlca
      000754 D2rCCr05              1755 	jp	NC,_dynamic_metasprite_fold_pile
                                   1756 ;src/main.c:431: dynamic_metasprite.src[0] = dynamic_metasprite.data[1];
      000757 FAr7Cr01              1757 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      00075A 4F                    1758 	ld	c, a
      00075B 06 00                 1759 	ld	b, #0x00
      00075D 21r6Er01              1760 	ld	hl, #_dynamic_metasprite
      000760 79                    1761 	ld	a, c
      000761 22                    1762 	ld	(hl+), a
                                   1763 ;src/main.c:432: dynamic_metasprite.src[1] = dynamic_metasprite.data[2] - 8u;
      000762 78                    1764 	ld	a, b
      000763 22                    1765 	ld	(hl+), a
      000764 01r7Dr01              1766 	ld	bc, #_dynamic_metasprite + 15
      000767 0A                    1767 	ld	a, (bc)
      000768 4F                    1768 	ld	c, a
      000769 06 00                 1769 	ld	b, #0x00
      00076B 79                    1770 	ld	a, c
      00076C C6 F8                 1771 	add	a, #0xf8
      00076E 4F                    1772 	ld	c, a
      00076F 78                    1773 	ld	a, b
      000770 CE FF                 1774 	adc	a, #0xff
      000772 71                    1775 	ld	(hl), c
      000773 23                    1776 	inc	hl
      000774 77                    1777 	ld	(hl), a
                                   1778 ;src/main.c:433: dynamic_metasprite.dist[0] = 0;
      000775 21r72r01              1779 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000778 AF                    1780 	xor	a, a
      000779 22                    1781 	ld	(hl+), a
      00077A 77                    1782 	ld	(hl), a
                                   1783 ;src/main.c:434: dynamic_metasprite.dist[1] = 8;
      00077B 21r74r01              1784 	ld	hl, #(_dynamic_metasprite + 0x0006)
      00077E 36 08                 1785 	ld	(hl), #0x08
      000780 23                    1786 	inc	hl
      000781 36 00                 1787 	ld	(hl), #0x00
                                   1788 ;src/main.c:435: dynamic_metasprite.target_frames = FOLD_TARGET_FRAMES;
      000783 21r76r01              1789 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000786 36 10                 1790 	ld	(hl), #0x10
                                   1791 ;src/main.c:436: dynamic_metasprite.callback = &dynamic_metasprite_unfold_callback;
      000788 21r81r01              1792 	ld	hl, #(_dynamic_metasprite + 0x0013)
      00078B 36r6E                 1793 	ld	(hl), #<(_dynamic_metasprite_unfold_callback)
      00078D 23                    1794 	inc	hl
      00078E 36s06                 1795 	ld	(hl), #>(_dynamic_metasprite_unfold_callback)
                                   1796 ;src/main.c:437: dynamic_metasprite_unfold_callback();
                                   1797 ;src/main.c:439: dynamic_metasprite_fold_pile();
                                   1798 ;src/main.c:441: }
      000790 C3r6Er06              1799 	jp	_dynamic_metasprite_unfold_callback
                                   1800 ;src/main.c:443: void dynamic_metasprite_fold_callback(void)
                                   1801 ;	---------------------------------
                                   1802 ; Function dynamic_metasprite_fold_callback
                                   1803 ; ---------------------------------
      000793                       1804 _dynamic_metasprite_fold_callback::
      000793 E8 FC                 1805 	add	sp, #-4
                                   1806 ;src/main.c:445: dynamic_metasprite.src[1] -= 8;
      000795 21r70r01              1807 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000798 2A                    1808 	ld	a, (hl+)
      000799 4F                    1809 	ld	c, a
      00079A 46                    1810 	ld	b, (hl)
      00079B 79                    1811 	ld	a, c
      00079C C6 F8                 1812 	add	a, #0xf8
      00079E 4F                    1813 	ld	c, a
      00079F 78                    1814 	ld	a, b
      0007A0 CE FF                 1815 	adc	a, #0xff
      0007A2 47                    1816 	ld	b, a
      0007A3 21r70r01              1817 	ld	hl, #(_dynamic_metasprite + 0x0002)
      0007A6 79                    1818 	ld	a, c
      0007A7 22                    1819 	ld	(hl+), a
      0007A8 70                    1820 	ld	(hl), b
                                   1821 ;src/main.c:446: dynamic_metasprite.elapsed_frames = 0;
      0007A9 21r77r01              1822 	ld	hl, #(_dynamic_metasprite + 0x0009)
      0007AC 36 00                 1823 	ld	(hl), #0x00
                                   1824 ;src/main.c:447: clear_bkg_2x1((UINT8)dynamic_metasprite.src[0] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 2u);
      0007AE FAr70r01              1825 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      0007B1 4F                    1826 	ld	c, a
      0007B2 06 00                 1827 	ld	b, #0x00
      0007B4 CB 38                 1828 	srl	b
      0007B6 CB 19                 1829 	rr	c
      0007B8 CB 38                 1830 	srl	b
      0007BA CB 19                 1831 	rr	c
      0007BC CB 38                 1832 	srl	b
      0007BE CB 19                 1833 	rr	c
      0007C0 0C                    1834 	inc	c
      0007C1 0C                    1835 	inc	c
      0007C2 FAr6Er01              1836 	ld	a, (#_dynamic_metasprite + 0)
      0007C5 5F                    1837 	ld	e, a
      0007C6 16 00                 1838 	ld	d, #0x00
      0007C8 CB 3A                 1839 	srl	d
      0007CA CB 1B                 1840 	rr	e
      0007CC CB 3A                 1841 	srl	d
      0007CE CB 1B                 1842 	rr	e
      0007D0 CB 3A                 1843 	srl	d
      0007D2 CB 1B                 1844 	rr	e
      0007D4 43                    1845 	ld	b, e
                                   1846 ;src/main.c:203: set_bkg_tile_xy(x, y, OFFSET_BKG_NONE);
      0007D5 AF                    1847 	xor	a, a
      0007D6 F5                    1848 	push	af
      0007D7 33                    1849 	inc	sp
      0007D8 79                    1850 	ld	a, c
      0007D9 F5                    1851 	push	af
      0007DA 33                    1852 	inc	sp
      0007DB C5                    1853 	push	bc
      0007DC 33                    1854 	inc	sp
      0007DD CDr00r00              1855 	call	_set_bkg_tile_xy
      0007E0 E8 03                 1856 	add	sp, #3
                                   1857 ;src/main.c:204: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_NONE);
      0007E2 04                    1858 	inc	b
      0007E3 AF                    1859 	xor	a, a
      0007E4 F5                    1860 	push	af
      0007E5 33                    1861 	inc	sp
      0007E6 79                    1862 	ld	a, c
      0007E7 F5                    1863 	push	af
      0007E8 33                    1864 	inc	sp
      0007E9 C5                    1865 	push	bc
      0007EA 33                    1866 	inc	sp
      0007EB CDr00r00              1867 	call	_set_bkg_tile_xy
      0007EE E8 03                 1868 	add	sp, #3
                                   1869 ;src/main.c:448: if (dynamic_metasprite.data[0] & ~BITMASK_DYNAMIC_METASPRITE_UNFOLD) {
      0007F0 01r7Br01              1870 	ld	bc, #_dynamic_metasprite + 13
      0007F3 0A                    1871 	ld	a, (bc)
      0007F4 5F                    1872 	ld	e, a
      0007F5 E6 7F                 1873 	and	a, #0x7f
      0007F7 28 06                 1874 	jr	Z, 00105$
                                   1875 ;src/main.c:449: dynamic_metasprite.data[0]--;
      0007F9 7B                    1876 	ld	a, e
      0007FA 3D                    1877 	dec	a
      0007FB 02                    1878 	ld	(bc), a
      0007FC C3rAFr08              1879 	jp	00109$
      0007FF                       1880 00105$:
                                   1881 ;src/main.c:451: if (cursor.card_to_show) {
      0007FF 21r85r01              1882 	ld	hl, #(_cursor + 0x0002)
      000802 2A                    1883 	ld	a, (hl+)
      000803 4F                    1884 	ld	c, a
      000804 46                    1885 	ld	b, (hl)
                                   1886 ;src/main.c:447: clear_bkg_2x1((UINT8)dynamic_metasprite.src[0] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 2u);
      000805 11r70r01              1887 	ld	de, #(_dynamic_metasprite + 0x0002)
      000808 1A                    1888 	ld	a, (de)
      000809 F8 02                 1889 	ldhl	sp,	#2
      00080B 22                    1890 	ld	(hl+), a
      00080C 13                    1891 	inc	de
      00080D 1A                    1892 	ld	a, (de)
      00080E 77                    1893 	ld	(hl), a
      00080F 11r6Er01              1894 	ld	de, #_dynamic_metasprite
      000812 1A                    1895 	ld	a, (de)
      000813 F8 00                 1896 	ldhl	sp,	#0
      000815 22                    1897 	ld	(hl+), a
      000816 13                    1898 	inc	de
      000817 1A                    1899 	ld	a, (de)
      000818 77                    1900 	ld	(hl), a
                                   1901 ;src/main.c:452: draw_card(dynamic_metasprite.src[0] / 8u, dynamic_metasprite.src[1] / 8u - 1u, cursor.card_to_show->data);
      000819 D1                    1902 	pop	de
      00081A D5                    1903 	push	de
      00081B 23                    1904 	inc	hl
      00081C 23                    1905 	inc	hl
      00081D CB 3E                 1906 	srl	(hl)
      00081F 2B                    1907 	dec	hl
      000820 CB 1E                 1908 	rr	(hl)
      000822 23                    1909 	inc	hl
      000823 CB 3E                 1910 	srl	(hl)
      000825 2B                    1911 	dec	hl
      000826 CB 1E                 1912 	rr	(hl)
      000828 23                    1913 	inc	hl
      000829 CB 3E                 1914 	srl	(hl)
      00082B 2B                    1915 	dec	hl
      00082C CB 1E                 1916 	rr	(hl)
      00082E CB 3A                 1917 	srl	d
      000830 CB 1B                 1918 	rr	e
      000832 CB 3A                 1919 	srl	d
      000834 CB 1B                 1920 	rr	e
      000836 CB 3A                 1921 	srl	d
      000838 CB 1B                 1922 	rr	e
      00083A 6E                    1923 	ld	l, (hl)
                                   1924 ;src/main.c:451: if (cursor.card_to_show) {
      00083B 78                    1925 	ld	a, b
      00083C B1                    1926 	or	a, c
      00083D 28 27                 1927 	jr	Z, 00102$
                                   1928 ;src/main.c:452: draw_card(dynamic_metasprite.src[0] / 8u, dynamic_metasprite.src[1] / 8u - 1u, cursor.card_to_show->data);
      00083F 03                    1929 	inc	bc
      000840 03                    1930 	inc	bc
      000841 0A                    1931 	ld	a, (bc)
      000842 47                    1932 	ld	b, a
      000843 55                    1933 	ld	d, l
      000844 15                    1934 	dec	d
                                   1935 ;src/main.c:228: draw_card_top(x, y, card_data);
      000845 C5                    1936 	push	bc
      000846 D5                    1937 	push	de
      000847 4A                    1938 	ld	c, d
      000848 C5                    1939 	push	bc
      000849 7B                    1940 	ld	a, e
      00084A F5                    1941 	push	af
      00084B 33                    1942 	inc	sp
      00084C CDr1Cr02              1943 	call	_draw_card_top
      00084F E8 03                 1944 	add	sp, #3
      000851 D1                    1945 	pop	de
      000852 C1                    1946 	pop	bc
                                   1947 ;src/main.c:229: draw_card_bottom(x, y + 1u, card_data);
      000853 7A                    1948 	ld	a, d
      000854 3C                    1949 	inc	a
      000855 C5                    1950 	push	bc
      000856 33                    1951 	inc	sp
      000857 57                    1952 	ld	d,a
      000858 D5                    1953 	push	de
      000859 CDr88r02              1954 	call	_draw_card_bottom
      00085C E8 03                 1955 	add	sp, #3
                                   1956 ;src/main.c:453: cursor.card_to_show = NULL;
      00085E 21r85r01              1957 	ld	hl, #(_cursor + 0x0002)
      000861 AF                    1958 	xor	a, a
      000862 22                    1959 	ld	(hl+), a
      000863 77                    1960 	ld	(hl), a
      000864 18 0C                 1961 	jr	00103$
      000866                       1962 00102$:
                                   1963 ;src/main.c:455: draw_sequential_card(dynamic_metasprite.src[0] / 8u, dynamic_metasprite.src[1] / 8u, OFFSET_BKG_OUTLINE);
      000866 3E 2F                 1964 	ld	a, #0x2f
      000868 F5                    1965 	push	af
      000869 7D                    1966 	ld	a, l
      00086A 33                    1967 	inc	sp
      00086B 57                    1968 	ld	d,a
      00086C D5                    1969 	push	de
      00086D CDr51r03              1970 	call	_draw_sequential_card
      000870 E8 03                 1971 	add	sp, #3
      000872                       1972 00103$:
                                   1973 ;src/main.c:457: dynamic_metasprite.dist[0] = (INT16)dynamic_metasprite.data[1] - dynamic_metasprite.src[0];
      000872 FAr7Cr01              1974 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      000875 4F                    1975 	ld	c, a
      000876 06 00                 1976 	ld	b, #0x00
      000878 21r6Er01              1977 	ld	hl, #_dynamic_metasprite
      00087B 2A                    1978 	ld	a, (hl+)
      00087C 66                    1979 	ld	h, (hl)
      00087D 6F                    1980 	ld	l, a
      00087E 79                    1981 	ld	a, c
      00087F 95                    1982 	sub	a, l
      000880 4F                    1983 	ld	c, a
      000881 78                    1984 	ld	a, b
      000882 9C                    1985 	sbc	a, h
      000883 47                    1986 	ld	b, a
      000884 21r72r01              1987 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000887 79                    1988 	ld	a, c
      000888 22                    1989 	ld	(hl+), a
      000889 70                    1990 	ld	(hl), b
                                   1991 ;src/main.c:458: dynamic_metasprite.dist[1] = (INT16)dynamic_metasprite.data[2] - dynamic_metasprite.src[1];
      00088A FAr7Dr01              1992 	ld	a, (#(_dynamic_metasprite + 0x000f) + 0)
      00088D 4F                    1993 	ld	c, a
      00088E 06 00                 1994 	ld	b, #0x00
      000890 21r70r01              1995 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000893 2A                    1996 	ld	a, (hl+)
      000894 66                    1997 	ld	h, (hl)
      000895 6F                    1998 	ld	l, a
      000896 79                    1999 	ld	a, c
      000897 95                    2000 	sub	a, l
      000898 4F                    2001 	ld	c, a
      000899 78                    2002 	ld	a, b
      00089A 9C                    2003 	sbc	a, h
      00089B 47                    2004 	ld	b, a
      00089C 21r74r01              2005 	ld	hl, #(_dynamic_metasprite + 0x0006)
      00089F 71                    2006 	ld	(hl), c
      0008A0 23                    2007 	inc	hl
      0008A1 70                    2008 	ld	(hl), b
                                   2009 ;src/main.c:459: dynamic_metasprite.target_frames = MOVE_TARGET_FRAMES;
      0008A2 21r76r01              2010 	ld	hl, #(_dynamic_metasprite + 0x0008)
      0008A5 36 10                 2011 	ld	(hl), #0x10
                                   2012 ;src/main.c:460: dynamic_metasprite.callback = &dynamic_metasprite_move_stack_callback;
      0008A7 21r81r01              2013 	ld	hl, #(_dynamic_metasprite + 0x0013)
      0008AA 36r50                 2014 	ld	(hl), #<(_dynamic_metasprite_move_stack_callback)
      0008AC 23                    2015 	inc	hl
      0008AD 36s07                 2016 	ld	(hl), #>(_dynamic_metasprite_move_stack_callback)
      0008AF                       2017 00109$:
                                   2018 ;src/main.c:463: }
      0008AF E8 04                 2019 	add	sp, #4
      0008B1 C9                    2020 	ret
                                   2021 ;src/main.c:465: void dynamic_metasprite_fold(const UINT8 top_card_data, const UINT8 src_x, const UINT8 src_y, const UINT8 dest_x, const UINT8 dest_y, const UINT8 stack_height, const Card *base_card, const UINT8 unfold, const UINT8 piles_to_clear)
                                   2022 ;	---------------------------------
                                   2023 ; Function dynamic_metasprite_fold
                                   2024 ; ---------------------------------
      0008B2                       2025 _dynamic_metasprite_fold::
                                   2026 ;src/main.c:467: set_metasprite_card(top_card_data);
      0008B2 F8 02                 2027 	ldhl	sp,	#2
      0008B4 7E                    2028 	ld	a, (hl)
      0008B5 F5                    2029 	push	af
      0008B6 33                    2030 	inc	sp
      0008B7 CDr89r05              2031 	call	_set_metasprite_card
      0008BA 33                    2032 	inc	sp
                                   2033 ;src/main.c:469: dynamic_metasprite.metasprite = metasprite_custom_2x3;
      0008BB 21r78r01              2034 	ld	hl, #(_dynamic_metasprite + 0x000a)
      0008BE 36r00                 2035 	ld	(hl), #<(_metasprite_custom_2x3)
      0008C0 23                    2036 	inc	hl
      0008C1 36s00                 2037 	ld	(hl), #>(_metasprite_custom_2x3)
                                   2038 ;src/main.c:470: dynamic_metasprite.metasprite_offset = OFFSET_SPRITE_CARD;
      0008C3 21r7Ar01              2039 	ld	hl, #(_dynamic_metasprite + 0x000c)
      0008C6 36 09                 2040 	ld	(hl), #0x09
                                   2041 ;src/main.c:472: dynamic_metasprite.data[0] = (stack_height - 1u) | unfold;
      0008C8 01r7Br01              2042 	ld	bc, #_dynamic_metasprite + 13
      0008CB F8 07                 2043 	ldhl	sp,	#7
      0008CD 7E                    2044 	ld	a, (hl)
      0008CE 3D                    2045 	dec	a
      0008CF F8 0A                 2046 	ldhl	sp,	#10
      0008D1 B6                    2047 	or	a, (hl)
      0008D2 02                    2048 	ld	(bc), a
                                   2049 ;src/main.c:473: dynamic_metasprite.data[1] = dest_x;
      0008D3 11r7Cr01              2050 	ld	de, #(_dynamic_metasprite + 0x000e)
      0008D6 F8 05                 2051 	ldhl	sp,	#5
      0008D8 7E                    2052 	ld	a, (hl)
      0008D9 12                    2053 	ld	(de), a
                                   2054 ;src/main.c:474: dynamic_metasprite.data[2] = dest_y;
      0008DA 11r7Dr01              2055 	ld	de, #(_dynamic_metasprite + 0x000f)
      0008DD 23                    2056 	inc	hl
      0008DE 7E                    2057 	ld	a, (hl)
      0008DF 12                    2058 	ld	(de), a
                                   2059 ;src/main.c:475: dynamic_metasprite.data[3] = piles_to_clear;
      0008E0 11r7Er01              2060 	ld	de, #(_dynamic_metasprite + 0x0010)
      0008E3 F8 0B                 2061 	ldhl	sp,	#11
      0008E5 7E                    2062 	ld	a, (hl)
      0008E6 12                    2063 	ld	(de), a
                                   2064 ;src/main.c:476: dynamic_metasprite.data_ptr = base_card;
      0008E7 2B                    2065 	dec	hl
      0008E8 2B                    2066 	dec	hl
      0008E9 2B                    2067 	dec	hl
      0008EA 2A                    2068 	ld	a, (hl+)
      0008EB 4F                    2069 	ld	c, a
      0008EC 46                    2070 	ld	b, (hl)
      0008ED 21r7Fr01              2071 	ld	hl, #(_dynamic_metasprite + 0x0011)
      0008F0 79                    2072 	ld	a, c
      0008F1 22                    2073 	ld	(hl+), a
      0008F2 70                    2074 	ld	(hl), b
                                   2075 ;src/main.c:478: dynamic_metasprite.src[0] = src_x;
      0008F3 F8 03                 2076 	ldhl	sp,	#3
      0008F5 4E                    2077 	ld	c, (hl)
      0008F6 06 00                 2078 	ld	b, #0x00
      0008F8 21r6Er01              2079 	ld	hl, #_dynamic_metasprite
      0008FB 79                    2080 	ld	a, c
      0008FC 22                    2081 	ld	(hl+), a
      0008FD 70                    2082 	ld	(hl), b
                                   2083 ;src/main.c:479: dynamic_metasprite.src[1] = src_y + 8u;
      0008FE F8 04                 2084 	ldhl	sp,	#4
      000900 4E                    2085 	ld	c, (hl)
      000901 06 00                 2086 	ld	b, #0x00
      000903 79                    2087 	ld	a, c
      000904 C6 08                 2088 	add	a, #0x08
      000906 4F                    2089 	ld	c, a
      000907 30 01                 2090 	jr	NC, 00110$
      000909 04                    2091 	inc	b
      00090A                       2092 00110$:
      00090A 21r70r01              2093 	ld	hl, #(_dynamic_metasprite + 0x0002)
      00090D 79                    2094 	ld	a, c
      00090E 22                    2095 	ld	(hl+), a
      00090F 70                    2096 	ld	(hl), b
                                   2097 ;src/main.c:481: flags |= FLAG_PLAYING_ANIMATION;
      000910 21r6Br01              2098 	ld	hl, #_flags
      000913 7E                    2099 	ld	a, (hl)
      000914 F6 04                 2100 	or	a, #0x04
      000916 77                    2101 	ld	(hl), a
                                   2102 ;src/main.c:483: if (stack_height > 1) {
      000917 3E 01                 2103 	ld	a, #0x01
      000919 F8 07                 2104 	ldhl	sp,	#7
      00091B 96                    2105 	sub	a, (hl)
      00091C D2r93r07              2106 	jp	NC,_dynamic_metasprite_fold_callback
                                   2107 ;src/main.c:484: dynamic_metasprite.dist[0] = 0;
      00091F 21r72r01              2108 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000922 AF                    2109 	xor	a, a
      000923 22                    2110 	ld	(hl+), a
      000924 77                    2111 	ld	(hl), a
                                   2112 ;src/main.c:485: dynamic_metasprite.dist[1] = -8;
      000925 21r74r01              2113 	ld	hl, #(_dynamic_metasprite + 0x0006)
      000928 36 F8                 2114 	ld	(hl), #0xf8
      00092A 23                    2115 	inc	hl
      00092B 36 FF                 2116 	ld	(hl), #0xff
                                   2117 ;src/main.c:486: dynamic_metasprite.target_frames = FOLD_TARGET_FRAMES;
      00092D 21r76r01              2118 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000930 36 10                 2119 	ld	(hl), #0x10
                                   2120 ;src/main.c:487: dynamic_metasprite.callback = &dynamic_metasprite_fold_callback;
      000932 21r81r01              2121 	ld	hl, #(_dynamic_metasprite + 0x0013)
      000935 36r93                 2122 	ld	(hl), #<(_dynamic_metasprite_fold_callback)
      000937 23                    2123 	inc	hl
      000938 36s07                 2124 	ld	(hl), #>(_dynamic_metasprite_fold_callback)
                                   2125 ;src/main.c:489: dynamic_metasprite_fold_callback();
                                   2126 ;src/main.c:490: }
      00093A C3r93r07              2127 	jp  _dynamic_metasprite_fold_callback
                                   2128 ;src/main.c:492: void pile_append_cursor_stack(Pile *pile)
                                   2129 ;	---------------------------------
                                   2130 ; Function pile_append_cursor_stack
                                   2131 ; ---------------------------------
      00093D                       2132 _pile_append_cursor_stack::
      00093D E8 F3                 2133 	add	sp, #-13
                                   2134 ;src/main.c:494: if (pile->height)
      00093F F8 0F                 2135 	ldhl	sp,	#15
      000941 2A                    2136 	ld	a, (hl+)
      000942 5E                    2137 	ld	e, (hl)
      000943 F8 00                 2138 	ldhl	sp,	#0
      000945 22                    2139 	ld	(hl+), a
      000946 73                    2140 	ld	(hl), e
                                   2141 ;c
      000947 D1                    2142 	pop	de
      000948 D5                    2143 	push	de
      000949 21 04 00              2144 	ld	hl, #0x0004
      00094C 19                    2145 	add	hl, de
      00094D E5                    2146 	push	hl
      00094E 7D                    2147 	ld	a, l
      00094F F8 04                 2148 	ldhl	sp,	#4
      000951 77                    2149 	ld	(hl), a
      000952 E1                    2150 	pop	hl
      000953 7C                    2151 	ld	a, h
      000954 F8 03                 2152 	ldhl	sp,	#3
      000956 32                    2153 	ld	(hl-), a
      000957 2A                    2154 	ld	a, (hl+)
      000958 5F                    2155 	ld	e, a
      000959 56                    2156 	ld	d, (hl)
      00095A 1A                    2157 	ld	a, (de)
      00095B F8 0C                 2158 	ldhl	sp,	#12
      00095D 77                    2159 	ld	(hl), a
                                   2160 ;src/main.c:495: pile->top->next_card = cursor.held_card;
                                   2161 ;c
      00095E D1                    2162 	pop	de
      00095F D5                    2163 	push	de
      000960 21 02 00              2164 	ld	hl, #0x0002
      000963 19                    2165 	add	hl, de
      000964 E5                    2166 	push	hl
      000965 7D                    2167 	ld	a, l
      000966 F8 06                 2168 	ldhl	sp,	#6
      000968 77                    2169 	ld	(hl), a
      000969 E1                    2170 	pop	hl
      00096A 7C                    2171 	ld	a, h
      00096B F8 05                 2172 	ldhl	sp,	#5
      00096D 77                    2173 	ld	(hl), a
                                   2174 ;src/main.c:494: if (pile->height)
      00096E F8 0C                 2175 	ldhl	sp,	#12
      000970 7E                    2176 	ld	a, (hl)
      000971 B7                    2177 	or	a, a
      000972 28 1C                 2178 	jr	Z, 00102$
                                   2179 ;src/main.c:495: pile->top->next_card = cursor.held_card;
      000974 F8 04                 2180 	ldhl	sp,#4
      000976 2A                    2181 	ld	a, (hl+)
      000977 5F                    2182 	ld	e, a
      000978 56                    2183 	ld	d, (hl)
      000979 1A                    2184 	ld	a, (de)
      00097A F8 0B                 2185 	ldhl	sp,	#11
      00097C 22                    2186 	ld	(hl+), a
      00097D 13                    2187 	inc	de
      00097E 1A                    2188 	ld	a, (de)
      00097F 77                    2189 	ld	(hl), a
      000980 21r83r01              2190 	ld	hl, #_cursor
      000983 2A                    2191 	ld	a, (hl+)
      000984 4F                    2192 	ld	c, a
      000985 46                    2193 	ld	b, (hl)
      000986 F8 0B                 2194 	ldhl	sp,	#11
      000988 2A                    2195 	ld	a, (hl+)
      000989 66                    2196 	ld	h, (hl)
      00098A 6F                    2197 	ld	l, a
      00098B 79                    2198 	ld	a, c
      00098C 22                    2199 	ld	(hl+), a
      00098D 70                    2200 	ld	(hl), b
      00098E 18 13                 2201 	jr	00103$
      000990                       2202 00102$:
                                   2203 ;src/main.c:497: pile->base = cursor.held_card;
      000990 11r83r01              2204 	ld	de, #_cursor
      000993 1A                    2205 	ld	a, (de)
      000994 F8 0B                 2206 	ldhl	sp,	#11
      000996 22                    2207 	ld	(hl+), a
      000997 13                    2208 	inc	de
      000998 1A                    2209 	ld	a, (de)
      000999 77                    2210 	ld	(hl), a
      00099A D1                    2211 	pop	de
      00099B D5                    2212 	push	de
      00099C 2B                    2213 	dec	hl
      00099D 7E                    2214 	ld	a, (hl)
      00099E 12                    2215 	ld	(de), a
      00099F 13                    2216 	inc	de
      0009A0 23                    2217 	inc	hl
      0009A1 7E                    2218 	ld	a, (hl)
      0009A2 12                    2219 	ld	(de), a
      0009A3                       2220 00103$:
                                   2221 ;src/main.c:499: Pile *src_pile = IDX_PTR(piles, cursor.pile_idx);
      0009A3 01r38r01              2222 	ld	bc, #_piles+0
      0009A6 FAr89r01              2223 	ld	a, (#(_cursor + 0x0006) + 0)
      0009A9 5F                    2224 	ld	e, a
      0009AA 16 00                 2225 	ld	d, #0x00
      0009AC 6B                    2226 	ld	l, e
      0009AD 62                    2227 	ld	h, d
      0009AE 29                    2228 	add	hl, hl
      0009AF 29                    2229 	add	hl, hl
      0009B0 19                    2230 	add	hl, de
      0009B1 09                    2231 	add	hl, bc
      0009B2 4D                    2232 	ld	c, l
      0009B3 7C                    2233 	ld	a, h
      0009B4 F8 06                 2234 	ldhl	sp,	#6
      0009B6 71                    2235 	ld	(hl), c
      0009B7 23                    2236 	inc	hl
      0009B8 77                    2237 	ld	(hl), a
                                   2238 ;src/main.c:500: Card *top_card = cursor.held_card;
      0009B9 11r83r01              2239 	ld	de, #_cursor
      0009BC 1A                    2240 	ld	a, (de)
      0009BD 23                    2241 	inc	hl
      0009BE 22                    2242 	ld	(hl+), a
      0009BF 13                    2243 	inc	de
      0009C0 1A                    2244 	ld	a, (de)
      0009C1 77                    2245 	ld	(hl), a
                                   2246 ;src/main.c:501: while (top_card->next_card)
      0009C2                       2247 00104$:
      0009C2 F8 08                 2248 	ldhl	sp,#8
      0009C4 2A                    2249 	ld	a, (hl+)
      0009C5 5F                    2250 	ld	e, a
      0009C6 56                    2251 	ld	d, (hl)
      0009C7 1A                    2252 	ld	a, (de)
      0009C8 23                    2253 	inc	hl
      0009C9 23                    2254 	inc	hl
      0009CA 22                    2255 	ld	(hl+), a
      0009CB 13                    2256 	inc	de
      0009CC 1A                    2257 	ld	a, (de)
      0009CD 77                    2258 	ld	(hl), a
      0009CE 3A                    2259 	ld	a, (hl-)
      0009CF B6                    2260 	or	a, (hl)
      0009D0 28 08                 2261 	jr	Z, 00106$
                                   2262 ;src/main.c:502: top_card = top_card->next_card;
      0009D2 2A                    2263 	ld	a, (hl+)
      0009D3 5E                    2264 	ld	e, (hl)
      0009D4 F8 08                 2265 	ldhl	sp,	#8
      0009D6 22                    2266 	ld	(hl+), a
      0009D7 73                    2267 	ld	(hl), e
      0009D8 18 E8                 2268 	jr	00104$
      0009DA                       2269 00106$:
                                   2270 ;src/main.c:503: pile->top = top_card;
      0009DA F8 04                 2271 	ldhl	sp,#4
      0009DC 2A                    2272 	ld	a, (hl+)
      0009DD 5F                    2273 	ld	e, a
      0009DE 56                    2274 	ld	d, (hl)
      0009DF F8 08                 2275 	ldhl	sp,	#8
      0009E1 7E                    2276 	ld	a, (hl)
      0009E2 12                    2277 	ld	(de), a
      0009E3 13                    2278 	inc	de
      0009E4 23                    2279 	inc	hl
      0009E5 7E                    2280 	ld	a, (hl)
      0009E6 12                    2281 	ld	(de), a
                                   2282 ;src/main.c:504: cursor.height = pile->height - !!pile->height;
      0009E7 F8 02                 2283 	ldhl	sp,#2
      0009E9 2A                    2284 	ld	a, (hl+)
      0009EA 5F                    2285 	ld	e, a
      0009EB 56                    2286 	ld	d, (hl)
      0009EC 1A                    2287 	ld	a, (de)
      0009ED 47                    2288 	ld	b, a
      0009EE D6 01                 2289 	sub	a,#0x01
      0009F0 3E 00                 2290 	ld	a, #0x00
      0009F2 17                    2291 	rla
      0009F3 EE 01                 2292 	xor	a, #0x01
      0009F5 4F                    2293 	ld	c, a
      0009F6 78                    2294 	ld	a, b
      0009F7 91                    2295 	sub	a, c
      0009F8 EAr8Ar01              2296 	ld	(#(_cursor + 0x0007)),a
                                   2297 ;src/main.c:505: pile->height += cursor.held_stack_size;
      0009FB F8 02                 2298 	ldhl	sp,#2
      0009FD 2A                    2299 	ld	a, (hl+)
      0009FE 5F                    2300 	ld	e, a
      0009FF 56                    2301 	ld	d, (hl)
      000A00 1A                    2302 	ld	a, (de)
      000A01 4F                    2303 	ld	c, a
      000A02 FAr87r01              2304 	ld	a, (#(_cursor + 0x0004) + 0)
      000A05 81                    2305 	add	a, c
      000A06 4F                    2306 	ld	c, a
      000A07 2B                    2307 	dec	hl
      000A08 2A                    2308 	ld	a, (hl+)
      000A09 66                    2309 	ld	h, (hl)
      000A0A 6F                    2310 	ld	l, a
      000A0B 71                    2311 	ld	(hl), c
                                   2312 ;src/main.c:506: if (cursor.hand_pile_idx != cursor.pile_idx) {
      000A0C FAr88r01              2313 	ld	a, (#(_cursor + 0x0005) + 0)
      000A0F 21r89r01              2314 	ld	hl, #(_cursor + 0x0006)
      000A12 4E                    2315 	ld	c, (hl)
      000A13 91                    2316 	sub	a, c
      000A14 CAr14r0B              2317 	jp	Z,00116$
                                   2318 ;src/main.c:507: UINT8 piles_to_clear = 0;
      000A17 AF                    2319 	xor	a, a
      000A18 F8 0C                 2320 	ldhl	sp,	#12
      000A1A 77                    2321 	ld	(hl), a
                                   2322 ;src/main.c:508: if (src_pile->height == 13u && is_stack_coherent(src_pile->base)) {
                                   2323 ;c
      000A1B F8 06                 2324 	ldhl	sp,#6
      000A1D 2A                    2325 	ld	a, (hl+)
      000A1E 5F                    2326 	ld	e, a
      000A1F 56                    2327 	ld	d, (hl)
      000A20 21 04 00              2328 	ld	hl, #0x0004
      000A23 19                    2329 	add	hl, de
      000A24 E5                    2330 	push	hl
      000A25 7D                    2331 	ld	a, l
      000A26 F8 0C                 2332 	ldhl	sp,	#12
      000A28 77                    2333 	ld	(hl), a
      000A29 E1                    2334 	pop	hl
      000A2A 7C                    2335 	ld	a, h
      000A2B F8 0B                 2336 	ldhl	sp,	#11
      000A2D 32                    2337 	ld	(hl-), a
      000A2E 2A                    2338 	ld	a, (hl+)
      000A2F 5F                    2339 	ld	e, a
      000A30 56                    2340 	ld	d, (hl)
      000A31 1A                    2341 	ld	a, (de)
      000A32 D6 0D                 2342 	sub	a, #0x0d
      000A34 20 1A                 2343 	jr	NZ, 00108$
      000A36 F8 06                 2344 	ldhl	sp,#6
      000A38 2A                    2345 	ld	a, (hl+)
      000A39 5F                    2346 	ld	e, a
      000A3A 56                    2347 	ld	d, (hl)
      000A3B 1A                    2348 	ld	a, (de)
      000A3C 4F                    2349 	ld	c, a
      000A3D 13                    2350 	inc	de
      000A3E 1A                    2351 	ld	a, (de)
      000A3F 47                    2352 	ld	b, a
      000A40 C5                    2353 	push	bc
      000A41 CDr30r04              2354 	call	_is_stack_coherent
      000A44 E8 02                 2355 	add	sp, #2
      000A46 7B                    2356 	ld	a, e
      000A47 B7                    2357 	or	a, a
      000A48 28 06                 2358 	jr	Z, 00108$
                                   2359 ;src/main.c:509: piles_to_clear = cursor.pile_idx;
      000A4A FAr89r01              2360 	ld	a, (#(_cursor + 0x0006) + 0)
      000A4D F8 0C                 2361 	ldhl	sp,	#12
      000A4F 77                    2362 	ld	(hl), a
      000A50                       2363 00108$:
                                   2364 ;src/main.c:511: if (pile->height == 13u && is_stack_coherent(pile->base)) {
      000A50 F8 02                 2365 	ldhl	sp,#2
      000A52 2A                    2366 	ld	a, (hl+)
      000A53 5F                    2367 	ld	e, a
      000A54 56                    2368 	ld	d, (hl)
      000A55 1A                    2369 	ld	a, (de)
      000A56 D6 0D                 2370 	sub	a, #0x0d
      000A58 20 32                 2371 	jr	NZ, 00111$
      000A5A D1                    2372 	pop	de
      000A5B D5                    2373 	push	de
      000A5C 1A                    2374 	ld	a, (de)
      000A5D 4F                    2375 	ld	c, a
      000A5E 13                    2376 	inc	de
      000A5F 1A                    2377 	ld	a, (de)
      000A60 47                    2378 	ld	b, a
      000A61 C5                    2379 	push	bc
      000A62 CDr30r04              2380 	call	_is_stack_coherent
      000A65 E8 02                 2381 	add	sp, #2
      000A67 7B                    2382 	ld	a, e
      000A68 B7                    2383 	or	a, a
      000A69 28 21                 2384 	jr	Z, 00111$
                                   2385 ;src/main.c:512: cursor.height = 0;
      000A6B 21r8Ar01              2386 	ld	hl, #(_cursor + 0x0007)
      000A6E 36 00                 2387 	ld	(hl), #0x00
                                   2388 ;src/main.c:506: if (cursor.hand_pile_idx != cursor.pile_idx) {
      000A70 FAr88r01              2389 	ld	a, (#(_cursor + 0x0005) + 0)
      000A73 F8 07                 2390 	ldhl	sp,	#7
      000A75 77                    2391 	ld	(hl), a
                                   2392 ;src/main.c:513: piles_to_clear |= piles_to_clear ? cursor.hand_pile_idx << 4u : cursor.hand_pile_idx;
      000A76 F8 0C                 2393 	ldhl	sp,	#12
      000A78 7E                    2394 	ld	a, (hl)
      000A79 B7                    2395 	or	a, a
      000A7A 28 09                 2396 	jr	Z, 00119$
      000A7C F8 07                 2397 	ldhl	sp,	#7
      000A7E 7E                    2398 	ld	a, (hl)
      000A7F CB 37                 2399 	swap	a
      000A81 E6 F0                 2400 	and	a, #0xf0
      000A83 18 03                 2401 	jr	00120$
      000A85                       2402 00119$:
      000A85 F8 07                 2403 	ldhl	sp,	#7
      000A87 7E                    2404 	ld	a, (hl)
      000A88                       2405 00120$:
      000A88 F8 0C                 2406 	ldhl	sp,	#12
      000A8A B6                    2407 	or	a, (hl)
      000A8B 77                    2408 	ld	(hl), a
      000A8C                       2409 00111$:
                                   2410 ;src/main.c:516: if (cursor.card_to_show)
      000A8C 11r85r01              2411 	ld	de, #(_cursor + 0x0002)
      000A8F 1A                    2412 	ld	a, (de)
      000A90 F8 06                 2413 	ldhl	sp,	#6
      000A92 22                    2414 	ld	(hl+), a
      000A93 13                    2415 	inc	de
      000A94 1A                    2416 	ld	a, (de)
      000A95 77                    2417 	ld	(hl), a
      000A96 3A                    2418 	ld	a, (hl-)
      000A97 B6                    2419 	or	a, (hl)
      000A98 28 07                 2420 	jr	Z, 00114$
                                   2421 ;src/main.c:517: cursor.card_to_show->data |= BITMASK_DATA_VISIBLE;
      000A9A 2A                    2422 	ld	a, (hl+)
      000A9B 66                    2423 	ld	h, (hl)
      000A9C 6F                    2424 	ld	l, a
      000A9D 23                    2425 	inc	hl
      000A9E 23                    2426 	inc	hl
      000A9F CB F6                 2427 	set	6, (hl)
      000AA1                       2428 00114$:
                                   2429 ;src/main.c:523: cursor.held_card,
      000AA1 11r83r01              2430 	ld	de, #_cursor
      000AA4 1A                    2431 	ld	a, (de)
      000AA5 F8 06                 2432 	ldhl	sp,	#6
      000AA7 22                    2433 	ld	(hl+), a
      000AA8 13                    2434 	inc	de
      000AA9 1A                    2435 	ld	a, (de)
      000AAA 77                    2436 	ld	(hl), a
                                   2437 ;src/main.c:522: cursor.held_stack_size,
      000AAB 21r87r01              2438 	ld	hl, #(_cursor + 0x0004)
      000AAE 4E                    2439 	ld	c, (hl)
                                   2440 ;src/main.c:521: (pile->height + SCOREBAR_HEIGHT - cursor.held_stack_size) * 8u,
      000AAF F8 02                 2441 	ldhl	sp,#2
      000AB1 2A                    2442 	ld	a, (hl+)
      000AB2 5F                    2443 	ld	e, a
      000AB3 56                    2444 	ld	d, (hl)
      000AB4 1A                    2445 	ld	a, (de)
      000AB5 C6 03                 2446 	add	a, #0x03
      000AB7 91                    2447 	sub	a, c
      000AB8 87                    2448 	add	a, a
      000AB9 87                    2449 	add	a, a
      000ABA 87                    2450 	add	a, a
      000ABB 23                    2451 	inc	hl
      000ABC 77                    2452 	ld	(hl), a
                                   2453 ;src/main.c:520: (src_pile->height + SCOREBAR_HEIGHT + cursor.held_stack_size - 1u) * 8u, cursor.hand_pile_idx * 16u,
      000ABD FAr88r01              2454 	ld	a, (#(_cursor + 0x0005) + 0)
      000AC0 CB 37                 2455 	swap	a
      000AC2 E6 F0                 2456 	and	a, #0xf0
      000AC4 23                    2457 	inc	hl
      000AC5 77                    2458 	ld	(hl), a
      000AC6 79                    2459 	ld	a, c
      000AC7 3C                    2460 	inc	a
      000AC8 3C                    2461 	inc	a
      000AC9 F8 0A                 2462 	ldhl	sp,#10
      000ACB 5E                    2463 	ld	e, (hl)
      000ACC 23                    2464 	inc	hl
      000ACD 56                    2465 	ld	d, (hl)
      000ACE F5                    2466 	push	af
      000ACF 1A                    2467 	ld	a, (de)
      000AD0 6F                    2468 	ld	l, a
      000AD1 F1                    2469 	pop	af
      000AD2 85                    2470 	add	a, l
      000AD3 87                    2471 	add	a, a
      000AD4 87                    2472 	add	a, a
      000AD5 87                    2473 	add	a, a
      000AD6 F8 0B                 2474 	ldhl	sp,	#11
      000AD8 77                    2475 	ld	(hl), a
                                   2476 ;src/main.c:519: cursor.pile_idx * 16u,
      000AD9 FAr89r01              2477 	ld	a, (#(_cursor + 0x0006) + 0)
      000ADC CB 37                 2478 	swap	a
      000ADE E6 F0                 2479 	and	a, #0xf0
                                   2480 ;src/main.c:518: dynamic_metasprite_fold(top_card->data,
      000AE0 F8 08                 2481 	ldhl	sp,	#8
      000AE2 F5                    2482 	push	af
      000AE3 2A                    2483 	ld	a, (hl+)
      000AE4 66                    2484 	ld	h, (hl)
      000AE5 6F                    2485 	ld	l, a
      000AE6 F1                    2486 	pop	af
      000AE7 23                    2487 	inc	hl
      000AE8 23                    2488 	inc	hl
      000AE9 5E                    2489 	ld	e, (hl)
      000AEA F8 0C                 2490 	ldhl	sp,	#12
      000AEC 66                    2491 	ld	h, (hl)
      000AED E5                    2492 	push	hl
      000AEE 33                    2493 	inc	sp
      000AEF 26 80                 2494 	ld	h, #0x80
      000AF1 E5                    2495 	push	hl
      000AF2 33                    2496 	inc	sp
      000AF3 F8 08                 2497 	ldhl	sp,	#8
      000AF5 F5                    2498 	push	af
      000AF6 2A                    2499 	ld	a, (hl+)
      000AF7 66                    2500 	ld	h, (hl)
      000AF8 6F                    2501 	ld	l, a
      000AF9 F1                    2502 	pop	af
      000AFA E5                    2503 	push	hl
      000AFB 61                    2504 	ld	h, c
      000AFC E5                    2505 	push	hl
      000AFD 33                    2506 	inc	sp
      000AFE F8 09                 2507 	ldhl	sp,	#9
      000B00 66                    2508 	ld	h, (hl)
      000B01 E5                    2509 	push	hl
      000B02 33                    2510 	inc	sp
      000B03 F8 0B                 2511 	ldhl	sp,	#11
      000B05 66                    2512 	ld	h, (hl)
      000B06 E5                    2513 	push	hl
      000B07 33                    2514 	inc	sp
      000B08 F8 12                 2515 	ldhl	sp,	#18
      000B0A 66                    2516 	ld	h, (hl)
      000B0B E5                    2517 	push	hl
      000B0C 33                    2518 	inc	sp
      000B0D 57                    2519 	ld	d,a
      000B0E D5                    2520 	push	de
      000B0F CDrB2r08              2521 	call	_dynamic_metasprite_fold
      000B12 E8 0A                 2522 	add	sp, #10
      000B14                       2523 00116$:
                                   2524 ;src/main.c:529: cursor.held_card = NULL;
      000B14 21r83r01              2525 	ld	hl, #_cursor
      000B17 AF                    2526 	xor	a, a
      000B18 22                    2527 	ld	(hl+), a
      000B19 77                    2528 	ld	(hl), a
                                   2529 ;src/main.c:530: cursor.pile_idx = cursor.hand_pile_idx;
      000B1A FAr88r01              2530 	ld	a, (#(_cursor + 0x0005) + 0)
      000B1D EAr89r01              2531 	ld	(#(_cursor + 0x0006)),a
                                   2532 ;src/main.c:531: flags |= FLAG_REDRAW_CURSOR;
      000B20 21r6Br01              2533 	ld	hl, #_flags
      000B23 7E                    2534 	ld	a, (hl)
      000B24 F6 01                 2535 	or	a, #0x01
      000B26 77                    2536 	ld	(hl), a
                                   2537 ;src/main.c:532: }
      000B27 E8 0D                 2538 	add	sp, #13
      000B29 C9                    2539 	ret
                                   2540 ;src/main.c:656: void main(void)
                                   2541 ;	---------------------------------
                                   2542 ; Function main
                                   2543 ; ---------------------------------
      000B2A                       2544 _main::
      000B2A E8 F8                 2545 	add	sp, #-8
                                   2546 ;src/main.c:658: set_bkg_data(OFFSET_BKG_CARD, N_CARD, card_textures);
      000B2C 21r00r00              2547 	ld	hl, #_card_textures
      000B2F E5                    2548 	push	hl
      000B30 11 01 34              2549 	ld	de, #0x3401
      000B33 D5                    2550 	push	de
      000B34 CDr00r00              2551 	call	_set_bkg_data
      000B37 E8 04                 2552 	add	sp, #4
                                   2553 ;src/main.c:660: initrand(DIV_REG);
      000B39 F0r00                 2554 	ldh	a, (_DIV_REG+0)
      000B3B 4F                    2555 	ld	c, a
      000B3C 06 00                 2556 	ld	b, #0x00
      000B3E C5                    2557 	push	bc
      000B3F CDr00r00              2558 	call	_initrand
      000B42 E8 02                 2559 	add	sp, #2
                                   2560 ;src/main.c:662: init_deck();
      000B44 CDr1Er00              2561 	call	_init_deck
                                   2562 ;src/main.c:664: draw_background();
      000B47 CDrC2r03              2563 	call	_draw_background
                                   2564 ;src/main.c:665: SHOW_BKG;
      000B4A F0r00                 2565 	ldh	a, (_LCDC_REG+0)
      000B4C F6 01                 2566 	or	a, #0x01
      000B4E E0r00                 2567 	ldh	(_LCDC_REG+0),a
                                   2568 ;src/main.c:667: set_sprite_data(OFFSET_SPRITE_CURSOR, N_CURSOR, cursor_textures);
      000B50 21r00r00              2569 	ld	hl, #_cursor_textures
      000B53 E5                    2570 	push	hl
      000B54 11 01 08              2571 	ld	de, #0x0801
      000B57 D5                    2572 	push	de
      000B58 CDr00r00              2573 	call	_set_sprite_data
      000B5B E8 04                 2574 	add	sp, #4
                                   2575 ;src/main.c:668: set_sprite_data(OFFSET_SPRITE_CARD, N_CARD, card_textures);
      000B5D 21r00r00              2576 	ld	hl, #_card_textures
      000B60 E5                    2577 	push	hl
      000B61 11 09 34              2578 	ld	de, #0x3409
      000B64 D5                    2579 	push	de
      000B65 CDr00r00              2580 	call	_set_sprite_data
      000B68 E8 04                 2581 	add	sp, #4
                                   2582 ;src/main.c:669: SHOW_SPRITES;
      000B6A F0r00                 2583 	ldh	a, (_LCDC_REG+0)
      000B6C F6 02                 2584 	or	a, #0x02
      000B6E E0r00                 2585 	ldh	(_LCDC_REG+0),a
                                   2586 ;src/main.c:671: while (1) {
      000B70                       2587 00102$:
                                   2588 ;src/main.c:549: UINT8 input = joypad();
      000B70 CDr00r00              2589 	call	_joypad
      000B73 F8 00                 2590 	ldhl	sp,	#0
      000B75 73                    2591 	ld	(hl), e
                                   2592 ;src/main.c:550: UINT8 new_input = input & ~prev_input;
      000B76 FAr8Er01              2593 	ld	a, (#_main_prev_input_327680_282)
      000B79 2F                    2594 	cpl
      000B7A F8 00                 2595 	ldhl	sp,	#0
      000B7C A6                    2596 	and	a, (hl)
      000B7D 23                    2597 	inc	hl
      000B7E 77                    2598 	ld	(hl), a
                                   2599 ;src/main.c:551: if (cursor.held_card) {
      000B7F 21r83r01              2600 	ld	hl, #_cursor
      000B82 2A                    2601 	ld	a, (hl+)
      000B83 4F                    2602 	ld	c, a
      000B84 46                    2603 	ld	b, (hl)
                                   2604 ;src/main.c:552: flags |= FLAG_REDRAW_HAND;
      000B85 21r6Br01              2605 	ld	hl, #_flags
      000B88 5E                    2606 	ld	e, (hl)
                                   2607 ;src/main.c:554: && cursor.hand_pile_idx != 0) {
      000B89 F8 01                 2608 	ldhl	sp,	#1
      000B8B 7E                    2609 	ld	a, (hl)
      000B8C E6 02                 2610 	and	a, #0x02
      000B8E 23                    2611 	inc	hl
      000B8F 77                    2612 	ld	(hl), a
      000B90 AF                    2613 	xor	a, a
      000B91 23                    2614 	inc	hl
                                   2615 ;src/main.c:557: && cursor.hand_pile_idx < 9) {
      000B92 32                    2616 	ld	(hl-), a
      000B93 2B                    2617 	dec	hl
      000B94 7E                    2618 	ld	a, (hl)
      000B95 E6 01                 2619 	and	a, #0x01
      000B97 F8 04                 2620 	ldhl	sp,	#4
      000B99 77                    2621 	ld	(hl), a
      000B9A AF                    2622 	xor	a, a
      000B9B 23                    2623 	inc	hl
      000B9C 77                    2624 	ld	(hl), a
                                   2625 ;src/main.c:561: && ~flags & FLAG_PLAYING_ANIMATION) {
      000B9D F8 01                 2626 	ldhl	sp,	#1
      000B9F 7E                    2627 	ld	a, (hl)
      000BA0 E6 10                 2628 	and	a, #0x10
      000BA2 F8 06                 2629 	ldhl	sp,	#6
      000BA4 77                    2630 	ld	(hl), a
      000BA5 AF                    2631 	xor	a, a
      000BA6 23                    2632 	inc	hl
      000BA7 77                    2633 	ld	(hl), a
                                   2634 ;src/main.c:551: if (cursor.held_card) {
      000BA8 78                    2635 	ld	a, b
      000BA9 B1                    2636 	or	a, c
      000BAA CAr67r0C              2637 	jp	Z, 00164$
                                   2638 ;src/main.c:552: flags |= FLAG_REDRAW_HAND;
      000BAD 7B                    2639 	ld	a, e
      000BAE F6 02                 2640 	or	a, #0x02
      000BB0 EAr6Br01              2641 	ld	(#_flags),a
                                   2642 ;src/main.c:554: && cursor.hand_pile_idx != 0) {
      000BB3 F8 03                 2643 	ldhl	sp,	#3
      000BB5 3A                    2644 	ld	a, (hl-)
      000BB6 B6                    2645 	or	a, (hl)
      000BB7 28 0B                 2646 	jr	Z, 00109$
      000BB9 01r88r01              2647 	ld	bc, #_cursor+5
      000BBC 0A                    2648 	ld	a, (bc)
      000BBD B7                    2649 	or	a, a
      000BBE 28 04                 2650 	jr	Z, 00109$
                                   2651 ;src/main.c:555: cursor.hand_pile_idx--;
      000BC0 3D                    2652 	dec	a
      000BC1 02                    2653 	ld	(bc), a
      000BC2 18 10                 2654 	jr	00110$
      000BC4                       2655 00109$:
                                   2656 ;src/main.c:557: && cursor.hand_pile_idx < 9) {
      000BC4 F8 05                 2657 	ldhl	sp,	#5
      000BC6 3A                    2658 	ld	a, (hl-)
      000BC7 B6                    2659 	or	a, (hl)
      000BC8 28 0A                 2660 	jr	Z, 00110$
      000BCA 01r88r01              2661 	ld	bc, #_cursor+5
      000BCD 0A                    2662 	ld	a, (bc)
      000BCE FE 09                 2663 	cp	a, #0x09
      000BD0 30 02                 2664 	jr	NC, 00110$
                                   2665 ;src/main.c:558: cursor.hand_pile_idx++;
      000BD2 3C                    2666 	inc	a
      000BD3 02                    2667 	ld	(bc), a
      000BD4                       2668 00110$:
                                   2669 ;src/main.c:561: && ~flags & FLAG_PLAYING_ANIMATION) {
      000BD4 F8 07                 2670 	ldhl	sp,	#7
      000BD6 3A                    2671 	ld	a, (hl-)
      000BD7 B6                    2672 	or	a, (hl)
      000BD8 CAr74r0E              2673 	jp	Z, 00165$
      000BDB FAr6Br01              2674 	ld	a, (#_flags)
      000BDE 06 00                 2675 	ld	b, #0x00
      000BE0 2F                    2676 	cpl
      000BE1 4F                    2677 	ld	c, a
      000BE2 78                    2678 	ld	a, b
      000BE3 2F                    2679 	cpl
      000BE4 CB 51                 2680 	bit	2, c
      000BE6 CAr74r0E              2681 	jp	Z,00165$
                                   2682 ;src/main.c:536: Pile *pile = IDX_PTR(piles, cursor.hand_pile_idx);
      000BE9 21r88r01              2683 	ld	hl, #_cursor + 5
      000BEC 4E                    2684 	ld	c, (hl)
      000BED 06 00                 2685 	ld	b, #0x00
      000BEF 69                    2686 	ld	l, c
      000BF0 60                    2687 	ld	h, b
      000BF1 29                    2688 	add	hl, hl
      000BF2 29                    2689 	add	hl, hl
      000BF3 09                    2690 	add	hl, bc
      000BF4 3Er38                 2691 	ld	a, #<(_piles)
      000BF6 85                    2692 	add	a, l
      000BF7 47                    2693 	ld	b, a
      000BF8 3Es01                 2694 	ld	a, #>(_piles)
      000BFA 8C                    2695 	adc	a, h
      000BFB F8 06                 2696 	ldhl	sp,	#6
      000BFD 70                    2697 	ld	(hl), b
      000BFE 23                    2698 	inc	hl
      000BFF 77                    2699 	ld	(hl), a
                                   2700 ;src/main.c:537: if (cursor.hand_pile_idx == cursor.pile_idx) {
      000C00 FAr89r01              2701 	ld	a, (#(_cursor + 0x0006) + 0)
      000C03 91                    2702 	sub	a, c
      000C04 20 0D                 2703 	jr	NZ, 00116$
                                   2704 ;src/main.c:538: pile_append_cursor_stack(pile);
      000C06 2B                    2705 	dec	hl
      000C07 2A                    2706 	ld	a, (hl+)
      000C08 66                    2707 	ld	h, (hl)
      000C09 6F                    2708 	ld	l, a
      000C0A E5                    2709 	push	hl
      000C0B CDr3Dr09              2710 	call	_pile_append_cursor_stack
      000C0E E8 02                 2711 	add	sp, #2
      000C10 C3r74r0E              2712 	jp	00165$
      000C13                       2713 00116$:
                                   2714 ;src/main.c:539: } else if (!pile->height
                                   2715 ;c
      000C13 F8 06                 2716 	ldhl	sp,#6
      000C15 2A                    2717 	ld	a, (hl+)
      000C16 5F                    2718 	ld	e, a
      000C17 56                    2719 	ld	d, (hl)
      000C18 21 04 00              2720 	ld	hl, #0x0004
      000C1B 19                    2721 	add	hl, de
      000C1C 4D                    2722 	ld	c, l
      000C1D 44                    2723 	ld	b, h
      000C1E 0A                    2724 	ld	a, (bc)
      000C1F B7                    2725 	or	a, a
      000C20 28 2B                 2726 	jr	Z, 00114$
                                   2727 ;src/main.c:540: || RANK(pile->top->data) == RANK(cursor.held_card->data) + 1u) {
      000C22 F8 06                 2728 	ldhl	sp,	#6
      000C24 2A                    2729 	ld	a, (hl+)
      000C25 66                    2730 	ld	h, (hl)
      000C26 6F                    2731 	ld	l, a
      000C27 23                    2732 	inc	hl
      000C28 23                    2733 	inc	hl
      000C29 2A                    2734 	ld	a, (hl+)
      000C2A 4F                    2735 	ld	c, a
      000C2B 46                    2736 	ld	b, (hl)
      000C2C 03                    2737 	inc	bc
      000C2D 03                    2738 	inc	bc
      000C2E 0A                    2739 	ld	a, (bc)
      000C2F E6 0F                 2740 	and	a, #0x0f
      000C31 4F                    2741 	ld	c, a
      000C32 06 00                 2742 	ld	b, #0x00
      000C34 21r83r01              2743 	ld	hl, #_cursor
      000C37 2A                    2744 	ld	a, (hl+)
      000C38 66                    2745 	ld	h, (hl)
      000C39 6F                    2746 	ld	l, a
      000C3A 23                    2747 	inc	hl
      000C3B 23                    2748 	inc	hl
      000C3C 7E                    2749 	ld	a, (hl)
      000C3D E6 0F                 2750 	and	a, #0x0f
      000C3F 5F                    2751 	ld	e, a
      000C40 16 00                 2752 	ld	d, #0x00
      000C42 13                    2753 	inc	de
      000C43 79                    2754 	ld	a, c
      000C44 93                    2755 	sub	a, e
      000C45 C2r74r0E              2756 	jp	NZ,00165$
      000C48 78                    2757 	ld	a, b
      000C49 92                    2758 	sub	a, d
      000C4A C2r74r0E              2759 	jp	NZ,00165$
      000C4D                       2760 00114$:
                                   2761 ;src/main.c:541: pile_append_cursor_stack(pile);
      000C4D F8 06                 2762 	ldhl	sp,	#6
      000C4F 2A                    2763 	ld	a, (hl+)
      000C50 66                    2764 	ld	h, (hl)
      000C51 6F                    2765 	ld	l, a
      000C52 E5                    2766 	push	hl
      000C53 CDr3Dr09              2767 	call	_pile_append_cursor_stack
      000C56 E8 02                 2768 	add	sp, #2
                                   2769 ;src/main.c:542: score--;
      000C58 21r6Dr01              2770 	ld	hl, #_score + 1
      000C5B 2B                    2771 	dec	hl
      000C5C 2A                    2772 	ld	a, (hl+)
      000C5D 5F                    2773 	ld	e, a
      000C5E 56                    2774 	ld	d, (hl)
      000C5F 1B                    2775 	dec	de
      000C60 2B                    2776 	dec	hl
      000C61 7B                    2777 	ld	a, e
      000C62 22                    2778 	ld	(hl+), a
      000C63 72                    2779 	ld	(hl), d
                                   2780 ;src/main.c:562: cursor_place_stack();
      000C64 C3r74r0E              2781 	jp	00165$
      000C67                       2782 00164$:
                                   2783 ;src/main.c:565: flags |= FLAG_REDRAW_CURSOR;
      000C67 7B                    2784 	ld	a, e
      000C68 F6 01                 2785 	or	a, #0x01
      000C6A EAr6Br01              2786 	ld	(#_flags),a
                                   2787 ;src/main.c:566: if (new_input & J_DOWN) {
      000C6D F8 01                 2788 	ldhl	sp,	#1
      000C6F CB 5E                 2789 	bit	3, (hl)
      000C71 28 3D                 2790 	jr	Z, 00142$
                                   2791 ;src/main.c:567: if (cursor.pile_idx == PILE_IDX_DECK)
      000C73 21r89r01              2792 	ld	hl, #_cursor + 6
      000C76 46                    2793 	ld	b, (hl)
      000C77 78                    2794 	ld	a, b
                                   2795 ;src/main.c:568: cursor.pile_idx = 0;
      000C78 D6 0A                 2796 	sub	a,#0x0a
      000C7A 20 04                 2797 	jr	NZ, 00125$
      000C7C 77                    2798 	ld	(hl),a
      000C7D C3rFDr0C              2799 	jp	00143$
      000C80                       2800 00125$:
                                   2801 ;src/main.c:569: else if (cursor.height + 1u < piles[cursor.pile_idx].height)
      000C80 21r8Ar01              2802 	ld	hl, #(_cursor + 0x0007)
      000C83 4E                    2803 	ld	c, (hl)
      000C84 59                    2804 	ld	e, c
      000C85 16 00                 2805 	ld	d, #0x00
      000C87 13                    2806 	inc	de
      000C88 F8 04                 2807 	ldhl	sp,	#4
      000C8A 7B                    2808 	ld	a, e
      000C8B 22                    2809 	ld	(hl+), a
      000C8C 72                    2810 	ld	(hl), d
      000C8D 58                    2811 	ld	e, b
      000C8E 16 00                 2812 	ld	d, #0x00
      000C90 6B                    2813 	ld	l, e
      000C91 62                    2814 	ld	h, d
      000C92 29                    2815 	add	hl, hl
      000C93 29                    2816 	add	hl, hl
      000C94 19                    2817 	add	hl, de
      000C95 11r38r01              2818 	ld	de, #_piles
      000C98 19                    2819 	add	hl, de
      000C99 23                    2820 	inc	hl
      000C9A 23                    2821 	inc	hl
      000C9B 23                    2822 	inc	hl
      000C9C 23                    2823 	inc	hl
      000C9D 5E                    2824 	ld	e, (hl)
      000C9E 06 00                 2825 	ld	b, #0x00
      000CA0 F8 04                 2826 	ldhl	sp,	#4
      000CA2 7E                    2827 	ld	a, (hl)
      000CA3 93                    2828 	sub	a, e
      000CA4 23                    2829 	inc	hl
      000CA5 7E                    2830 	ld	a, (hl)
      000CA6 98                    2831 	sbc	a, b
      000CA7 30 54                 2832 	jr	NC, 00143$
                                   2833 ;src/main.c:570: cursor.height++;
      000CA9 0C                    2834 	inc	c
      000CAA 21r8Ar01              2835 	ld	hl, #(_cursor + 0x0007)
      000CAD 71                    2836 	ld	(hl), c
      000CAE 18 4D                 2837 	jr	00143$
      000CB0                       2838 00142$:
                                   2839 ;src/main.c:571: } else if (new_input & J_UP) {
      000CB0 F8 01                 2840 	ldhl	sp,	#1
      000CB2 CB 56                 2841 	bit	2, (hl)
      000CB4 28 1C                 2842 	jr	Z, 00140$
                                   2843 ;src/main.c:572: if (cursor.height == 0)
      000CB6 FAr8Ar01              2844 	ld	a, (#(_cursor + 0x0007) + 0)
      000CB9 F8 05                 2845 	ldhl	sp,	#5
      000CBB 77                    2846 	ld	(hl), a
      000CBC F8 05                 2847 	ldhl	sp,	#5
      000CBE 7E                    2848 	ld	a, (hl)
      000CBF B7                    2849 	or	a, a
      000CC0 20 07                 2850 	jr	NZ, 00129$
                                   2851 ;src/main.c:573: cursor.pile_idx = PILE_IDX_DECK;
      000CC2 21r89r01              2852 	ld	hl, #(_cursor + 0x0006)
      000CC5 36 0A                 2853 	ld	(hl), #0x0a
      000CC7 18 34                 2854 	jr	00143$
      000CC9                       2855 00129$:
                                   2856 ;src/main.c:575: cursor.height--;
      000CC9 F8 05                 2857 	ldhl	sp,	#5
      000CCB 7E                    2858 	ld	a, (hl)
      000CCC 3D                    2859 	dec	a
      000CCD EAr8Ar01              2860 	ld	(#(_cursor + 0x0007)),a
      000CD0 18 2B                 2861 	jr	00143$
      000CD2                       2862 00140$:
                                   2863 ;src/main.c:577: && cursor.pile_idx != 0
      000CD2 F8 03                 2864 	ldhl	sp,	#3
      000CD4 3A                    2865 	ld	a, (hl-)
      000CD5 B6                    2866 	or	a, (hl)
      000CD6 28 12                 2867 	jr	Z, 00138$
      000CD8 01r89r01              2868 	ld	bc, #_cursor+6
      000CDB 0A                    2869 	ld	a, (bc)
      000CDC B7                    2870 	or	a, a
      000CDD 28 0B                 2871 	jr	Z, 00138$
                                   2872 ;src/main.c:578: && cursor.pile_idx != PILE_IDX_DECK) {
      000CDF FE 0A                 2873 	cp	a, #0x0a
      000CE1 28 07                 2874 	jr	Z, 00138$
                                   2875 ;src/main.c:579: cursor.pile_idx--;
      000CE3 3D                    2876 	dec	a
      000CE4 02                    2877 	ld	(bc), a
                                   2878 ;src/main.c:580: cursor_adjust_height();
      000CE5 CDr07r04              2879 	call	_cursor_adjust_height
      000CE8 18 13                 2880 	jr	00143$
      000CEA                       2881 00138$:
                                   2882 ;src/main.c:582: && cursor.pile_idx < 9) {
      000CEA F8 05                 2883 	ldhl	sp,	#5
      000CEC 3A                    2884 	ld	a, (hl-)
      000CED B6                    2885 	or	a, (hl)
      000CEE 28 0D                 2886 	jr	Z, 00143$
      000CF0 01r89r01              2887 	ld	bc, #_cursor+6
      000CF3 0A                    2888 	ld	a, (bc)
      000CF4 FE 09                 2889 	cp	a, #0x09
      000CF6 30 05                 2890 	jr	NC, 00143$
                                   2891 ;src/main.c:583: cursor.pile_idx++;
      000CF8 3C                    2892 	inc	a
      000CF9 02                    2893 	ld	(bc), a
                                   2894 ;src/main.c:584: cursor_adjust_height();
      000CFA CDr07r04              2895 	call	_cursor_adjust_height
      000CFD                       2896 00143$:
                                   2897 ;src/main.c:587: && ~flags & FLAG_PLAYING_ANIMATION) {
      000CFD F8 07                 2898 	ldhl	sp,	#7
      000CFF 3A                    2899 	ld	a, (hl-)
      000D00 B6                    2900 	or	a, (hl)
      000D01 CAr74r0E              2901 	jp	Z, 00165$
      000D04 FAr6Br01              2902 	ld	a, (#_flags)
      000D07 06 00                 2903 	ld	b, #0x00
      000D09 2F                    2904 	cpl
      000D0A 4F                    2905 	ld	c, a
      000D0B 78                    2906 	ld	a, b
      000D0C 2F                    2907 	cpl
      000D0D CB 51                 2908 	bit	2, c
      000D0F CAr74r0E              2909 	jp	Z,00165$
                                   2910 ;src/main.c:588: if (cursor.pile_idx == PILE_IDX_DECK && top_card_idx != 104u)
      000D12 21r89r01              2911 	ld	hl, #(_cursor + 0x0006)
      000D15 4E                    2912 	ld	c, (hl)
      000D16 79                    2913 	ld	a, c
      000D17 D6 0A                 2914 	sub	a, #0x0a
      000D19 C2rB3r0D              2915 	jp	NZ,00160$
      000D1C FAr6Ar01              2916 	ld	a, (#_top_card_idx)
      000D1F D6 68                 2917 	sub	a, #0x68
      000D21 CArB3r0D              2918 	jp	Z,00160$
                                   2919 ;src/main.c:352: Pile *pile = IDX_PTR(piles, 0);
      000D24 01r38r01              2920 	ld	bc, #_piles
                                   2921 ;src/main.c:353: for (i = 0; i < 10u; i++) {
      000D27 1E 00                 2922 	ld	e, #0x00
      000D29                       2923 00190$:
                                   2924 ;src/main.c:354: if (!pile->height)
      000D29 21 04 00              2925 	ld	hl, #0x0004
      000D2C 09                    2926 	add	hl, bc
      000D2D 7E                    2927 	ld	a, (hl)
      000D2E B7                    2928 	or	a, a
      000D2F CAr74r0E              2929 	jp	Z, 00165$
                                   2930 ;src/main.c:356: pile++;
      000D32 03                    2931 	inc	bc
      000D33 03                    2932 	inc	bc
      000D34 03                    2933 	inc	bc
      000D35 03                    2934 	inc	bc
      000D36 03                    2935 	inc	bc
                                   2936 ;src/main.c:353: for (i = 0; i < 10u; i++) {
      000D37 1C                    2937 	inc	e
      000D38 7B                    2938 	ld	a, e
      000D39 D6 0A                 2939 	sub	a, #0x0a
      000D3B 38 EC                 2940 	jr	C, 00190$
                                   2941 ;src/main.c:359: pile = IDX_PTR(piles, 0);
      000D3D F8 05                 2942 	ldhl	sp,	#5
      000D3F 36r38                 2943 	ld	(hl), #<(_piles)
      000D41 23                    2944 	inc	hl
      000D42 36s01                 2945 	ld	(hl), #>(_piles)
                                   2946 ;src/main.c:360: Card *deck_top = IDX_PTR(deck, top_card_idx);
      000D44 21r6Ar01              2947 	ld	hl, #_top_card_idx
      000D47 4E                    2948 	ld	c, (hl)
      000D48 06 00                 2949 	ld	b, #0x00
      000D4A 69                    2950 	ld	l, c
      000D4B 60                    2951 	ld	h, b
      000D4C 29                    2952 	add	hl, hl
      000D4D 09                    2953 	add	hl, bc
      000D4E 01r00r00              2954 	ld	bc,#_deck
      000D51 09                    2955 	add	hl,bc
      000D52 4D                    2956 	ld	c, l
      000D53 44                    2957 	ld	b, h
                                   2958 ;src/main.c:361: for (i = 0; i < 10u; i++) {
      000D54 F8 07                 2959 	ldhl	sp,	#7
      000D56 36 0A                 2960 	ld	(hl), #0x0a
      000D58                       2961 00194$:
                                   2962 ;src/main.c:362: pile->top->next_card = deck_top;
                                   2963 ;c
      000D58 F8 05                 2964 	ldhl	sp,#5
      000D5A 2A                    2965 	ld	a, (hl+)
      000D5B 5F                    2966 	ld	e, a
      000D5C 56                    2967 	ld	d, (hl)
      000D5D 21 02 00              2968 	ld	hl, #0x0002
      000D60 19                    2969 	add	hl, de
      000D61 E5                    2970 	push	hl
      000D62 7D                    2971 	ld	a, l
      000D63 F8 05                 2972 	ldhl	sp,	#5
      000D65 77                    2973 	ld	(hl), a
      000D66 E1                    2974 	pop	hl
      000D67 7C                    2975 	ld	a, h
      000D68 F8 04                 2976 	ldhl	sp,	#4
      000D6A 32                    2977 	ld	(hl-), a
      000D6B 2A                    2978 	ld	a, (hl+)
      000D6C 5F                    2979 	ld	e, a
      000D6D 56                    2980 	ld	d, (hl)
      000D6E 1A                    2981 	ld	a, (de)
      000D6F 6F                    2982 	ld	l, a
      000D70 13                    2983 	inc	de
      000D71 1A                    2984 	ld	a, (de)
      000D72 67                    2985 	ld	h, a
      000D73 79                    2986 	ld	a, c
      000D74 22                    2987 	ld	(hl+), a
      000D75 70                    2988 	ld	(hl), b
                                   2989 ;src/main.c:363: pile->top = deck_top;
      000D76 F8 03                 2990 	ldhl	sp,	#3
      000D78 2A                    2991 	ld	a, (hl+)
      000D79 66                    2992 	ld	h, (hl)
      000D7A 6F                    2993 	ld	l, a
      000D7B 79                    2994 	ld	a, c
      000D7C 22                    2995 	ld	(hl+), a
      000D7D 70                    2996 	ld	(hl), b
                                   2997 ;src/main.c:364: pile->height++;
                                   2998 ;c
      000D7E F8 05                 2999 	ldhl	sp,#5
      000D80 2A                    3000 	ld	a, (hl+)
      000D81 5F                    3001 	ld	e, a
      000D82 56                    3002 	ld	d, (hl)
      000D83 21 04 00              3003 	ld	hl, #0x0004
      000D86 19                    3004 	add	hl, de
      000D87 5D                    3005 	ld	e, l
      000D88 54                    3006 	ld	d, h
      000D89 1A                    3007 	ld	a, (de)
      000D8A 3C                    3008 	inc	a
      000D8B 12                    3009 	ld	(de), a
                                   3010 ;src/main.c:365: deck_top++;
      000D8C 03                    3011 	inc	bc
      000D8D 03                    3012 	inc	bc
      000D8E 03                    3013 	inc	bc
                                   3014 ;src/main.c:366: pile++;
                                   3015 ;c
      000D8F F8 05                 3016 	ldhl	sp,#5
      000D91 2A                    3017 	ld	a, (hl+)
      000D92 5F                    3018 	ld	e, a
      000D93 56                    3019 	ld	d, (hl)
      000D94 21 05 00              3020 	ld	hl, #0x0005
      000D97 19                    3021 	add	hl, de
      000D98 E5                    3022 	push	hl
      000D99 7D                    3023 	ld	a, l
      000D9A F8 07                 3024 	ldhl	sp,	#7
      000D9C 77                    3025 	ld	(hl), a
      000D9D E1                    3026 	pop	hl
      000D9E 7C                    3027 	ld	a, h
      000D9F F8 06                 3028 	ldhl	sp,	#6
      000DA1 22                    3029 	ld	(hl+), a
                                   3030 ;src/main.c:361: for (i = 0; i < 10u; i++) {
      000DA2 35                    3031 	dec	(hl)
      000DA3 7E                    3032 	ld	a, (hl)
      000DA4 20 B2                 3033 	jr	NZ, 00194$
                                   3034 ;src/main.c:368: top_card_idx += 10u;
      000DA6 21r6Ar01              3035 	ld	hl, #_top_card_idx
      000DA9 7E                    3036 	ld	a, (hl)
      000DAA C6 0A                 3037 	add	a, #0x0a
      000DAC 77                    3038 	ld	(hl), a
                                   3039 ;src/main.c:370: dynamic_metasprite_deal();
      000DAD CDr38r05              3040 	call	_dynamic_metasprite_deal
                                   3041 ;src/main.c:589: deal();
      000DB0 C3r74r0E              3042 	jp	00165$
      000DB3                       3043 00160$:
                                   3044 ;src/main.c:291: Pile *pile = IDX_PTR(piles, cursor.pile_idx);
      000DB3 06 00                 3045 	ld	b, #0x00
      000DB5 69                    3046 	ld	l, c
      000DB6 60                    3047 	ld	h, b
      000DB7 29                    3048 	add	hl, hl
      000DB8 29                    3049 	add	hl, hl
      000DB9 09                    3050 	add	hl, bc
      000DBA 3Er38                 3051 	ld	a, #<(_piles)
      000DBC 85                    3052 	add	a, l
      000DBD 4F                    3053 	ld	c, a
      000DBE 3Es01                 3054 	ld	a, #>(_piles)
      000DC0 8C                    3055 	adc	a, h
      000DC1 F8 03                 3056 	ldhl	sp,	#3
      000DC3 71                    3057 	ld	(hl), c
      000DC4 23                    3058 	inc	hl
                                   3059 ;src/main.c:292: Card *top = pile->base;
      000DC5 32                    3060 	ld	(hl-), a
      000DC6 2A                    3061 	ld	a, (hl+)
      000DC7 5F                    3062 	ld	e, a
      000DC8 56                    3063 	ld	d, (hl)
      000DC9 1A                    3064 	ld	a, (de)
      000DCA 23                    3065 	inc	hl
      000DCB 23                    3066 	inc	hl
      000DCC 22                    3067 	ld	(hl+), a
      000DCD 13                    3068 	inc	de
      000DCE 1A                    3069 	ld	a, (de)
      000DCF 77                    3070 	ld	(hl), a
                                   3071 ;src/main.c:293: for (i = 1; i < cursor.height; i++)
      000DD0 06 01                 3072 	ld	b, #0x01
      000DD2                       3073 00196$:
      000DD2 21r8Ar01              3074 	ld	hl, #(_cursor + 0x0007)
      000DD5 4E                    3075 	ld	c, (hl)
      000DD6 78                    3076 	ld	a, b
      000DD7 91                    3077 	sub	a, c
      000DD8 30 0E                 3078 	jr	NC, 00152$
                                   3079 ;src/main.c:294: top = top->next_card;
      000DDA F8 06                 3080 	ldhl	sp,#6
      000DDC 2A                    3081 	ld	a, (hl+)
      000DDD 5F                    3082 	ld	e, a
      000DDE 56                    3083 	ld	d, (hl)
      000DDF 1A                    3084 	ld	a, (de)
      000DE0 2B                    3085 	dec	hl
      000DE1 22                    3086 	ld	(hl+), a
      000DE2 13                    3087 	inc	de
      000DE3 1A                    3088 	ld	a, (de)
      000DE4 77                    3089 	ld	(hl), a
                                   3090 ;src/main.c:293: for (i = 1; i < cursor.height; i++)
      000DE5 04                    3091 	inc	b
      000DE6 18 EA                 3092 	jr	00196$
      000DE8                       3093 00152$:
                                   3094 ;src/main.c:295: Card *stack = cursor.height ? top->next_card : top;
      000DE8 79                    3095 	ld	a, c
      000DE9 B7                    3096 	or	a, a
      000DEA 28 0C                 3097 	jr	Z, 00200$
      000DEC F8 06                 3098 	ldhl	sp,#6
      000DEE 2A                    3099 	ld	a, (hl+)
      000DEF 5F                    3100 	ld	e, a
      000DF0 56                    3101 	ld	d, (hl)
      000DF1 1A                    3102 	ld	a, (de)
      000DF2 4F                    3103 	ld	c, a
      000DF3 13                    3104 	inc	de
      000DF4 1A                    3105 	ld	a, (de)
      000DF5 47                    3106 	ld	b, a
      000DF6 18 05                 3107 	jr	00201$
      000DF8                       3108 00200$:
      000DF8 F8 06                 3109 	ldhl	sp,#6
      000DFA 2A                    3110 	ld	a, (hl+)
      000DFB 4F                    3111 	ld	c, a
      000DFC 46                    3112 	ld	b, (hl)
      000DFD                       3113 00201$:
                                   3114 ;src/main.c:296: if (!(VISIBLE(stack->data) && is_stack_coherent(stack)))
      000DFD 59                    3115 	ld	e, c
      000DFE 50                    3116 	ld	d, b
      000DFF 13                    3117 	inc	de
      000E00 13                    3118 	inc	de
      000E01 1A                    3119 	ld	a, (de)
      000E02 CB 77                 3120 	bit	6, a
      000E04 28 6E                 3121 	jr	Z, 00165$
      000E06 C5                    3122 	push	bc
      000E07 C5                    3123 	push	bc
      000E08 CDr30r04              3124 	call	_is_stack_coherent
      000E0B E8 02                 3125 	add	sp, #2
      000E0D 7B                    3126 	ld	a, e
      000E0E C1                    3127 	pop	bc
      000E0F B7                    3128 	or	a, a
      000E10 28 62                 3129 	jr	Z, 00165$
                                   3130 ;src/main.c:299: cursor.held_card = stack;
      000E12 21r83r01              3131 	ld	hl, #_cursor
      000E15 79                    3132 	ld	a, c
      000E16 22                    3133 	ld	(hl+), a
      000E17 70                    3134 	ld	(hl), b
                                   3135 ;src/main.c:300: cursor.hand_pile_idx = cursor.pile_idx;
      000E18 FAr89r01              3136 	ld	a, (#(_cursor + 0x0006) + 0)
      000E1B EAr88r01              3137 	ld	(#(_cursor + 0x0005)),a
                                   3138 ;src/main.c:301: cursor.held_stack_size = pile->height - cursor.height;
                                   3139 ;c
      000E1E F8 03                 3140 	ldhl	sp,#3
      000E20 2A                    3141 	ld	a, (hl+)
      000E21 5F                    3142 	ld	e, a
      000E22 56                    3143 	ld	d, (hl)
      000E23 21 04 00              3144 	ld	hl, #0x0004
      000E26 19                    3145 	add	hl, de
      000E27 4D                    3146 	ld	c, l
      000E28 44                    3147 	ld	b, h
      000E29 0A                    3148 	ld	a, (bc)
      000E2A 21r8Ar01              3149 	ld	hl, #(_cursor + 0x0007)
      000E2D 6E                    3150 	ld	l, (hl)
      000E2E 95                    3151 	sub	a, l
      000E2F EAr87r01              3152 	ld	(#(_cursor + 0x0004)),a
                                   3153 ;src/main.c:302: pile->height = cursor.height;
      000E32 FAr8Ar01              3154 	ld	a, (#(_cursor + 0x0007) + 0)
      000E35 02                    3155 	ld	(bc), a
                                   3156 ;src/main.c:303: if (cursor.height) {
      000E36 FAr8Ar01              3157 	ld	a, (#(_cursor + 0x0007) + 0)
      000E39 F8 05                 3158 	ldhl	sp,	#5
      000E3B 77                    3159 	ld	(hl), a
                                   3160 ;src/main.c:304: pile->top = top;
      000E3C F8 03                 3161 	ldhl	sp,#3
      000E3E 2A                    3162 	ld	a, (hl+)
      000E3F 4F                    3163 	ld	c, a
      000E40 46                    3164 	ld	b, (hl)
      000E41 03                    3165 	inc	bc
      000E42 03                    3166 	inc	bc
                                   3167 ;src/main.c:306: cursor.card_to_show = top;
                                   3168 ;src/main.c:303: if (cursor.height) {
      000E43 23                    3169 	inc	hl
      000E44 7E                    3170 	ld	a, (hl)
      000E45 B7                    3171 	or	a, a
      000E46 28 1A                 3172 	jr	Z, 00157$
                                   3173 ;src/main.c:304: pile->top = top;
      000E48 23                    3174 	inc	hl
      000E49 2A                    3175 	ld	a, (hl+)
      000E4A 02                    3176 	ld	(bc), a
      000E4B 03                    3177 	inc	bc
      000E4C 7E                    3178 	ld	a, (hl)
      000E4D 02                    3179 	ld	(bc), a
                                   3180 ;src/main.c:305: top->next_card = NULL;
      000E4E 2B                    3181 	dec	hl
      000E4F 2A                    3182 	ld	a, (hl+)
      000E50 66                    3183 	ld	h, (hl)
      000E51 6F                    3184 	ld	l, a
      000E52 AF                    3185 	xor	a, a
      000E53 22                    3186 	ld	(hl+), a
      000E54 77                    3187 	ld	(hl), a
                                   3188 ;src/main.c:306: cursor.card_to_show = top;
      000E55 11r85r01              3189 	ld	de, #(_cursor + 0x0002)
      000E58 F8 06                 3190 	ldhl	sp,	#6
      000E5A 7E                    3191 	ld	a, (hl)
      000E5B 12                    3192 	ld	(de), a
      000E5C 13                    3193 	inc	de
      000E5D 23                    3194 	inc	hl
      000E5E 7E                    3195 	ld	a, (hl)
      000E5F 12                    3196 	ld	(de), a
      000E60 18 12                 3197 	jr	00165$
      000E62                       3198 00157$:
                                   3199 ;src/main.c:308: pile->base = NULL;
      000E62 F8 03                 3200 	ldhl	sp,	#3
      000E64 2A                    3201 	ld	a, (hl+)
      000E65 66                    3202 	ld	h, (hl)
      000E66 6F                    3203 	ld	l, a
      000E67 AF                    3204 	xor	a, a
      000E68 22                    3205 	ld	(hl+), a
      000E69 77                    3206 	ld	(hl), a
                                   3207 ;src/main.c:309: pile->top = NULL;
      000E6A AF                    3208 	xor	a, a
      000E6B 02                    3209 	ld	(bc), a
      000E6C 03                    3210 	inc	bc
      000E6D 02                    3211 	ld	(bc), a
                                   3212 ;src/main.c:310: cursor.card_to_show = NULL;
      000E6E 21r85r01              3213 	ld	hl, #(_cursor + 0x0002)
      000E71 AF                    3214 	xor	a, a
      000E72 22                    3215 	ld	(hl+), a
      000E73 77                    3216 	ld	(hl), a
                                   3217 ;src/main.c:591: cursor_grab_stack();
      000E74                       3218 00165$:
                                   3219 ;src/main.c:594: prev_input = input;
      000E74 F8 00                 3220 	ldhl	sp,	#0
      000E76 7E                    3221 	ld	a, (hl)
      000E77 EAr8Er01              3222 	ld	(#_main_prev_input_327680_282),a
                                   3223 ;src/main.c:599: cursor.anim_ctr++;
      000E7A 21r8Br01              3224 	ld	hl, #_cursor + 8
      000E7D 4E                    3225 	ld	c, (hl)
      000E7E 0C                    3226 	inc	c
      000E7F 71                    3227 	ld	(hl), c
                                   3228 ;src/main.c:600: cursor.anim_ctr &= (1u << (CURSOR_PERIOD + 1u)) - 1u;
      000E80 CB B9                 3229 	res	7, c
      000E82 71                    3230 	ld	(hl), c
                                   3231 ;src/main.c:601: UINT8 prev_anim_frame = cursor.anim_frame;
      000E83 FAr8Cr01              3232 	ld	a, (#(_cursor + 0x0009) + 0)
                                   3233 ;src/main.c:602: cursor.anim_frame = cursor.anim_ctr >> CURSOR_PERIOD;
      000E86 F5                    3234 	push	af
      000E87 79                    3235 	ld	a, c
      000E88 07                    3236 	rlca
      000E89 07                    3237 	rlca
      000E8A E6 03                 3238 	and	a, #0x03
      000E8C 4F                    3239 	ld	c, a
      000E8D F1                    3240 	pop	af
      000E8E 21r8Cr01              3241 	ld	hl, #(_cursor + 0x0009)
      000E91 71                    3242 	ld	(hl), c
                                   3243 ;src/main.c:603: if (cursor.anim_frame != prev_anim_frame)
      000E92 91                    3244 	sub	a, c
      000E93 28 07                 3245 	jr	Z, 00168$
                                   3246 ;src/main.c:604: flags |= FLAG_REDRAW_CURSOR;
      000E95 21r6Br01              3247 	ld	hl, #_flags
      000E98 7E                    3248 	ld	a, (hl)
      000E99 F6 01                 3249 	or	a, #0x01
      000E9B 77                    3250 	ld	(hl), a
      000E9C                       3251 00168$:
                                   3252 ;src/main.c:606: if (flags & FLAG_REDRAW_CURSOR) {
      000E9C FAr6Br01              3253 	ld	a, (#_flags)
      000E9F 0F                    3254 	rrca
      000EA0 30 61                 3255 	jr	NC, 00175$
                                   3256 ;src/main.c:607: flags &= ~FLAG_REDRAW_CURSOR;
      000EA2 21r6Br01              3257 	ld	hl, #_flags
      000EA5 7E                    3258 	ld	a, (hl)
      000EA6 E6 FE                 3259 	and	a, #0xfe
      000EA8 77                    3260 	ld	(hl), a
                                   3261 ;src/main.c:608: if (cursor.pile_idx == PILE_IDX_DECK)
      000EA9 21r89r01              3262 	ld	hl, #_cursor + 6
      000EAC 4E                    3263 	ld	c, (hl)
                                   3264 ;src/main.c:601: UINT8 prev_anim_frame = cursor.anim_frame;
      000EAD FAr8Cr01              3265 	ld	a, (#(_cursor + 0x0009) + 0)
                                   3266 ;src/main.c:609: move_metasprite(cursor_metasprites[cursor.anim_frame],
      000EB0 6F                    3267 	ld	l, a
      000EB1 26 00                 3268 	ld	h, #0x00
      000EB3 29                    3269 	add	hl, hl
      000EB4 5D                    3270 	ld	e, l
      000EB5 54                    3271 	ld	d, h
                                   3272 ;src/main.c:608: if (cursor.pile_idx == PILE_IDX_DECK)
      000EB6 79                    3273 	ld	a, c
      000EB7 D6 0A                 3274 	sub	a, #0x0a
      000EB9 20 20                 3275 	jr	NZ, 00172$
                                   3276 ;src/main.c:609: move_metasprite(cursor_metasprites[cursor.anim_frame],
      000EBB 21r00r00              3277 	ld	hl, #_cursor_metasprites
      000EBE 19                    3278 	add	hl, de
      000EBF 2A                    3279 	ld	a, (hl+)
      000EC0 4E                    3280 	ld	c, (hl)
                                   3281 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000EC1 21r00r00              3282 	ld	hl, #___current_metasprite
      000EC4 22                    3283 	ld	(hl+), a
      000EC5 71                    3284 	ld	(hl), c
                                   3285 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      000EC6 21r00r00              3286 	ld	hl, #___current_base_tile
      000EC9 36 01                 3287 	ld	(hl), #0x01
                                   3288 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000ECB AF                    3289 	xor	a, a
      000ECC F5                    3290 	push	af
      000ECD 33                    3291 	inc	sp
      000ECE AF                    3292 	xor	a, a
      000ECF F5                    3293 	push	af
      000ED0 33                    3294 	inc	sp
      000ED1 AF                    3295 	xor	a, a
      000ED2 F5                    3296 	push	af
      000ED3 33                    3297 	inc	sp
      000ED4 CDr00r00              3298 	call	___move_metasprite
      000ED7 E8 03                 3299 	add	sp, #3
                                   3300 ;src/main.c:614: );
      000ED9 18 28                 3301 	jr	00175$
      000EDB                       3302 00172$:
                                   3303 ;src/main.c:620: SCOREBAR_HEIGHT * 8u  + (cursor.height << 3u)
      000EDB FAr8Ar01              3304 	ld	a, (#_cursor + 7)
      000EDE 87                    3305 	add	a, a
      000EDF 87                    3306 	add	a, a
      000EE0 87                    3307 	add	a, a
      000EE1 C6 18                 3308 	add	a, #0x18
      000EE3 47                    3309 	ld	b, a
                                   3310 ;src/main.c:619: cursor.pile_idx << 4u,
      000EE4 79                    3311 	ld	a, c
      000EE5 CB 37                 3312 	swap	a
      000EE7 E6 F0                 3313 	and	a, #0xf0
      000EE9 4F                    3314 	ld	c, a
                                   3315 ;src/main.c:616: move_metasprite(cursor_metasprites[cursor.anim_frame],
      000EEA 21r00r00              3316 	ld	hl, #_cursor_metasprites
      000EED 19                    3317 	add	hl, de
      000EEE 2A                    3318 	ld	a, (hl+)
                                   3319 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000EEF 5E                    3320 	ld	e, (hl)
      000EF0 21r00r00              3321 	ld	hl, #___current_metasprite
      000EF3 22                    3322 	ld	(hl+), a
      000EF4 73                    3323 	ld	(hl), e
                                   3324 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      000EF5 21r00r00              3325 	ld	hl, #___current_base_tile
      000EF8 36 01                 3326 	ld	(hl), #0x01
                                   3327 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000EFA C5                    3328 	push	bc
      000EFB AF                    3329 	xor	a, a
      000EFC F5                    3330 	push	af
      000EFD 33                    3331 	inc	sp
      000EFE CDr00r00              3332 	call	___move_metasprite
      000F01 E8 03                 3333 	add	sp, #3
                                   3334 ;src/main.c:621: );
      000F03                       3335 00175$:
                                   3336 ;src/main.c:623: if (flags & FLAG_REDRAW_HAND) {
      000F03 FAr6Br01              3337 	ld	a, (#_flags)
      000F06 CB 4F                 3338 	bit	1, a
      000F08 28 57                 3339 	jr	Z, 00182$
                                   3340 ;src/main.c:624: flags &= ~FLAG_REDRAW_HAND;
      000F0A 21r6Br01              3341 	ld	hl, #_flags
      000F0D 7E                    3342 	ld	a, (hl)
      000F0E E6 FD                 3343 	and	a, #0xfd
      000F10 77                    3344 	ld	(hl), a
                                   3345 ;src/main.c:625: if (cursor.held_card) {
      000F11 21r83r01              3346 	ld	hl, #_cursor
      000F14 2A                    3347 	ld	a, (hl+)
      000F15 B6                    3348 	or	a,(hl)
      000F16 28 41                 3349 	jr	Z, 00178$
                                   3350 ;src/main.c:626: UINT8 height = piles[cursor.hand_pile_idx].height;
      000F18 21r88r01              3351 	ld	hl, #_cursor + 5
      000F1B 4E                    3352 	ld	c, (hl)
      000F1C 06 00                 3353 	ld	b, #0x00
      000F1E 69                    3354 	ld	l, c
      000F1F 60                    3355 	ld	h, b
      000F20 29                    3356 	add	hl, hl
      000F21 29                    3357 	add	hl, hl
      000F22 09                    3358 	add	hl, bc
      000F23 11r38r01              3359 	ld	de, #_piles
      000F26 19                    3360 	add	hl, de
      000F27 23                    3361 	inc	hl
      000F28 23                    3362 	inc	hl
      000F29 23                    3363 	inc	hl
      000F2A 23                    3364 	inc	hl
      000F2B 46                    3365 	ld	b, (hl)
                                   3366 ;src/main.c:631: SCOREBAR_HEIGHT * 8u + ((height + !height) << 3u) - 8u
      000F2C 78                    3367 	ld	a, b
      000F2D D6 01                 3368 	sub	a,#0x01
      000F2F 3E 00                 3369 	ld	a, #0x00
      000F31 17                    3370 	rla
      000F32 80                    3371 	add	a, b
      000F33 87                    3372 	add	a, a
      000F34 87                    3373 	add	a, a
      000F35 87                    3374 	add	a, a
      000F36 C6 10                 3375 	add	a, #0x10
      000F38 57                    3376 	ld	d, a
                                   3377 ;src/main.c:630: cursor.hand_pile_idx << 4u,
      000F39 79                    3378 	ld	a, c
      000F3A CB 37                 3379 	swap	a
      000F3C E6 F0                 3380 	and	a, #0xf0
      000F3E 47                    3381 	ld	b, a
                                   3382 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000F3F 21r00r00              3383 	ld	hl, #___current_metasprite
      000F42 36r00                 3384 	ld	(hl), #<(_metasprite_sequential_2x3)
      000F44 23                    3385 	inc	hl
      000F45 36s00                 3386 	ld	(hl), #>(_metasprite_sequential_2x3)
                                   3387 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      000F47 21r00r00              3388 	ld	hl, #___current_base_tile
      000F4A 36 03                 3389 	ld	(hl), #0x03
                                   3390 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000F4C 58                    3391 	ld	e, b
      000F4D D5                    3392 	push	de
      000F4E 3E 06                 3393 	ld	a, #0x06
      000F50 F5                    3394 	push	af
      000F51 33                    3395 	inc	sp
      000F52 CDr00r00              3396 	call	___move_metasprite
      000F55 E8 03                 3397 	add	sp, #3
                                   3398 ;src/main.c:632: );
      000F57 18 08                 3399 	jr	00182$
      000F59                       3400 00178$:
                                   3401 ;src/main.c:634: metasprite_2x3_hide(SPRITE_HAND);
      000F59 3E 06                 3402 	ld	a, #0x06
      000F5B F5                    3403 	push	af
      000F5C 33                    3404 	inc	sp
      000F5D CDr00r00              3405 	call	_metasprite_2x3_hide
      000F60 33                    3406 	inc	sp
                                   3407 ;src/main.c:674: cursor_process();
      000F61                       3408 00182$:
                                   3409 ;src/main.c:641: if (dynamic_metasprite.elapsed_frames >= dynamic_metasprite.target_frames)
      000F61 FAr77r01              3410 	ld	a, (#(_dynamic_metasprite + 0x0009) + 0)
      000F64 F8 07                 3411 	ldhl	sp,	#7
      000F66 77                    3412 	ld	(hl), a
      000F67 21r76r01              3413 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000F6A 4E                    3414 	ld	c, (hl)
      000F6B 59                    3415 	ld	e, c
      000F6C F8 07                 3416 	ldhl	sp,	#7
      000F6E 56                    3417 	ld	d, (hl)
      000F6F 7E                    3418 	ld	a, (hl)
      000F70 91                    3419 	sub	a, c
      000F71 CB 7B                 3420 	bit	7, e
      000F73 28 07                 3421 	jr	Z, 00439$
      000F75 CB 7A                 3422 	bit	7, d
      000F77 20 08                 3423 	jr	NZ, 00440$
      000F79 BF                    3424 	cp	a, a
      000F7A 18 05                 3425 	jr	00440$
      000F7C                       3426 00439$:
      000F7C CB 7A                 3427 	bit	7, d
      000F7E 28 01                 3428 	jr	Z, 00440$
      000F80 37                    3429 	scf
      000F81                       3430 00440$:
      000F81 D2r29r10              3431 	jp	NC, 00189$
                                   3432 ;src/main.c:644: dynamic_metasprite.elapsed_frames++;
      000F84 F8 07                 3433 	ldhl	sp,	#7
      000F86 7E                    3434 	ld	a, (hl)
      000F87 3C                    3435 	inc	a
      000F88 2B                    3436 	dec	hl
      000F89 77                    3437 	ld	(hl), a
      000F8A 11r77r01              3438 	ld	de, #(_dynamic_metasprite + 0x0009)
      000F8D 7E                    3439 	ld	a, (hl)
      000F8E 12                    3440 	ld	(de), a
                                   3441 ;src/main.c:649: dynamic_metasprite.src[1] + (dynamic_metasprite.dist[1] * dynamic_metasprite.elapsed_frames / dynamic_metasprite.target_frames)
      000F8F FAr70r01              3442 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      000F92 F8 07                 3443 	ldhl	sp,	#7
      000F94 77                    3444 	ld	(hl), a
      000F95 21r74r01              3445 	ld	hl, #_dynamic_metasprite + 6
      000F98 2A                    3446 	ld	a, (hl+)
      000F99 4F                    3447 	ld	c, a
      000F9A 46                    3448 	ld	b, (hl)
      000F9B F8 06                 3449 	ldhl	sp,	#6
      000F9D 7E                    3450 	ld	a, (hl)
      000F9E F8 02                 3451 	ldhl	sp,	#2
      000FA0 77                    3452 	ld	(hl), a
      000FA1 17                    3453 	rla
      000FA2 9F                    3454 	sbc	a, a
      000FA3 23                    3455 	inc	hl
      000FA4 32                    3456 	ld	(hl-), a
      000FA5 2A                    3457 	ld	a, (hl+)
      000FA6 66                    3458 	ld	h, (hl)
      000FA7 6F                    3459 	ld	l, a
      000FA8 E5                    3460 	push	hl
      000FA9 C5                    3461 	push	bc
      000FAA CDr00r00              3462 	call	__mulint
      000FAD E8 04                 3463 	add	sp, #4
      000FAF 4B                    3464 	ld	c, e
      000FB0 42                    3465 	ld	b, d
      000FB1 FAr76r01              3466 	ld	a, (#(_dynamic_metasprite + 0x0008) + 0)
      000FB4 F8 04                 3467 	ldhl	sp,	#4
      000FB6 77                    3468 	ld	(hl), a
      000FB7 17                    3469 	rla
      000FB8 9F                    3470 	sbc	a, a
      000FB9 23                    3471 	inc	hl
      000FBA 32                    3472 	ld	(hl-), a
      000FBB 2A                    3473 	ld	a, (hl+)
      000FBC 66                    3474 	ld	h, (hl)
      000FBD 6F                    3475 	ld	l, a
      000FBE E5                    3476 	push	hl
      000FBF C5                    3477 	push	bc
      000FC0 CDr00r00              3478 	call	__divsint
      000FC3 E8 04                 3479 	add	sp, #4
      000FC5 7B                    3480 	ld	a, e
      000FC6 F8 07                 3481 	ldhl	sp,	#7
      000FC8 86                    3482 	add	a, (hl)
      000FC9 2B                    3483 	dec	hl
      000FCA 77                    3484 	ld	(hl), a
                                   3485 ;src/main.c:648: dynamic_metasprite.src[0] + (dynamic_metasprite.dist[0] * dynamic_metasprite.elapsed_frames / dynamic_metasprite.target_frames),
      000FCB FAr6Er01              3486 	ld	a, (#_dynamic_metasprite + 0)
      000FCE F8 07                 3487 	ldhl	sp,	#7
      000FD0 77                    3488 	ld	(hl), a
      000FD1 21r72r01              3489 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000FD4 2A                    3490 	ld	a, (hl+)
      000FD5 4F                    3491 	ld	c, a
      000FD6 46                    3492 	ld	b, (hl)
      000FD7 F8 02                 3493 	ldhl	sp,	#2
      000FD9 2A                    3494 	ld	a, (hl+)
      000FDA 66                    3495 	ld	h, (hl)
      000FDB 6F                    3496 	ld	l, a
      000FDC E5                    3497 	push	hl
      000FDD C5                    3498 	push	bc
      000FDE CDr00r00              3499 	call	__mulint
      000FE1 E8 04                 3500 	add	sp, #4
      000FE3 F8 04                 3501 	ldhl	sp,	#4
      000FE5 2A                    3502 	ld	a, (hl+)
      000FE6 66                    3503 	ld	h, (hl)
      000FE7 6F                    3504 	ld	l, a
      000FE8 E5                    3505 	push	hl
      000FE9 D5                    3506 	push	de
      000FEA CDr00r00              3507 	call	__divsint
      000FED E8 04                 3508 	add	sp, #4
      000FEF 7B                    3509 	ld	a, e
      000FF0 F8 07                 3510 	ldhl	sp,	#7
      000FF2 86                    3511 	add	a, (hl)
      000FF3 47                    3512 	ld	b, a
                                   3513 ;src/main.c:646: dynamic_metasprite.metasprite_offset,
      000FF4 FAr7Ar01              3514 	ld	a, (#(_dynamic_metasprite + 0x000c) + 0)
      000FF7 EAr00r00              3515 	ld	(#___current_base_tile),a
                                   3516 ;src/main.c:645: move_metasprite(dynamic_metasprite.metasprite,
      000FFA 21r78r01              3517 	ld	hl, #_dynamic_metasprite + 10
      000FFD 2A                    3518 	ld	a, (hl+)
      000FFE 4E                    3519 	ld	c, (hl)
                                   3520 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000FFF 21r00r00              3521 	ld	hl, #___current_metasprite
      001002 22                    3522 	ld	(hl+), a
      001003 71                    3523 	ld	(hl), c
                                   3524 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      001004 F8 06                 3525 	ldhl	sp,	#6
      001006 7E                    3526 	ld	a, (hl)
      001007 F5                    3527 	push	af
      001008 33                    3528 	inc	sp
      001009 0E 0C                 3529 	ld	c, #0x0c
      00100B C5                    3530 	push	bc
      00100C CDr00r00              3531 	call	___move_metasprite
      00100F E8 03                 3532 	add	sp, #3
                                   3533 ;src/main.c:651: if (dynamic_metasprite.elapsed_frames == dynamic_metasprite.target_frames
      001011 FAr77r01              3534 	ld	a, (#(_dynamic_metasprite + 0x0009) + 0)
      001014 21r76r01              3535 	ld	hl, #(_dynamic_metasprite + 0x0008)
      001017 4E                    3536 	ld	c, (hl)
      001018 91                    3537 	sub	a, c
      001019 20 0E                 3538 	jr	NZ, 00189$
                                   3539 ;src/main.c:652: && dynamic_metasprite.callback)
      00101B 21r81r01              3540 	ld	hl, #_dynamic_metasprite + 19
      00101E 2A                    3541 	ld	a, (hl+)
      00101F 4F                    3542 	ld	c, a
      001020 66                    3543 	ld	h, (hl)
      001021 7C                    3544 	ld	a, h
      001022 B1                    3545 	or	a, c
      001023 28 04                 3546 	jr	Z, 00189$
                                   3547 ;src/main.c:653: dynamic_metasprite.callback();
      001025 69                    3548 	ld	l, c
      001026 CDr00r00              3549 	call	___sdcc_call_hl
                                   3550 ;src/main.c:676: dynamic_metasprite_process();
      001029                       3551 00189$:
                                   3552 ;src/main.c:678: wait_vbl_done();
      001029 CDr00r00              3553 	call	_wait_vbl_done
      00102C C3r70r0B              3554 	jp	00102$
                                   3555 ;src/main.c:680: }
      00102F E8 08                 3556 	add	sp, #8
      001031 C9                    3557 	ret
                                   3558 	.area _CODE
                                   3559 	.area _CABS (ABS)
