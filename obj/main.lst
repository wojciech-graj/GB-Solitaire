                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _dynamic_metasprite_splash_screen_callback
                                     13 	.globl _start_game
                                     14 	.globl _clear_bkg
                                     15 	.globl _pile_append_cursor_stack
                                     16 	.globl _dynamic_metasprite_fold_callback
                                     17 	.globl _dynamic_metasprite_move_stack_callback
                                     18 	.globl _dynamic_metasprite_unfold_callback
                                     19 	.globl _dynamic_metasprite_fold_pile
                                     20 	.globl _set_metasprite_card
                                     21 	.globl _dynamic_metasprite_deal
                                     22 	.globl _dynamic_metasprite_deal_callback
                                     23 	.globl _is_stack_coherent
                                     24 	.globl _cursor_adjust_height
                                     25 	.globl _draw_background
                                     26 	.globl _draw_sequential_card
                                     27 	.globl _draw_pile
                                     28 	.globl _draw_card_bottom
                                     29 	.globl _draw_card_top
                                     30 	.globl _dynamic_metasprite_end
                                     31 	.globl _init_deck
                                     32 	.globl _metasprite_2x3_hide
                                     33 	.globl _rand
                                     34 	.globl _initrand
                                     35 	.globl _font_set
                                     36 	.globl _font_load
                                     37 	.globl _font_init
                                     38 	.globl _set_sprite_data
                                     39 	.globl _set_bkg_tile_xy
                                     40 	.globl _set_bkg_tiles
                                     41 	.globl _set_bkg_data
                                     42 	.globl _wait_vbl_done
                                     43 	.globl _joypad
                                     44 	.globl _animation_speeds
                                     45 	.globl _cursor
                                     46 	.globl _dynamic_metasprite
                                     47 	.globl _score
                                     48 	.globl _settings
                                     49 	.globl _flags
                                     50 	.globl _top_card_idx
                                     51 	.globl _piles
                                     52 	.globl _deck
                                     53 	.globl _dynamic_metasprite_fold
                                     54 ;--------------------------------------------------------
                                     55 ; special function registers
                                     56 ;--------------------------------------------------------
                                     57 ;--------------------------------------------------------
                                     58 ; ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area _DATA
      000000                         61 _deck::
      000000                         62 	.ds 312
      000138                         63 _piles::
      000138                         64 	.ds 50
      00016A                         65 _top_card_idx::
      00016A                         66 	.ds 1
      00016B                         67 _flags::
      00016B                         68 	.ds 1
      00016C                         69 _settings::
      00016C                         70 	.ds 1
      00016D                         71 _score::
      00016D                         72 	.ds 2
      00016F                         73 _dynamic_metasprite::
      00016F                         74 	.ds 21
      000184                         75 _cursor::
      000184                         76 	.ds 10
      00018E                         77 _animation_speeds::
      00018E                         78 	.ds 6
      000194                         79 _input_process_prev_input_65536_239:
      000194                         80 	.ds 1
      000195                         81 _main_prev_input_327681_305:
      000195                         82 	.ds 1
                                     83 ;--------------------------------------------------------
                                     84 ; absolute external ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area _DABS (ABS)
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area _HOME
                                     91 	.area _GSINIT
                                     92 	.area _GSFINAL
                                     93 	.area _GSINIT
                                     94 ;src/main.c:587: static UINT8 prev_input = 0;
      000000 21r94r01                95 	ld	hl, #_input_process_prev_input_65536_239
      000003 36 00                   96 	ld	(hl), #0x00
                                     97 ;src/main.c:587: static UINT8 prev_input = 0;
      000005 21r95r01                98 	ld	hl, #_main_prev_input_327681_305
      000008 36 00                   99 	ld	(hl), #0x00
                                    100 ;src/main.c:124: UINT8 flags = FLAG_GAME_STATE_START;
      00000A 21r6Br01               101 	ld	hl, #_flags
      00000D 36 00                  102 	ld	(hl), #0x00
                                    103 ;src/main.c:125: UINT8 settings = SETTING_FOUR_SUIT | 0b00000100;
      00000F 21r6Cr01               104 	ld	hl, #_settings
      000012 36 07                  105 	ld	(hl), #0x07
                                    106 ;src/main.c:127: UINT16 score = 500;
      000014 21r6Dr01               107 	ld	hl, #_score
      000017 36 F4                  108 	ld	(hl), #0xf4
      000019 23                     109 	inc	hl
      00001A 36 01                  110 	ld	(hl), #0x01
                                    111 ;src/main.c:129: struct DynamicMetaSprite dynamic_metasprite = {
      00001C 21r77r01               112 	ld	hl, #(_dynamic_metasprite + 0x0008)
      00001F 36 FF                  113 	ld	(hl), #0xff
      000021 21r78r01               114 	ld	hl, #(_dynamic_metasprite + 0x0009)
      000024 36 00                  115 	ld	(hl), #0x00
                                    116 ;src/main.c:134: struct Cursor cursor = {
      000026 21r84r01               117 	ld	hl, #_cursor
      000029 AF                     118 	xor	a, a
      00002A 22                     119 	ld	(hl+), a
      00002B 77                     120 	ld	(hl), a
      00002C 21r86r01               121 	ld	hl, #(_cursor + 0x0002)
      00002F AF                     122 	xor	a, a
      000030 22                     123 	ld	(hl+), a
      000031 77                     124 	ld	(hl), a
      000032 21r89r01               125 	ld	hl, #(_cursor + 0x0005)
      000035 36 00                  126 	ld	(hl), #0x00
      000037 21r8Ar01               127 	ld	hl, #(_cursor + 0x0006)
      00003A 36 0A                  128 	ld	(hl), #0x0a
      00003C 21r8Br01               129 	ld	hl, #(_cursor + 0x0007)
      00003F 36 00                  130 	ld	(hl), #0x00
      000041 21r8Cr01               131 	ld	hl, #(_cursor + 0x0008)
      000044 36 00                  132 	ld	(hl), #0x00
      000046 21r8Dr01               133 	ld	hl, #(_cursor + 0x0009)
      000049 36 00                  134 	ld	(hl), #0x00
                                    135 ;src/main.c:144: struct AnimationSpeed animation_speeds[3] = {
      00004B 21r8Er01               136 	ld	hl, #_animation_speeds
      00004E 36 10                  137 	ld	(hl), #0x10
      000050 21r8Fr01               138 	ld	hl, #(_animation_speeds + 0x0001)
      000053 36 20                  139 	ld	(hl), #0x20
      000055 21r90r01               140 	ld	hl, #(_animation_speeds + 0x0002)
      000058 36 08                  141 	ld	(hl), #0x08
      00005A 21r91r01               142 	ld	hl, #(_animation_speeds + 0x0003)
      00005D 36 10                  143 	ld	(hl), #0x10
      00005F 21r92r01               144 	ld	hl, #(_animation_speeds + 0x0004)
      000062 36 04                  145 	ld	(hl), #0x04
      000064 21r93r01               146 	ld	hl, #(_animation_speeds + 0x0005)
      000067 36 08                  147 	ld	(hl), #0x08
                                    148 ;--------------------------------------------------------
                                    149 ; Home
                                    150 ;--------------------------------------------------------
                                    151 	.area _HOME
                                    152 	.area _HOME
                                    153 ;--------------------------------------------------------
                                    154 ; code
                                    155 ;--------------------------------------------------------
                                    156 	.area _CODE
                                    157 ;src/main.c:153: void metasprite_2x3_hide(UINT8 sprite)
                                    158 ;	---------------------------------
                                    159 ; Function metasprite_2x3_hide
                                    160 ; ---------------------------------
      000000                        161 _metasprite_2x3_hide::
                                    162 ;src/main.c:160: );
      000000 F8 02                  163 	ldhl	sp,	#2
      000002 46                     164 	ld	b, (hl)
                                    165 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      000003 21r00r00               166 	ld	hl, #___current_metasprite
      000006 36r00                  167 	ld	(hl), #<(_metasprite_same_2x3)
      000008 23                     168 	inc	hl
      000009 36s00                  169 	ld	(hl), #>(_metasprite_same_2x3)
                                    170 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      00000B 21r00r00               171 	ld	hl, #___current_base_tile
      00000E 36 00                  172 	ld	(hl), #0x00
                                    173 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      000010 AF                     174 	xor	a, a
      000011 F5                     175 	push	af
      000012 33                     176 	inc	sp
      000013 AF                     177 	xor	a, a
      000014 F5                     178 	push	af
      000015 33                     179 	inc	sp
      000016 C5                     180 	push	bc
      000017 33                     181 	inc	sp
      000018 CDr00r00               182 	call	___move_metasprite
      00001B E8 03                  183 	add	sp, #3
                                    184 ;src/main.c:160: );
                                    185 ;src/main.c:161: }
      00001D C9                     186 	ret
                                    187 ;src/main.c:164: void init_deck(void)
                                    188 ;	---------------------------------
                                    189 ; Function init_deck
                                    190 ; ---------------------------------
      00001E                        191 _init_deck::
      00001E E8 F0                  192 	add	sp, #-16
                                    193 ;src/main.c:166: Card *card = IDX_PTR(deck, 0);
      000020 01r00r00               194 	ld	bc, #_deck
                                    195 ;src/main.c:171: for (suit = 0; suit < 4u; suit++) {
      000023 AF                     196 	xor	a, a
      000024 F8 0B                  197 	ldhl	sp,	#11
      000026 77                     198 	ld	(hl), a
                                    199 ;src/main.c:172: for (rank = 0; rank < 13u; rank++) {
      000027                        200 00131$:
      000027 F8 0B                  201 	ldhl	sp,	#11
      000029 7E                     202 	ld	a, (hl)
      00002A CB 37                  203 	swap	a
      00002C E6 F0                  204 	and	a, #0xf0
      00002E F8 07                  205 	ldhl	sp,	#7
      000030 77                     206 	ld	(hl), a
      000031 AF                     207 	xor	a, a
      000032 F8 0C                  208 	ldhl	sp,	#12
      000034 77                     209 	ld	(hl), a
                                    210 ;src/main.c:173: for (i = 0; i < 2u; i++) {
      000035                        211 00129$:
      000035 F8 0C                  212 	ldhl	sp,	#12
      000037 7E                     213 	ld	a, (hl)
      000038 F8 07                  214 	ldhl	sp,	#7
      00003A B6                     215 	or	a, (hl)
      00003B 23                     216 	inc	hl
      00003C 77                     217 	ld	(hl), a
      00003D F8 0D                  218 	ldhl	sp,	#13
      00003F 79                     219 	ld	a, c
      000040 22                     220 	ld	(hl+), a
      000041 78                     221 	ld	a, b
      000042 22                     222 	ld	(hl+), a
      000043 36 02                  223 	ld	(hl), #0x02
      000045                        224 00113$:
                                    225 ;src/main.c:174: card->data = rank | (suit << BIT_OFFSET_DATA_SUIT);
                                    226 ;c
      000045 F8 0D                  227 	ldhl	sp,#13
      000047 2A                     228 	ld	a, (hl+)
      000048 5F                     229 	ld	e, a
      000049 56                     230 	ld	d, (hl)
      00004A 21 02 00               231 	ld	hl, #0x0002
      00004D 19                     232 	add	hl, de
      00004E E5                     233 	push	hl
      00004F 7D                     234 	ld	a, l
      000050 F8 0B                  235 	ldhl	sp,	#11
      000052 77                     236 	ld	(hl), a
      000053 E1                     237 	pop	hl
      000054 7C                     238 	ld	a, h
      000055 F8 0A                  239 	ldhl	sp,	#10
      000057 32                     240 	ld	(hl-), a
      000058 2A                     241 	ld	a, (hl+)
      000059 5F                     242 	ld	e, a
      00005A 3A                     243 	ld	a, (hl-)
      00005B 57                     244 	ld	d, a
      00005C 2B                     245 	dec	hl
      00005D 7E                     246 	ld	a, (hl)
      00005E 12                     247 	ld	(de), a
                                    248 ;src/main.c:175: card++;
                                    249 ;c
      00005F F8 0D                  250 	ldhl	sp,#13
      000061 2A                     251 	ld	a, (hl+)
      000062 5F                     252 	ld	e, a
      000063 56                     253 	ld	d, (hl)
      000064 21 03 00               254 	ld	hl, #0x0003
      000067 19                     255 	add	hl, de
      000068 E5                     256 	push	hl
      000069 7D                     257 	ld	a, l
      00006A F8 0F                  258 	ldhl	sp,	#15
      00006C 77                     259 	ld	(hl), a
      00006D E1                     260 	pop	hl
      00006E 7C                     261 	ld	a, h
      00006F F8 0E                  262 	ldhl	sp,	#14
      000071 22                     263 	ld	(hl+), a
                                    264 ;src/main.c:173: for (i = 0; i < 2u; i++) {
      000072 35                     265 	dec	(hl)
      000073 20 D0                  266 	jr	NZ, 00113$
                                    267 ;src/main.c:172: for (rank = 0; rank < 13u; rank++) {
      000075 2B                     268 	dec	hl
      000076 2B                     269 	dec	hl
      000077 2A                     270 	ld	a, (hl+)
      000078 4F                     271 	ld	c, a
      000079 3A                     272 	ld	a, (hl-)
      00007A 47                     273 	ld	b, a
      00007B 2B                     274 	dec	hl
      00007C 34                     275 	inc	(hl)
      00007D 7E                     276 	ld	a, (hl)
      00007E D6 0D                  277 	sub	a, #0x0d
      000080 38 B3                  278 	jr	C, 00129$
                                    279 ;src/main.c:171: for (suit = 0; suit < 4u; suit++) {
      000082 2B                     280 	dec	hl
      000083 34                     281 	inc	(hl)
      000084 7E                     282 	ld	a, (hl)
      000085 D6 04                  283 	sub	a, #0x04
      000087 38 9E                  284 	jr	C, 00131$
                                    285 ;src/main.c:180: card = IDX_PTR(deck, 103u);
      000089 23                     286 	inc	hl
      00008A 23                     287 	inc	hl
      00008B 3Er35                  288 	ld	a, #<((_deck + 0x0135))
      00008D 22                     289 	ld	(hl+), a
      00008E 36s01                  290 	ld	(hl), #>((_deck + 0x0135))
                                    291 ;src/main.c:181: for (i = 103u; i; i--) {
      000090 F8 02                  292 	ldhl	sp,	#2
      000092 7D                     293 	ld	a, l
      000093 54                     294 	ld	d, h
      000094 F8 07                  295 	ldhl	sp,	#7
      000096 22                     296 	ld	(hl+), a
      000097 7A                     297 	ld	a, d
      000098 32                     298 	ld	(hl-), a
      000099 2A                     299 	ld	a, (hl+)
      00009A 5E                     300 	ld	e, (hl)
      00009B 23                     301 	inc	hl
      00009C 22                     302 	ld	(hl+), a
      00009D 73                     303 	ld	(hl), e
      00009E F8 0F                  304 	ldhl	sp,	#15
      0000A0 36 67                  305 	ld	(hl), #0x67
      0000A2                        306 00118$:
                                    307 ;src/main.c:182: Card *swap = IDX_PTR(deck, (UINT8)rand() % i);
      0000A2 CDr00r00               308 	call	_rand
      0000A5 7B                     309 	ld	a, e
      0000A6 F8 0F                  310 	ldhl	sp,	#15
      0000A8 66                     311 	ld	h, (hl)
      0000A9 E5                     312 	push	hl
      0000AA 33                     313 	inc	sp
      0000AB F5                     314 	push	af
      0000AC 33                     315 	inc	sp
      0000AD CDr00r00               316 	call	__moduchar
      0000B0 E8 02                  317 	add	sp, #2
      0000B2 4B                     318 	ld	c, e
      0000B3 06 00                  319 	ld	b, #0x00
      0000B5 69                     320 	ld	l, c
      0000B6 60                     321 	ld	h, b
      0000B7 29                     322 	add	hl, hl
      0000B8 09                     323 	add	hl, bc
      0000B9 7D                     324 	ld	a, l
      0000BA C6r00                  325 	add	a, #<(_deck)
      0000BC 4F                     326 	ld	c, a
      0000BD 7C                     327 	ld	a, h
      0000BE CEs00                  328 	adc	a, #>(_deck)
      0000C0 47                     329 	ld	b, a
      0000C1 F8 0B                  330 	ldhl	sp,	#11
      0000C3 79                     331 	ld	a, c
      0000C4 22                     332 	ld	(hl+), a
                                    333 ;src/main.c:184: temp = *card;
      0000C5 78                     334 	ld	a, b
      0000C6 22                     335 	ld	(hl+), a
      0000C7 2A                     336 	ld	a, (hl+)
      0000C8 5F                     337 	ld	e, a
      0000C9 56                     338 	ld	d, (hl)
      0000CA F8 07                  339 	ldhl	sp,#7
      0000CC 2A                     340 	ld	a, (hl+)
      0000CD 4F                     341 	ld	c, a
      0000CE 46                     342 	ld	b, (hl)
      0000CF 21 03 00               343 	ld	hl, #0x0003
      0000D2 E5                     344 	push	hl
      0000D3 D5                     345 	push	de
      0000D4 C5                     346 	push	bc
      0000D5 CDr00r00               347 	call	___memcpy
      0000D8 E8 06                  348 	add	sp, #6
                                    349 ;src/main.c:185: *card = *swap;
      0000DA F8 0B                  350 	ldhl	sp,#11
      0000DC 2A                     351 	ld	a, (hl+)
      0000DD 5F                     352 	ld	e, a
      0000DE 2A                     353 	ld	a, (hl+)
      0000DF 57                     354 	ld	d, a
      0000E0 2A                     355 	ld	a, (hl+)
      0000E1 4F                     356 	ld	c, a
      0000E2 46                     357 	ld	b, (hl)
      0000E3 21 03 00               358 	ld	hl, #0x0003
      0000E6 E5                     359 	push	hl
      0000E7 D5                     360 	push	de
      0000E8 C5                     361 	push	bc
      0000E9 CDr00r00               362 	call	___memcpy
      0000EC E8 06                  363 	add	sp, #6
                                    364 ;src/main.c:186: *swap = temp;
      0000EE F8 09                  365 	ldhl	sp,#9
      0000F0 2A                     366 	ld	a, (hl+)
      0000F1 5F                     367 	ld	e, a
      0000F2 2A                     368 	ld	a, (hl+)
      0000F3 57                     369 	ld	d, a
      0000F4 2A                     370 	ld	a, (hl+)
      0000F5 4F                     371 	ld	c, a
      0000F6 46                     372 	ld	b, (hl)
      0000F7 21 03 00               373 	ld	hl, #0x0003
      0000FA E5                     374 	push	hl
      0000FB D5                     375 	push	de
      0000FC C5                     376 	push	bc
      0000FD CDr00r00               377 	call	___memcpy
      000100 E8 06                  378 	add	sp, #6
                                    379 ;src/main.c:187: card--;
      000102 F8 0D                  380 	ldhl	sp,#13
      000104 2A                     381 	ld	a, (hl+)
      000105 5F                     382 	ld	e, a
      000106 56                     383 	ld	d, (hl)
      000107 21 03 00               384 	ld	hl, #0x0003
      00010A 7B                     385 	ld	a, e
      00010B 95                     386 	sub	a, l
      00010C 5F                     387 	ld	e, a
      00010D 7A                     388 	ld	a, d
      00010E 9C                     389 	sbc	a, h
      00010F F8 0E                  390 	ldhl	sp,	#14
      000111 32                     391 	ld	(hl-), a
                                    392 ;src/main.c:181: for (i = 103u; i; i--) {
      000112 7B                     393 	ld	a, e
      000113 22                     394 	ld	(hl+), a
      000114 23                     395 	inc	hl
      000115 35                     396 	dec	(hl)
      000116 20 8A                  397 	jr	NZ, 00118$
                                    398 ;src/main.c:190: card = IDX_PTR(deck, 0);
      000118 01r00r00               399 	ld	bc, #_deck
                                    400 ;src/main.c:191: for (i = 0; i < 44u; i++) {
      00011B AF                     401 	xor	a, a
      00011C 77                     402 	ld	(hl), a
      00011D                        403 00120$:
                                    404 ;src/main.c:192: card->next_card = IDX_PTR(deck, i + 10u);
      00011D F8 0F                  405 	ldhl	sp,	#15
      00011F 5E                     406 	ld	e, (hl)
      000120 16 00                  407 	ld	d, #0x00
      000122 6B                     408 	ld	l, e
      000123 62                     409 	ld	h, d
      000124 29                     410 	add	hl, hl
      000125 19                     411 	add	hl, de
      000126 11r00r00               412 	ld	de, #_deck
      000129 19                     413 	add	hl, de
      00012A 11 1E 00               414 	ld	de, #0x001e
      00012D 19                     415 	add	hl, de
      00012E 5D                     416 	ld	e, l
      00012F 54                     417 	ld	d, h
      000130 69                     418 	ld	l, c
      000131 60                     419 	ld	h, b
      000132 7B                     420 	ld	a, e
      000133 22                     421 	ld	(hl+), a
      000134 72                     422 	ld	(hl), d
                                    423 ;src/main.c:193: card++;
      000135 03                     424 	inc	bc
      000136 03                     425 	inc	bc
      000137 03                     426 	inc	bc
                                    427 ;src/main.c:191: for (i = 0; i < 44u; i++) {
      000138 F8 0F                  428 	ldhl	sp,	#15
      00013A 34                     429 	inc	(hl)
      00013B 7E                     430 	ld	a, (hl)
      00013C D6 2C                  431 	sub	a, #0x2c
      00013E 38 DD                  432 	jr	C, 00120$
      000140 5E                     433 	ld	e, (hl)
      000141                        434 00123$:
                                    435 ;src/main.c:195: for (; i < 104u; i++) {
      000141 7B                     436 	ld	a, e
      000142 D6 68                  437 	sub	a, #0x68
      000144 30 11                  438 	jr	NC, 00106$
                                    439 ;src/main.c:196: card->data |= BITMASK_DATA_VISIBLE;
      000146 69                     440 	ld	l, c
      000147 60                     441 	ld	h, b
      000148 23                     442 	inc	hl
      000149 23                     443 	inc	hl
      00014A CB F6                  444 	set	6, (hl)
                                    445 ;src/main.c:197: card->next_card = NULL;
      00014C 69                     446 	ld	l, c
      00014D 60                     447 	ld	h, b
      00014E AF                     448 	xor	a, a
      00014F 22                     449 	ld	(hl+), a
      000150 77                     450 	ld	(hl), a
                                    451 ;src/main.c:198: card++;
      000151 03                     452 	inc	bc
      000152 03                     453 	inc	bc
      000153 03                     454 	inc	bc
                                    455 ;src/main.c:195: for (; i < 104u; i++) {
      000154 1C                     456 	inc	e
      000155 18 EA                  457 	jr	00123$
      000157                        458 00106$:
                                    459 ;src/main.c:201: card = IDX_PTR(deck, 0);
      000157 F8 0B                  460 	ldhl	sp,	#11
      000159 3Er00                  461 	ld	a, #<(_deck)
      00015B 22                     462 	ld	(hl+), a
                                    463 ;src/main.c:202: Pile *pile = IDX_PTR(piles, 0);
      00015C 3Es00                  464 	ld	a, #>(_deck)
      00015E 22                     465 	ld	(hl+), a
      00015F 3Er38                  466 	ld	a, #<(_piles)
      000161 22                     467 	ld	(hl+), a
      000162 36s01                  468 	ld	(hl), #>(_piles)
                                    469 ;src/main.c:203: for (i = 0; i < 10; i++) {
      000164 AF                     470 	xor	a, a
      000165 23                     471 	inc	hl
      000166 77                     472 	ld	(hl), a
      000167                        473 00125$:
                                    474 ;src/main.c:204: pile->base = card;
      000167 F8 0D                  475 	ldhl	sp,#13
      000169 2A                     476 	ld	a, (hl+)
      00016A 5F                     477 	ld	e, a
      00016B 56                     478 	ld	d, (hl)
      00016C F8 0B                  479 	ldhl	sp,	#11
      00016E 7E                     480 	ld	a, (hl)
      00016F 12                     481 	ld	(de), a
      000170 13                     482 	inc	de
      000171 23                     483 	inc	hl
      000172 7E                     484 	ld	a, (hl)
      000173 12                     485 	ld	(de), a
                                    486 ;src/main.c:206: pile->top = IDX_PTR(deck, 50u + i);
                                    487 ;c
      000174 23                     488 	inc	hl
      000175 2A                     489 	ld	a, (hl+)
      000176 5F                     490 	ld	e, a
      000177 56                     491 	ld	d, (hl)
      000178 21 02 00               492 	ld	hl, #0x0002
      00017B 19                     493 	add	hl, de
      00017C E5                     494 	push	hl
      00017D 7D                     495 	ld	a, l
      00017E F8 07                  496 	ldhl	sp,	#7
      000180 77                     497 	ld	(hl), a
      000181 E1                     498 	pop	hl
      000182 7C                     499 	ld	a, h
      000183 F8 06                  500 	ldhl	sp,	#6
      000185 77                     501 	ld	(hl), a
      000186 F8 0F                  502 	ldhl	sp,	#15
      000188 4E                     503 	ld	c, (hl)
      000189 06 00                  504 	ld	b, #0x00
      00018B 69                     505 	ld	l, c
      00018C 60                     506 	ld	h, b
      00018D 29                     507 	add	hl, hl
      00018E 09                     508 	add	hl, bc
      00018F 33                     509 	inc	sp
      000190 33                     510 	inc	sp
      000191 E5                     511 	push	hl
                                    512 ;src/main.c:207: pile->height = 6u;
                                    513 ;c
      000192 F8 0D                  514 	ldhl	sp,#13
      000194 2A                     515 	ld	a, (hl+)
      000195 5F                     516 	ld	e, a
      000196 56                     517 	ld	d, (hl)
      000197 21 04 00               518 	ld	hl, #0x0004
      00019A 19                     519 	add	hl, de
      00019B E5                     520 	push	hl
      00019C 7D                     521 	ld	a, l
      00019D F8 09                  522 	ldhl	sp,	#9
      00019F 77                     523 	ld	(hl), a
      0001A0 E1                     524 	pop	hl
      0001A1 7C                     525 	ld	a, h
      0001A2 F8 08                  526 	ldhl	sp,	#8
      0001A4 77                     527 	ld	(hl), a
                                    528 ;src/main.c:205: if (i < 4u) {
      0001A5 F8 0F                  529 	ldhl	sp,	#15
      0001A7 7E                     530 	ld	a, (hl)
      0001A8 D6 04                  531 	sub	a, #0x04
      0001AA 30 26                  532 	jr	NC, 00108$
                                    533 ;src/main.c:206: pile->top = IDX_PTR(deck, 50u + i);
                                    534 ;c
      0001AC D1                     535 	pop	de
      0001AD D5                     536 	push	de
      0001AE 21r96r00               537 	ld	hl, #(_deck + 0x0096)
      0001B1 19                     538 	add	hl, de
      0001B2 E5                     539 	push	hl
      0001B3 7D                     540 	ld	a, l
      0001B4 F8 0B                  541 	ldhl	sp,	#11
      0001B6 77                     542 	ld	(hl), a
      0001B7 E1                     543 	pop	hl
      0001B8 7C                     544 	ld	a, h
      0001B9 F8 0A                  545 	ldhl	sp,	#10
      0001BB 77                     546 	ld	(hl), a
      0001BC F8 05                  547 	ldhl	sp,#5
      0001BE 2A                     548 	ld	a, (hl+)
      0001BF 5F                     549 	ld	e, a
      0001C0 56                     550 	ld	d, (hl)
      0001C1 F8 09                  551 	ldhl	sp,	#9
      0001C3 7E                     552 	ld	a, (hl)
      0001C4 12                     553 	ld	(de), a
      0001C5 13                     554 	inc	de
      0001C6 23                     555 	inc	hl
      0001C7 7E                     556 	ld	a, (hl)
      0001C8 12                     557 	ld	(de), a
                                    558 ;src/main.c:207: pile->height = 6u;
      0001C9 F8 07                  559 	ldhl	sp,	#7
      0001CB 2A                     560 	ld	a, (hl+)
      0001CC 66                     561 	ld	h, (hl)
      0001CD 6F                     562 	ld	l, a
      0001CE 36 06                  563 	ld	(hl), #0x06
      0001D0 18 17                  564 	jr	00109$
      0001D2                        565 00108$:
                                    566 ;src/main.c:209: pile->top = IDX_PTR(deck, 40u + i);
                                    567 ;c
      0001D2 11r78r00               568 	ld	de, #(_deck + 0x0078)
      0001D5 E1                     569 	pop	hl
      0001D6 E5                     570 	push	hl
      0001D7 19                     571 	add	hl, de
      0001D8 4D                     572 	ld	c, l
      0001D9 44                     573 	ld	b, h
      0001DA F8 05                  574 	ldhl	sp,	#5
      0001DC 2A                     575 	ld	a, (hl+)
      0001DD 66                     576 	ld	h, (hl)
      0001DE 6F                     577 	ld	l, a
      0001DF 79                     578 	ld	a, c
      0001E0 22                     579 	ld	(hl+), a
      0001E1 70                     580 	ld	(hl), b
                                    581 ;src/main.c:210: pile->height = 5u;
      0001E2 F8 07                  582 	ldhl	sp,	#7
      0001E4 2A                     583 	ld	a, (hl+)
      0001E5 66                     584 	ld	h, (hl)
      0001E6 6F                     585 	ld	l, a
      0001E7 36 05                  586 	ld	(hl), #0x05
      0001E9                        587 00109$:
                                    588 ;src/main.c:213: card++;
                                    589 ;c
      0001E9 F8 0B                  590 	ldhl	sp,#11
      0001EB 2A                     591 	ld	a, (hl+)
      0001EC 5F                     592 	ld	e, a
      0001ED 56                     593 	ld	d, (hl)
      0001EE 21 03 00               594 	ld	hl, #0x0003
      0001F1 19                     595 	add	hl, de
      0001F2 E5                     596 	push	hl
      0001F3 7D                     597 	ld	a, l
      0001F4 F8 0D                  598 	ldhl	sp,	#13
      0001F6 77                     599 	ld	(hl), a
      0001F7 E1                     600 	pop	hl
      0001F8 7C                     601 	ld	a, h
      0001F9 F8 0C                  602 	ldhl	sp,	#12
                                    603 ;src/main.c:214: pile++;
                                    604 ;c
      0001FB 22                     605 	ld	(hl+), a
      0001FC 2A                     606 	ld	a, (hl+)
      0001FD 5F                     607 	ld	e, a
      0001FE 56                     608 	ld	d, (hl)
      0001FF 21 05 00               609 	ld	hl, #0x0005
      000202 19                     610 	add	hl, de
      000203 E5                     611 	push	hl
      000204 7D                     612 	ld	a, l
      000205 F8 0F                  613 	ldhl	sp,	#15
      000207 77                     614 	ld	(hl), a
      000208 E1                     615 	pop	hl
      000209 7C                     616 	ld	a, h
      00020A F8 0E                  617 	ldhl	sp,	#14
                                    618 ;src/main.c:203: for (i = 0; i < 10; i++) {
      00020C 22                     619 	ld	(hl+), a
      00020D 34                     620 	inc	(hl)
      00020E 7E                     621 	ld	a, (hl)
      00020F D6 0A                  622 	sub	a, #0x0a
      000211 DAr67r01               623 	jp	C, 00125$
                                    624 ;src/main.c:217: top_card_idx = 54u;
      000214 21r6Ar01               625 	ld	hl, #_top_card_idx
      000217 36 36                  626 	ld	(hl), #0x36
                                    627 ;src/main.c:218: }
      000219 E8 10                  628 	add	sp, #16
      00021B C9                     629 	ret
                                    630 ;src/main.c:220: void dynamic_metasprite_end(void)
                                    631 ;	---------------------------------
                                    632 ; Function dynamic_metasprite_end
                                    633 ; ---------------------------------
      00021C                        634 _dynamic_metasprite_end::
                                    635 ;src/main.c:222: metasprite_2x3_hide(SPRITE_DYNAMIC);
      00021C AF                     636 	xor	a, a
      00021D F5                     637 	push	af
      00021E 33                     638 	inc	sp
      00021F CDr00r00               639 	call	_metasprite_2x3_hide
      000222 33                     640 	inc	sp
                                    641 ;src/main.c:223: flags &= ~FLAG_PLAYING_ANIMATION;
      000223 21r6Br01               642 	ld	hl, #_flags
      000226 7E                     643 	ld	a, (hl)
      000227 E6 FB                  644 	and	a, #0xfb
      000229 77                     645 	ld	(hl), a
                                    646 ;src/main.c:224: dynamic_metasprite.target_frames = -1;
      00022A 21r77r01               647 	ld	hl, #(_dynamic_metasprite + 0x0008)
      00022D 36 FF                  648 	ld	(hl), #0xff
                                    649 ;src/main.c:225: }
      00022F C9                     650 	ret
                                    651 ;src/main.c:233: void draw_card_top(const UINT8 x, const UINT8 y, const UINT8 card_data)
                                    652 ;	---------------------------------
                                    653 ; Function draw_card_top
                                    654 ; ---------------------------------
      000230                        655 _draw_card_top::
                                    656 ;src/main.c:235: if (VISIBLE(card_data)) {
      000230 F8 04                  657 	ldhl	sp,	#4
                                    658 ;src/main.c:237: set_bkg_tile_xy(x + 1u, y, SUIT(card_data) + OFFSET_BKG_CARD + OFFSET_CARD_SUIT);
      000232 3A                     659 	ld	a, (hl-)
      000233 4F                     660 	ld	c, a
      000234 2B                     661 	dec	hl
      000235 46                     662 	ld	b, (hl)
      000236 04                     663 	inc	b
                                    664 ;src/main.c:235: if (VISIBLE(card_data)) {
      000237 CB 71                  665 	bit	6, c
      000239 28 3F                  666 	jr	Z, 00102$
                                    667 ;src/main.c:236: set_bkg_tile_xy(x, y, RANK(card_data) + OFFSET_BKG_CARD + OFFSET_CARD_RANK);
      00023B 79                     668 	ld	a, c
      00023C E6 0F                  669 	and	a, #0x0f
      00023E C6 80                  670 	add	a, #0x80
      000240 F5                     671 	push	af
      000241 33                     672 	inc	sp
      000242 F8 04                  673 	ldhl	sp,	#4
      000244 7E                     674 	ld	a, (hl)
      000245 F5                     675 	push	af
      000246 33                     676 	inc	sp
      000247 2B                     677 	dec	hl
      000248 7E                     678 	ld	a, (hl)
      000249 F5                     679 	push	af
      00024A 33                     680 	inc	sp
      00024B CDr00r00               681 	call	_set_bkg_tile_xy
      00024E E8 03                  682 	add	sp, #3
                                    683 ;src/main.c:237: set_bkg_tile_xy(x + 1u, y, SUIT(card_data) + OFFSET_BKG_CARD + OFFSET_CARD_SUIT);
      000250 79                     684 	ld	a, c
      000251 0E 00                  685 	ld	c, #0x00
      000253 E6 30                  686 	and	a, #0x30
      000255 5F                     687 	ld	e, a
      000256 16 00                  688 	ld	d, #0x00
      000258 CB 2A                  689 	sra	d
      00025A CB 1B                  690 	rr	e
      00025C CB 2A                  691 	sra	d
      00025E CB 1B                  692 	rr	e
      000260 CB 2A                  693 	sra	d
      000262 CB 1B                  694 	rr	e
      000264 CB 2A                  695 	sra	d
      000266 CB 1B                  696 	rr	e
      000268 7B                     697 	ld	a, e
      000269 C6 8D                  698 	add	a, #0x8d
      00026B F5                     699 	push	af
      00026C 33                     700 	inc	sp
      00026D F8 04                  701 	ldhl	sp,	#4
      00026F 7E                     702 	ld	a, (hl)
      000270 F5                     703 	push	af
      000271 33                     704 	inc	sp
      000272 C5                     705 	push	bc
      000273 33                     706 	inc	sp
      000274 CDr00r00               707 	call	_set_bkg_tile_xy
      000277 E8 03                  708 	add	sp, #3
      000279 C9                     709 	ret
      00027A                        710 00102$:
                                    711 ;src/main.c:239: set_bkg_tile_xy(x, y, OFFSET_BKG_CARD + OFFSET_CARD_BACK);
      00027A 3E 97                  712 	ld	a, #0x97
      00027C F5                     713 	push	af
      00027D 33                     714 	inc	sp
      00027E F8 04                  715 	ldhl	sp,	#4
      000280 7E                     716 	ld	a, (hl)
      000281 F5                     717 	push	af
      000282 33                     718 	inc	sp
      000283 2B                     719 	dec	hl
      000284 7E                     720 	ld	a, (hl)
      000285 F5                     721 	push	af
      000286 33                     722 	inc	sp
      000287 CDr00r00               723 	call	_set_bkg_tile_xy
      00028A E8 03                  724 	add	sp, #3
                                    725 ;src/main.c:240: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_CARD + OFFSET_CARD_BACK + 1u);
      00028C 3E 98                  726 	ld	a, #0x98
      00028E F5                     727 	push	af
      00028F 33                     728 	inc	sp
      000290 F8 04                  729 	ldhl	sp,	#4
      000292 7E                     730 	ld	a, (hl)
      000293 F5                     731 	push	af
      000294 33                     732 	inc	sp
      000295 C5                     733 	push	bc
      000296 33                     734 	inc	sp
      000297 CDr00r00               735 	call	_set_bkg_tile_xy
      00029A E8 03                  736 	add	sp, #3
                                    737 ;src/main.c:242: }
      00029C C9                     738 	ret
                                    739 ;src/main.c:244: void draw_card_bottom(const UINT8 x, const UINT8 y, const UINT8 card_data)
                                    740 ;	---------------------------------
                                    741 ; Function draw_card_bottom
                                    742 ; ---------------------------------
      00029D                        743 _draw_card_bottom::
                                    744 ;src/main.c:246: set_bkg_tile_xy(x, y, OFFSET_BKG_CARD + OFFSET_CARD_BLANK + 2u);
      00029D 3E 93                  745 	ld	a, #0x93
      00029F F5                     746 	push	af
      0002A0 33                     747 	inc	sp
      0002A1 F8 04                  748 	ldhl	sp,	#4
      0002A3 7E                     749 	ld	a, (hl)
      0002A4 F5                     750 	push	af
      0002A5 33                     751 	inc	sp
      0002A6 2B                     752 	dec	hl
      0002A7 7E                     753 	ld	a, (hl)
      0002A8 F5                     754 	push	af
      0002A9 33                     755 	inc	sp
      0002AA CDr00r00               756 	call	_set_bkg_tile_xy
      0002AD E8 03                  757 	add	sp, #3
                                    758 ;src/main.c:247: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_CARD + OFFSET_CARD_BLANK + 3u);
      0002AF F8 02                  759 	ldhl	sp,	#2
      0002B1 4E                     760 	ld	c, (hl)
      0002B2 0C                     761 	inc	c
      0002B3 3E 94                  762 	ld	a, #0x94
      0002B5 F5                     763 	push	af
      0002B6 33                     764 	inc	sp
      0002B7 23                     765 	inc	hl
      0002B8 46                     766 	ld	b, (hl)
      0002B9 C5                     767 	push	bc
      0002BA CDr00r00               768 	call	_set_bkg_tile_xy
      0002BD E8 03                  769 	add	sp, #3
                                    770 ;src/main.c:248: set_bkg_tile_xy(x, y+ 1u, SUIT(card_data) + OFFSET_BKG_CARD + OFFSET_CARD_SUIT_ROT);
      0002BF F8 04                  771 	ldhl	sp,	#4
      0002C1 7E                     772 	ld	a, (hl)
      0002C2 E6 30                  773 	and	a, #0x30
      0002C4 5F                     774 	ld	e, a
      0002C5 16 00                  775 	ld	d, #0x00
      0002C7 CB 2A                  776 	sra	d
      0002C9 CB 1B                  777 	rr	e
      0002CB CB 2A                  778 	sra	d
      0002CD CB 1B                  779 	rr	e
      0002CF CB 2A                  780 	sra	d
      0002D1 CB 1B                  781 	rr	e
      0002D3 CB 2A                  782 	sra	d
      0002D5 CB 1B                  783 	rr	e
      0002D7 7B                     784 	ld	a, e
      0002D8 C6 AA                  785 	add	a, #0xaa
      0002DA 2B                     786 	dec	hl
      0002DB 46                     787 	ld	b, (hl)
      0002DC 04                     788 	inc	b
      0002DD F5                     789 	push	af
      0002DE 33                     790 	inc	sp
      0002DF C5                     791 	push	bc
      0002E0 33                     792 	inc	sp
      0002E1 2B                     793 	dec	hl
      0002E2 7E                     794 	ld	a, (hl)
      0002E3 F5                     795 	push	af
      0002E4 33                     796 	inc	sp
      0002E5 CDr00r00               797 	call	_set_bkg_tile_xy
      0002E8 E8 03                  798 	add	sp, #3
                                    799 ;src/main.c:249: set_bkg_tile_xy(x + 1u, y+ 1u, RANK(card_data) + OFFSET_BKG_CARD + OFFSET_CARD_RANK_ROT);
      0002EA F8 04                  800 	ldhl	sp,	#4
      0002EC 7E                     801 	ld	a, (hl)
      0002ED E6 0F                  802 	and	a, #0x0f
      0002EF C6 9D                  803 	add	a, #0x9d
      0002F1 F5                     804 	push	af
      0002F2 33                     805 	inc	sp
      0002F3 C5                     806 	push	bc
      0002F4 CDr00r00               807 	call	_set_bkg_tile_xy
      0002F7 E8 03                  808 	add	sp, #3
                                    809 ;src/main.c:250: }
      0002F9 C9                     810 	ret
                                    811 ;src/main.c:258: void draw_pile(Card *card, UINT8 pile_idx, UINT8 height)
                                    812 ;	---------------------------------
                                    813 ; Function draw_pile
                                    814 ; ---------------------------------
      0002FA                        815 _draw_pile::
      0002FA E8 FD                  816 	add	sp, #-3
                                    817 ;src/main.c:260: pile_idx <<= 1;
      0002FC F8 07                  818 	ldhl	sp,	#7
      0002FE 7E                     819 	ld	a, (hl)
      0002FF 87                     820 	add	a, a
                                    821 ;src/main.c:261: height += 3u;
      000300 22                     822 	ld	(hl+), a
      000301 34                     823 	inc	(hl)
      000302 34                     824 	inc	(hl)
      000303 34                     825 	inc	(hl)
                                    826 ;src/main.c:262: if (!card)
      000304 2B                     827 	dec	hl
      000305 2B                     828 	dec	hl
      000306 3A                     829 	ld	a, (hl-)
      000307 B6                     830 	or	a, (hl)
                                    831 ;src/main.c:263: return;
                                    832 ;src/main.c:264: while (1) {
      000308 28 59                  833 	jr	Z, 00108$
      00030A F8 08                  834 	ldhl	sp,	#8
      00030C 7E                     835 	ld	a, (hl)
      00030D F8 00                  836 	ldhl	sp,	#0
      00030F 77                     837 	ld	(hl), a
      000310                        838 00106$:
                                    839 ;src/main.c:265: draw_card_top(pile_idx, height, card->data);
      000310 F8 05                  840 	ldhl	sp,	#5
      000312 2A                     841 	ld	a, (hl+)
      000313 5E                     842 	ld	e, (hl)
      000314 F8 01                  843 	ldhl	sp,	#1
      000316 22                     844 	ld	(hl+), a
      000317 7B                     845 	ld	a, e
      000318 32                     846 	ld	(hl-), a
      000319 2A                     847 	ld	a, (hl+)
      00031A 4F                     848 	ld	c, a
      00031B 46                     849 	ld	b, (hl)
      00031C 03                     850 	inc	bc
      00031D 03                     851 	inc	bc
      00031E 0A                     852 	ld	a, (bc)
      00031F C5                     853 	push	bc
      000320 F5                     854 	push	af
      000321 33                     855 	inc	sp
      000322 2B                     856 	dec	hl
      000323 2B                     857 	dec	hl
      000324 7E                     858 	ld	a, (hl)
      000325 F5                     859 	push	af
      000326 33                     860 	inc	sp
      000327 F8 0B                  861 	ldhl	sp,	#11
      000329 7E                     862 	ld	a, (hl)
      00032A F5                     863 	push	af
      00032B 33                     864 	inc	sp
      00032C CDr30r02               865 	call	_draw_card_top
      00032F E8 03                  866 	add	sp, #3
      000331 C1                     867 	pop	bc
                                    868 ;src/main.c:266: if (!card->next_card) {
      000332 F8 01                  869 	ldhl	sp,#1
      000334 2A                     870 	ld	a, (hl+)
      000335 5F                     871 	ld	e, a
      000336 56                     872 	ld	d, (hl)
      000337 1A                     873 	ld	a, (de)
      000338 2B                     874 	dec	hl
      000339 22                     875 	ld	(hl+), a
      00033A 13                     876 	inc	de
      00033B 1A                     877 	ld	a, (de)
                                    878 ;src/main.c:267: draw_card_bottom(pile_idx, height + 1u, card->data);
      00033C 32                     879 	ld	(hl-), a
      00033D 2B                     880 	dec	hl
      00033E 56                     881 	ld	d, (hl)
      00033F 14                     882 	inc	d
                                    883 ;src/main.c:266: if (!card->next_card) {
      000340 23                     884 	inc	hl
      000341 23                     885 	inc	hl
      000342 3A                     886 	ld	a, (hl-)
      000343 B6                     887 	or	a, (hl)
      000344 20 11                  888 	jr	NZ, 00104$
                                    889 ;src/main.c:267: draw_card_bottom(pile_idx, height + 1u, card->data);
      000346 0A                     890 	ld	a, (bc)
      000347 F5                     891 	push	af
      000348 33                     892 	inc	sp
      000349 D5                     893 	push	de
      00034A 33                     894 	inc	sp
      00034B F8 09                  895 	ldhl	sp,	#9
      00034D 7E                     896 	ld	a, (hl)
      00034E F5                     897 	push	af
      00034F 33                     898 	inc	sp
      000350 CDr9Dr02               899 	call	_draw_card_bottom
      000353 E8 03                  900 	add	sp, #3
                                    901 ;src/main.c:268: break;
      000355 18 0C                  902 	jr	00108$
      000357                        903 00104$:
                                    904 ;src/main.c:270: height++;
      000357 F8 00                  905 	ldhl	sp,	#0
                                    906 ;src/main.c:271: card = card->next_card;
      000359 7A                     907 	ld	a, d
      00035A 22                     908 	ld	(hl+), a
      00035B 2A                     909 	ld	a, (hl+)
      00035C 5E                     910 	ld	e, (hl)
      00035D F8 05                  911 	ldhl	sp,	#5
      00035F 22                     912 	ld	(hl+), a
      000360 73                     913 	ld	(hl), e
      000361 18 AD                  914 	jr	00106$
      000363                        915 00108$:
                                    916 ;src/main.c:273: }
      000363 E8 03                  917 	add	sp, #3
      000365 C9                     918 	ret
                                    919 ;src/main.c:275: void draw_sequential_card(const UINT8 x, const UINT8 y, const UINT8 bkg_offset)
                                    920 ;	---------------------------------
                                    921 ; Function draw_sequential_card
                                    922 ; ---------------------------------
      000366                        923 _draw_sequential_card::
                                    924 ;src/main.c:277: set_bkg_tile_xy(x, y, bkg_offset);
      000366 F8 04                  925 	ldhl	sp,	#4
      000368 7E                     926 	ld	a, (hl)
      000369 F5                     927 	push	af
      00036A 33                     928 	inc	sp
      00036B 2B                     929 	dec	hl
      00036C 7E                     930 	ld	a, (hl)
      00036D F5                     931 	push	af
      00036E 33                     932 	inc	sp
      00036F 2B                     933 	dec	hl
      000370 7E                     934 	ld	a, (hl)
      000371 F5                     935 	push	af
      000372 33                     936 	inc	sp
      000373 CDr00r00               937 	call	_set_bkg_tile_xy
      000376 E8 03                  938 	add	sp, #3
                                    939 ;src/main.c:278: set_bkg_tile_xy(x + 1u, y, bkg_offset + 1u);
      000378 F8 04                  940 	ldhl	sp,	#4
      00037A 7E                     941 	ld	a, (hl)
      00037B 3C                     942 	inc	a
      00037C 2B                     943 	dec	hl
      00037D 2B                     944 	dec	hl
      00037E 4E                     945 	ld	c, (hl)
      00037F 0C                     946 	inc	c
      000380 F5                     947 	push	af
      000381 33                     948 	inc	sp
      000382 23                     949 	inc	hl
      000383 46                     950 	ld	b, (hl)
      000384 C5                     951 	push	bc
      000385 CDr00r00               952 	call	_set_bkg_tile_xy
      000388 E8 03                  953 	add	sp, #3
                                    954 ;src/main.c:279: set_bkg_tile_xy(x, y + 1u, bkg_offset + 2u);
      00038A F8 04                  955 	ldhl	sp,	#4
      00038C 7E                     956 	ld	a, (hl)
      00038D 3C                     957 	inc	a
      00038E 3C                     958 	inc	a
      00038F 2B                     959 	dec	hl
      000390 46                     960 	ld	b, (hl)
      000391 04                     961 	inc	b
      000392 F5                     962 	push	af
      000393 33                     963 	inc	sp
      000394 C5                     964 	push	bc
      000395 33                     965 	inc	sp
      000396 2B                     966 	dec	hl
      000397 7E                     967 	ld	a, (hl)
      000398 F5                     968 	push	af
      000399 33                     969 	inc	sp
      00039A CDr00r00               970 	call	_set_bkg_tile_xy
      00039D E8 03                  971 	add	sp, #3
                                    972 ;src/main.c:280: set_bkg_tile_xy(x + 1u, y + 1u, bkg_offset + 3u);
      00039F F8 04                  973 	ldhl	sp,	#4
      0003A1 7E                     974 	ld	a, (hl)
      0003A2 3C                     975 	inc	a
      0003A3 3C                     976 	inc	a
      0003A4 3C                     977 	inc	a
      0003A5 F5                     978 	push	af
      0003A6 33                     979 	inc	sp
      0003A7 C5                     980 	push	bc
      0003A8 33                     981 	inc	sp
      0003A9 79                     982 	ld	a, c
      0003AA F5                     983 	push	af
      0003AB 33                     984 	inc	sp
      0003AC CDr00r00               985 	call	_set_bkg_tile_xy
      0003AF E8 03                  986 	add	sp, #3
                                    987 ;src/main.c:281: set_bkg_tile_xy(x, y + 2u, bkg_offset + 4u);
      0003B1 F8 04                  988 	ldhl	sp,	#4
      0003B3 7E                     989 	ld	a, (hl)
      0003B4 3C                     990 	inc	a
      0003B5 3C                     991 	inc	a
      0003B6 3C                     992 	inc	a
      0003B7 3C                     993 	inc	a
      0003B8 2B                     994 	dec	hl
      0003B9 46                     995 	ld	b, (hl)
      0003BA 04                     996 	inc	b
      0003BB 04                     997 	inc	b
      0003BC F5                     998 	push	af
      0003BD 33                     999 	inc	sp
      0003BE C5                    1000 	push	bc
      0003BF 33                    1001 	inc	sp
      0003C0 2B                    1002 	dec	hl
      0003C1 7E                    1003 	ld	a, (hl)
      0003C2 F5                    1004 	push	af
      0003C3 33                    1005 	inc	sp
      0003C4 CDr00r00              1006 	call	_set_bkg_tile_xy
      0003C7 E8 03                 1007 	add	sp, #3
                                   1008 ;src/main.c:282: set_bkg_tile_xy(x + 1u, y + 2u, bkg_offset + 5u);
      0003C9 F8 04                 1009 	ldhl	sp,	#4
      0003CB 7E                    1010 	ld	a, (hl)
      0003CC C6 05                 1011 	add	a, #0x05
      0003CE F5                    1012 	push	af
      0003CF 33                    1013 	inc	sp
      0003D0 C5                    1014 	push	bc
      0003D1 CDr00r00              1015 	call	_set_bkg_tile_xy
      0003D4 E8 03                 1016 	add	sp, #3
                                   1017 ;src/main.c:283: }
      0003D6 C9                    1018 	ret
                                   1019 ;src/main.c:285: void draw_background(void)
                                   1020 ;	---------------------------------
                                   1021 ; Function draw_background
                                   1022 ; ---------------------------------
      0003D7                       1023 _draw_background::
      0003D7 E8 FD                 1024 	add	sp, #-3
                                   1025 ;src/main.c:288: Pile *pile = IDX_PTR(piles, 0);
      0003D9 01r38r01              1026 	ld	bc, #_piles+0
                                   1027 ;src/main.c:289: for (i = 0; i < 10u; i++) {
      0003DC AF                    1028 	xor	a, a
      0003DD F8 02                 1029 	ldhl	sp,	#2
      0003DF 77                    1030 	ld	(hl), a
      0003E0                       1031 00102$:
                                   1032 ;src/main.c:290: draw_pile(pile->base, i, 0);
      0003E0 59                    1033 	ld	e, c
      0003E1 50                    1034 	ld	d, b
      0003E2 1A                    1035 	ld	a, (de)
      0003E3 F8 00                 1036 	ldhl	sp,	#0
      0003E5 22                    1037 	ld	(hl+), a
      0003E6 13                    1038 	inc	de
      0003E7 1A                    1039 	ld	a, (de)
      0003E8 77                    1040 	ld	(hl), a
      0003E9 C5                    1041 	push	bc
      0003EA AF                    1042 	xor	a, a
      0003EB F5                    1043 	push	af
      0003EC 33                    1044 	inc	sp
      0003ED 23                    1045 	inc	hl
      0003EE 7E                    1046 	ld	a, (hl)
      0003EF F5                    1047 	push	af
      0003F0 33                    1048 	inc	sp
      0003F1 2B                    1049 	dec	hl
      0003F2 2B                    1050 	dec	hl
      0003F3 2A                    1051 	ld	a, (hl+)
      0003F4 66                    1052 	ld	h, (hl)
      0003F5 6F                    1053 	ld	l, a
      0003F6 E5                    1054 	push	hl
      0003F7 CDrFAr02              1055 	call	_draw_pile
      0003FA E8 04                 1056 	add	sp, #4
      0003FC C1                    1057 	pop	bc
                                   1058 ;src/main.c:291: pile++;
      0003FD 03                    1059 	inc	bc
      0003FE 03                    1060 	inc	bc
      0003FF 03                    1061 	inc	bc
      000400 03                    1062 	inc	bc
      000401 03                    1063 	inc	bc
                                   1064 ;src/main.c:289: for (i = 0; i < 10u; i++) {
      000402 F8 02                 1065 	ldhl	sp,	#2
      000404 34                    1066 	inc	(hl)
      000405 7E                    1067 	ld	a, (hl)
      000406 D6 0A                 1068 	sub	a, #0x0a
      000408 38 D6                 1069 	jr	C, 00102$
                                   1070 ;src/main.c:293: draw_sequential_card(0, 0, OFFSET_BKG_CARD + OFFSET_CARD_BACK);
      00040A 3E 97                 1071 	ld	a, #0x97
      00040C F5                    1072 	push	af
      00040D 33                    1073 	inc	sp
      00040E AF                    1074 	xor	a, a
      00040F F5                    1075 	push	af
      000410 33                    1076 	inc	sp
      000411 AF                    1077 	xor	a, a
      000412 F5                    1078 	push	af
      000413 33                    1079 	inc	sp
      000414 CDr66r03              1080 	call	_draw_sequential_card
      000417 E8 03                 1081 	add	sp, #3
                                   1082 ;src/main.c:294: }
      000419 E8 03                 1083 	add	sp, #3
      00041B C9                    1084 	ret
                                   1085 ;src/main.c:296: void cursor_adjust_height(void)
                                   1086 ;	---------------------------------
                                   1087 ; Function cursor_adjust_height
                                   1088 ; ---------------------------------
      00041C                       1089 _cursor_adjust_height::
                                   1090 ;src/main.c:298: Pile *pile = IDX_PTR(piles, cursor.pile_idx);
      00041C 01r38r01              1091 	ld	bc, #_piles+0
      00041F FAr8Ar01              1092 	ld	a, (#(_cursor + 0x0006) + 0)
      000422 5F                    1093 	ld	e, a
      000423 16 00                 1094 	ld	d, #0x00
      000425 6B                    1095 	ld	l, e
      000426 62                    1096 	ld	h, d
      000427 29                    1097 	add	hl, hl
      000428 29                    1098 	add	hl, hl
      000429 19                    1099 	add	hl, de
      00042A 09                    1100 	add	hl, bc
                                   1101 ;src/main.c:299: if (cursor.height >= pile->height)
      00042B 01r8Br01              1102 	ld	bc, #_cursor + 7
      00042E 0A                    1103 	ld	a, (bc)
      00042F 57                    1104 	ld	d, a
      000430 23                    1105 	inc	hl
      000431 23                    1106 	inc	hl
      000432 23                    1107 	inc	hl
      000433 23                    1108 	inc	hl
      000434 5E                    1109 	ld	e, (hl)
      000435 7A                    1110 	ld	a, d
      000436 93                    1111 	sub	a, e
      000437 D8                    1112 	ret	C
                                   1113 ;src/main.c:300: cursor.height = pile->height - !!pile->height;
      000438 7B                    1114 	ld	a, e
      000439 D6 01                 1115 	sub	a,#0x01
      00043B 3E 00                 1116 	ld	a, #0x00
      00043D 17                    1117 	rla
      00043E EE 01                 1118 	xor	a, #0x01
      000440 57                    1119 	ld	d, a
      000441 7B                    1120 	ld	a, e
      000442 92                    1121 	sub	a, d
      000443 02                    1122 	ld	(bc), a
                                   1123 ;src/main.c:301: }
      000444 C9                    1124 	ret
                                   1125 ;src/main.c:303: UINT8 is_stack_coherent(Card *card)
                                   1126 ;	---------------------------------
                                   1127 ; Function is_stack_coherent
                                   1128 ; ---------------------------------
      000445                       1129 _is_stack_coherent::
      000445 E8 FE                 1130 	add	sp, #-2
                                   1131 ;src/main.c:305: while (card->next_card) {
      000447                       1132 00103$:
      000447 F8 04                 1133 	ldhl	sp,#4
      000449 2A                    1134 	ld	a, (hl+)
      00044A 4F                    1135 	ld	c, a
      00044B 46                    1136 	ld	b, (hl)
      00044C 59                    1137 	ld	e, c
      00044D 50                    1138 	ld	d, b
      00044E 1A                    1139 	ld	a, (de)
      00044F F8 00                 1140 	ldhl	sp,	#0
      000451 22                    1141 	ld	(hl+), a
      000452 13                    1142 	inc	de
      000453 1A                    1143 	ld	a, (de)
      000454 77                    1144 	ld	(hl), a
      000455 3A                    1145 	ld	a, (hl-)
      000456 B6                    1146 	or	a, (hl)
      000457 28 27                 1147 	jr	Z, 00105$
                                   1148 ;src/main.c:306: UINT8 prev_data = card->data;
      000459 03                    1149 	inc	bc
      00045A 03                    1150 	inc	bc
      00045B 78                    1151 	ld	a, b
      00045C 69                    1152 	ld	l, c
      00045D 67                    1153 	ld	h, a
      00045E 4E                    1154 	ld	c, (hl)
                                   1155 ;src/main.c:307: card = card->next_card;
      00045F F8 00                 1156 	ldhl	sp,	#0
      000461 2A                    1157 	ld	a, (hl+)
      000462 5E                    1158 	ld	e, (hl)
      000463 F8 04                 1159 	ldhl	sp,	#4
      000465 22                    1160 	ld	(hl+), a
                                   1161 ;src/main.c:308: if (prev_data != card->data + 1u)
      000466 7B                    1162 	ld	a, e
      000467 32                    1163 	ld	(hl-), a
      000468 2A                    1164 	ld	a, (hl+)
      000469 5F                    1165 	ld	e, a
      00046A 56                    1166 	ld	d, (hl)
      00046B 13                    1167 	inc	de
      00046C 13                    1168 	inc	de
      00046D 1A                    1169 	ld	a, (de)
      00046E 5F                    1170 	ld	e, a
      00046F 16 00                 1171 	ld	d, #0x00
      000471 13                    1172 	inc	de
      000472 06 00                 1173 	ld	b, #0x00
      000474 79                    1174 	ld	a, c
      000475 93                    1175 	sub	a, e
      000476 20 04                 1176 	jr	NZ, 00123$
      000478 78                    1177 	ld	a, b
      000479 92                    1178 	sub	a, d
      00047A 28 CB                 1179 	jr	Z, 00103$
      00047C                       1180 00123$:
                                   1181 ;src/main.c:309: return 0;
      00047C 1E 00                 1182 	ld	e, #0x00
      00047E 18 02                 1183 	jr	00106$
      000480                       1184 00105$:
                                   1185 ;src/main.c:311: return 1u;
      000480 1E 01                 1186 	ld	e, #0x01
      000482                       1187 00106$:
                                   1188 ;src/main.c:312: }
      000482 E8 02                 1189 	add	sp, #2
      000484 C9                    1190 	ret
                                   1191 ;src/main.c:340: void dynamic_metasprite_deal_callback(void)
                                   1192 ;	---------------------------------
                                   1193 ; Function dynamic_metasprite_deal_callback
                                   1194 ; ---------------------------------
      000485                       1195 _dynamic_metasprite_deal_callback::
      000485 E8 FC                 1196 	add	sp, #-4
                                   1197 ;src/main.c:342: Pile *pile = IDX_PTR(piles, dynamic_metasprite.data[0]);
      000487 21r7Cr01              1198 	ld	hl, #(_dynamic_metasprite + 0x000d)
      00048A 4E                    1199 	ld	c, (hl)
      00048B 06 00                 1200 	ld	b, #0x00
      00048D 69                    1201 	ld	l, c
      00048E 60                    1202 	ld	h, b
      00048F 29                    1203 	add	hl, hl
      000490 29                    1204 	add	hl, hl
      000491 09                    1205 	add	hl, bc
      000492 3Er38                 1206 	ld	a, #<(_piles)
      000494 85                    1207 	add	a, l
      000495 47                    1208 	ld	b, a
      000496 3Es01                 1209 	ld	a, #>(_piles)
      000498 8C                    1210 	adc	a, h
      000499 F8 00                 1211 	ldhl	sp,	#0
      00049B 70                    1212 	ld	(hl), b
      00049C 23                    1213 	inc	hl
      00049D 77                    1214 	ld	(hl), a
                                   1215 ;src/main.c:343: draw_card(dynamic_metasprite.data[0] * 2u, 2u + pile->height, pile->top->data);
      00049E E1                    1216 	pop	hl
      00049F E5                    1217 	push	hl
      0004A0 23                    1218 	inc	hl
      0004A1 23                    1219 	inc	hl
      0004A2 2A                    1220 	ld	a, (hl+)
      0004A3 66                    1221 	ld	h, (hl)
      0004A4 6F                    1222 	ld	l, a
      0004A5 23                    1223 	inc	hl
      0004A6 23                    1224 	inc	hl
      0004A7 46                    1225 	ld	b, (hl)
                                   1226 ;c
      0004A8 D1                    1227 	pop	de
      0004A9 D5                    1228 	push	de
      0004AA 21 04 00              1229 	ld	hl, #0x0004
      0004AD 19                    1230 	add	hl, de
      0004AE 5D                    1231 	ld	e, l
      0004AF 54                    1232 	ld	d, h
      0004B0 1A                    1233 	ld	a, (de)
      0004B1 C6 02                 1234 	add	a, #0x02
      0004B3 57                    1235 	ld	d, a
      0004B4 CB 21                 1236 	sla	c
                                   1237 ;src/main.c:254: draw_card_top(x, y, card_data);
      0004B6 C5                    1238 	push	bc
      0004B7 D5                    1239 	push	de
      0004B8 C5                    1240 	push	bc
      0004B9 33                    1241 	inc	sp
      0004BA 59                    1242 	ld	e, c
      0004BB D5                    1243 	push	de
      0004BC CDr30r02              1244 	call	_draw_card_top
      0004BF E8 03                 1245 	add	sp, #3
      0004C1 D1                    1246 	pop	de
      0004C2 C1                    1247 	pop	bc
                                   1248 ;src/main.c:255: draw_card_bottom(x, y + 1u, card_data);
      0004C3 14                    1249 	inc	d
      0004C4 C5                    1250 	push	bc
      0004C5 33                    1251 	inc	sp
      0004C6 59                    1252 	ld	e, c
      0004C7 D5                    1253 	push	de
      0004C8 CDr9Dr02              1254 	call	_draw_card_bottom
      0004CB E8 03                 1255 	add	sp, #3
                                   1256 ;src/main.c:344: if (dynamic_metasprite.data[0] == 9u) {
      0004CD 21r7Cr01              1257 	ld	hl, #(_dynamic_metasprite + 0x000d)
      0004D0 4E                    1258 	ld	c, (hl)
      0004D1 79                    1259 	ld	a, c
      0004D2 D6 09                 1260 	sub	a, #0x09
      0004D4 20 1B                 1261 	jr	NZ, 00104$
                                   1262 ;src/main.c:345: if (top_card_idx == 104u)
      0004D6 FAr6Ar01              1263 	ld	a, (#_top_card_idx)
      0004D9 D6 68                 1264 	sub	a, #0x68
      0004DB 20 0F                 1265 	jr	NZ, 00102$
                                   1266 ;src/main.c:346: draw_sequential_card(0, 0, OFFSET_BKG_CARD + OFFSET_CARD_OUTLINE);
      0004DD 3E AE                 1267 	ld	a, #0xae
      0004DF F5                    1268 	push	af
      0004E0 33                    1269 	inc	sp
      0004E1 AF                    1270 	xor	a, a
      0004E2 F5                    1271 	push	af
      0004E3 33                    1272 	inc	sp
      0004E4 AF                    1273 	xor	a, a
      0004E5 F5                    1274 	push	af
      0004E6 33                    1275 	inc	sp
      0004E7 CDr66r03              1276 	call	_draw_sequential_card
      0004EA E8 03                 1277 	add	sp, #3
      0004EC                       1278 00102$:
                                   1279 ;src/main.c:347: dynamic_metasprite_end();
      0004EC CDr1Cr02              1280 	call	_dynamic_metasprite_end
                                   1281 ;src/main.c:348: return;
      0004EF 18 48                 1282 	jr	00106$
      0004F1                       1283 00104$:
                                   1284 ;src/main.c:350: pile++;
                                   1285 ;c
      0004F1 D1                    1286 	pop	de
      0004F2 D5                    1287 	push	de
      0004F3 21 05 00              1288 	ld	hl, #0x0005
      0004F6 19                    1289 	add	hl, de
      0004F7 E5                    1290 	push	hl
      0004F8 7D                    1291 	ld	a, l
      0004F9 F8 04                 1292 	ldhl	sp,	#4
      0004FB 77                    1293 	ld	(hl), a
      0004FC E1                    1294 	pop	hl
      0004FD 7C                    1295 	ld	a, h
      0004FE F8 03                 1296 	ldhl	sp,	#3
      000500 77                    1297 	ld	(hl), a
                                   1298 ;src/main.c:351: dynamic_metasprite.data[0]++;
      000501 0C                    1299 	inc	c
      000502 21r7Cr01              1300 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000505 71                    1301 	ld	(hl), c
                                   1302 ;src/main.c:352: dynamic_metasprite.dist[0] += 16;
      000506 21r73r01              1303 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000509 2A                    1304 	ld	a, (hl+)
      00050A 4F                    1305 	ld	c, a
      00050B 46                    1306 	ld	b, (hl)
      00050C 21 10 00              1307 	ld	hl, #0x0010
      00050F 09                    1308 	add	hl, bc
      000510 4D                    1309 	ld	c, l
      000511 44                    1310 	ld	b, h
      000512 21r73r01              1311 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000515 79                    1312 	ld	a, c
      000516 22                    1313 	ld	(hl+), a
      000517 70                    1314 	ld	(hl), b
                                   1315 ;src/main.c:353: dynamic_metasprite.dist[1] = (INT16)(2u + pile->height) * 8;
                                   1316 ;c
      000518 F8 02                 1317 	ldhl	sp,#2
      00051A 2A                    1318 	ld	a, (hl+)
      00051B 5F                    1319 	ld	e, a
      00051C 56                    1320 	ld	d, (hl)
      00051D 21 04 00              1321 	ld	hl, #0x0004
      000520 19                    1322 	add	hl, de
      000521 4D                    1323 	ld	c, l
      000522 44                    1324 	ld	b, h
      000523 0A                    1325 	ld	a, (bc)
      000524 6F                    1326 	ld	l, a
      000525 26 00                 1327 	ld	h, #0x00
      000527 23                    1328 	inc	hl
      000528 23                    1329 	inc	hl
      000529 29                    1330 	add	hl, hl
      00052A 29                    1331 	add	hl, hl
      00052B 29                    1332 	add	hl, hl
      00052C 4D                    1333 	ld	c, l
      00052D 44                    1334 	ld	b, h
      00052E 21r75r01              1335 	ld	hl, #(_dynamic_metasprite + 0x0006)
      000531 79                    1336 	ld	a, c
      000532 22                    1337 	ld	(hl+), a
      000533 70                    1338 	ld	(hl), b
                                   1339 ;src/main.c:354: dynamic_metasprite.elapsed_frames = 0;
      000534 21r78r01              1340 	ld	hl, #(_dynamic_metasprite + 0x0009)
      000537 36 00                 1341 	ld	(hl), #0x00
      000539                       1342 00106$:
                                   1343 ;src/main.c:355: }
      000539 E8 04                 1344 	add	sp, #4
      00053B C9                    1345 	ret
                                   1346 ;src/main.c:357: void dynamic_metasprite_deal(void)
                                   1347 ;	---------------------------------
                                   1348 ; Function dynamic_metasprite_deal
                                   1349 ; ---------------------------------
      00053C                       1350 _dynamic_metasprite_deal::
                                   1351 ;src/main.c:359: Pile *pile = IDX_PTR(piles, 0);
                                   1352 ;src/main.c:360: dynamic_metasprite.src[0] = 0;
      00053C 21r6Fr01              1353 	ld	hl, #_dynamic_metasprite
      00053F AF                    1354 	xor	a, a
      000540 22                    1355 	ld	(hl+), a
      000541 77                    1356 	ld	(hl), a
                                   1357 ;src/main.c:361: dynamic_metasprite.src[1] = 0;
      000542 21r71r01              1358 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000545 AF                    1359 	xor	a, a
      000546 22                    1360 	ld	(hl+), a
      000547 77                    1361 	ld	(hl), a
                                   1362 ;src/main.c:362: dynamic_metasprite.dist[0] = 0;
      000548 21r73r01              1363 	ld	hl, #(_dynamic_metasprite + 0x0004)
      00054B AF                    1364 	xor	a, a
      00054C 22                    1365 	ld	(hl+), a
      00054D 77                    1366 	ld	(hl), a
                                   1367 ;src/main.c:363: dynamic_metasprite.dist[1] = (INT16)(2u + pile->height) * 8;
      00054E FAr3Cr01              1368 	ld	a, (#(_piles + 0x0004) + 0)
      000551 26 00                 1369 	ld	h, #0x00
      000553 6F                    1370 	ld	l, a
      000554 23                    1371 	inc	hl
      000555 23                    1372 	inc	hl
      000556 29                    1373 	add	hl, hl
      000557 29                    1374 	add	hl, hl
      000558 29                    1375 	add	hl, hl
      000559 4D                    1376 	ld	c, l
      00055A 44                    1377 	ld	b, h
      00055B 21r75r01              1378 	ld	hl, #(_dynamic_metasprite + 0x0006)
      00055E 79                    1379 	ld	a, c
      00055F 22                    1380 	ld	(hl+), a
      000560 70                    1381 	ld	(hl), b
                                   1382 ;src/main.c:364: dynamic_metasprite.elapsed_frames = 0;
      000561 21r78r01              1383 	ld	hl, #(_dynamic_metasprite + 0x0009)
      000564 36 00                 1384 	ld	(hl), #0x00
                                   1385 ;src/main.c:365: dynamic_metasprite.target_frames = animation_speeds[ANIMATION_SPEED(settings)].move_target_frames;
      000566 FAr6Cr01              1386 	ld	a, (#_settings)
      000569 0E 00                 1387 	ld	c, #0x00
      00056B E6 0C                 1388 	and	a, #0x0c
      00056D 6F                    1389 	ld	l, a
      00056E 26 00                 1390 	ld	h, #0x00
      000570 CB 2C                 1391 	sra	h
      000572 CB 1D                 1392 	rr	l
      000574 CB 2C                 1393 	sra	h
      000576 CB 1D                 1394 	rr	l
      000578 29                    1395 	add	hl, hl
      000579 11r8Er01              1396 	ld	de, #_animation_speeds
      00057C 19                    1397 	add	hl, de
      00057D 23                    1398 	inc	hl
      00057E 7E                    1399 	ld	a, (hl)
      00057F EAr77r01              1400 	ld	(#(_dynamic_metasprite + 0x0008)),a
                                   1401 ;src/main.c:366: dynamic_metasprite.metasprite = metasprite_sequential_2x3;
      000582 21r79r01              1402 	ld	hl, #(_dynamic_metasprite + 0x000a)
      000585 36r00                 1403 	ld	(hl), #<(_metasprite_sequential_2x3)
      000587 23                    1404 	inc	hl
      000588 36s00                 1405 	ld	(hl), #>(_metasprite_sequential_2x3)
                                   1406 ;src/main.c:367: dynamic_metasprite.metasprite_offset = OFFSET_SPRITE_CARD + OFFSET_CARD_BACK;
      00058A 21r7Br01              1407 	ld	hl, #(_dynamic_metasprite + 0x000c)
      00058D 36 97                 1408 	ld	(hl), #0x97
                                   1409 ;src/main.c:368: dynamic_metasprite.data[0] = 0;
      00058F 21r7Cr01              1410 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000592 36 00                 1411 	ld	(hl), #0x00
                                   1412 ;src/main.c:369: dynamic_metasprite.callback = &dynamic_metasprite_deal_callback;
      000594 21r82r01              1413 	ld	hl, #(_dynamic_metasprite + 0x0013)
      000597 36r85                 1414 	ld	(hl), #<(_dynamic_metasprite_deal_callback)
      000599 23                    1415 	inc	hl
      00059A 36s04                 1416 	ld	(hl), #>(_dynamic_metasprite_deal_callback)
                                   1417 ;src/main.c:370: flags |= FLAG_PLAYING_ANIMATION;
      00059C 21r6Br01              1418 	ld	hl, #_flags
      00059F 7E                    1419 	ld	a, (hl)
      0005A0 F6 04                 1420 	or	a, #0x04
      0005A2 77                    1421 	ld	(hl), a
                                   1422 ;src/main.c:371: }
      0005A3 C9                    1423 	ret
                                   1424 ;src/main.c:397: void set_metasprite_card(const UINT8 card_data)
                                   1425 ;	---------------------------------
                                   1426 ; Function set_metasprite_card
                                   1427 ; ---------------------------------
      0005A4                       1428 _set_metasprite_card::
                                   1429 ;src/main.c:399: metasprite_t *iter = IDX_PTR(metasprite_custom_2x3, 0);
                                   1430 ;src/main.c:400: (iter++)->dtile = OFFSET_CARD_RANK + RANK(card_data);
      0005A4 F8 02                 1431 	ldhl	sp,	#2
      0005A6 7E                    1432 	ld	a, (hl)
      0005A7 E6 0F                 1433 	and	a, #0x0f
      0005A9 4F                    1434 	ld	c, a
      0005AA 21r02r00              1435 	ld	hl, #(_metasprite_custom_2x3 + 0x0002)
      0005AD 71                    1436 	ld	(hl), c
                                   1437 ;src/main.c:401: (iter++)->dtile = OFFSET_CARD_SUIT + SUIT(card_data);
      0005AE 11r06r00              1438 	ld	de, #(_metasprite_custom_2x3 + 0x0004) + 2
      0005B1 F8 02                 1439 	ldhl	sp,	#2
      0005B3 7E                    1440 	ld	a, (hl)
      0005B4 E6 30                 1441 	and	a, #0x30
      0005B6 6F                    1442 	ld	l, a
      0005B7 26 00                 1443 	ld	h, #0x00
      0005B9 CB 2C                 1444 	sra	h
      0005BB CB 1D                 1445 	rr	l
      0005BD CB 2C                 1446 	sra	h
      0005BF CB 1D                 1447 	rr	l
      0005C1 CB 2C                 1448 	sra	h
      0005C3 CB 1D                 1449 	rr	l
      0005C5 CB 2C                 1450 	sra	h
      0005C7 CB 1D                 1451 	rr	l
      0005C9 45                    1452 	ld	b, l
      0005CA 78                    1453 	ld	a, b
      0005CB C6 0D                 1454 	add	a, #0x0d
      0005CD 12                    1455 	ld	(de), a
                                   1456 ;src/main.c:402: (iter++)->dtile = OFFSET_CARD_BLANK + 2u;
      0005CE 21r0Ar00              1457 	ld	hl, #(_metasprite_custom_2x3 + 0x000a)
      0005D1 36 13                 1458 	ld	(hl), #0x13
                                   1459 ;src/main.c:403: (iter++)->dtile = OFFSET_CARD_BLANK + 3u;
      0005D3 21r0Er00              1460 	ld	hl, #(_metasprite_custom_2x3 + 0x000e)
      0005D6 36 14                 1461 	ld	(hl), #0x14
                                   1462 ;src/main.c:404: (iter++)->dtile = OFFSET_CARD_SUIT_ROT + SUIT(card_data);
      0005D8 11r12r00              1463 	ld	de, #(_metasprite_custom_2x3 + 0x0010) + 2
      0005DB 78                    1464 	ld	a, b
      0005DC C6 2A                 1465 	add	a, #0x2a
      0005DE 12                    1466 	ld	(de), a
                                   1467 ;src/main.c:405: (iter++)->dtile = OFFSET_CARD_RANK_ROT + RANK(card_data);
      0005DF 11r16r00              1468 	ld	de, #(_metasprite_custom_2x3 + 0x0014) + 2
      0005E2 79                    1469 	ld	a, c
      0005E3 C6 1D                 1470 	add	a, #0x1d
      0005E5 12                    1471 	ld	(de), a
                                   1472 ;src/main.c:406: }
      0005E6 C9                    1473 	ret
                                   1474 ;src/main.c:410: void dynamic_metasprite_fold_pile(void)
                                   1475 ;	---------------------------------
                                   1476 ; Function dynamic_metasprite_fold_pile
                                   1477 ; ---------------------------------
      0005E7                       1478 _dynamic_metasprite_fold_pile::
      0005E7 E8 F4                 1479 	add	sp, #-12
                                   1480 ;src/main.c:412: UINT8 pile_idx = dynamic_metasprite.data[3] & 0xF;
      0005E9 FAr7Fr01              1481 	ld	a, (#(_dynamic_metasprite + 0x0010) + 0)
      0005EC F8 0B                 1482 	ldhl	sp,	#11
      0005EE 77                    1483 	ld	(hl), a
      0005EF F8 0B                 1484 	ldhl	sp,	#11
      0005F1 7E                    1485 	ld	a, (hl)
      0005F2 E6 0F                 1486 	and	a, #0x0f
      0005F4 2B                    1487 	dec	hl
                                   1488 ;src/main.c:413: if (!pile_idx) {
      0005F5 77                    1489 	ld	(hl), a
      0005F6 B7                    1490 	or	a, a
      0005F7 20 06                 1491 	jr	NZ, 00102$
                                   1492 ;src/main.c:414: dynamic_metasprite_end();
      0005F9 CDr1Cr02              1493 	call	_dynamic_metasprite_end
                                   1494 ;src/main.c:415: return;
      0005FC C3rCEr06              1495 	jp	00103$
      0005FF                       1496 00102$:
                                   1497 ;src/main.c:418: Pile *pile = IDX_PTR(piles, pile_idx);
      0005FF F8 0A                 1498 	ldhl	sp,	#10
      000601 4E                    1499 	ld	c, (hl)
      000602 06 00                 1500 	ld	b, #0x00
      000604 69                    1501 	ld	l, c
      000605 60                    1502 	ld	h, b
      000606 29                    1503 	add	hl, hl
      000607 29                    1504 	add	hl, hl
      000608 09                    1505 	add	hl, bc
      000609 E5                    1506 	push	hl
      00060A 7D                    1507 	ld	a, l
      00060B F8 08                 1508 	ldhl	sp,	#8
      00060D 77                    1509 	ld	(hl), a
      00060E E1                    1510 	pop	hl
      00060F 7C                    1511 	ld	a, h
      000610 F8 07                 1512 	ldhl	sp,	#7
      000612 77                    1513 	ld	(hl), a
                                   1514 ;c
      000613 11r38r01              1515 	ld	de, #_piles
      000616 2B                    1516 	dec	hl
      000617 2A                    1517 	ld	a, (hl+)
      000618 66                    1518 	ld	h, (hl)
      000619 6F                    1519 	ld	l, a
      00061A 19                    1520 	add	hl, de
      00061B E5                    1521 	push	hl
      00061C 7D                    1522 	ld	a, l
      00061D F8 0A                 1523 	ldhl	sp,	#10
      00061F 77                    1524 	ld	(hl), a
      000620 E1                    1525 	pop	hl
      000621 7C                    1526 	ld	a, h
      000622 F8 09                 1527 	ldhl	sp,	#9
      000624 32                    1528 	ld	(hl-), a
      000625 2A                    1529 	ld	a, (hl+)
      000626 5E                    1530 	ld	e, (hl)
      000627 F8 02                 1531 	ldhl	sp,	#2
      000629 22                    1532 	ld	(hl+), a
      00062A 73                    1533 	ld	(hl), e
                                   1534 ;src/main.c:419: UINT8 x = pile_idx * 16u;
      00062B F8 0A                 1535 	ldhl	sp,	#10
      00062D 7E                    1536 	ld	a, (hl)
      00062E CB 37                 1537 	swap	a
      000630 E6 F0                 1538 	and	a, #0xf0
      000632 F8 04                 1539 	ldhl	sp,	#4
      000634 77                    1540 	ld	(hl), a
                                   1541 ;src/main.c:428: dynamic_metasprite.data[3] >> 4u
      000635 F8 0B                 1542 	ldhl	sp,	#11
      000637 7E                    1543 	ld	a, (hl)
      000638 CB 37                 1544 	swap	a
      00063A E6 0F                 1545 	and	a, #0x0f
      00063C F8 05                 1546 	ldhl	sp,	#5
                                   1547 ;src/main.c:426: pile->base,
      00063E 32                    1548 	ld	(hl-), a
      00063F 2B                    1549 	dec	hl
      000640 2B                    1550 	dec	hl
      000641 2A                    1551 	ld	a, (hl+)
      000642 5F                    1552 	ld	e, a
      000643 56                    1553 	ld	d, (hl)
      000644 1A                    1554 	ld	a, (de)
      000645 F8 06                 1555 	ldhl	sp,	#6
      000647 22                    1556 	ld	(hl+), a
      000648 13                    1557 	inc	de
      000649 1A                    1558 	ld	a, (de)
      00064A 77                    1559 	ld	(hl), a
                                   1560 ;src/main.c:420: dynamic_metasprite_fold(pile->top->data,
                                   1561 ;c
      00064B F8 02                 1562 	ldhl	sp,#2
      00064D 2A                    1563 	ld	a, (hl+)
      00064E 5F                    1564 	ld	e, a
      00064F 56                    1565 	ld	d, (hl)
      000650 21 02 00              1566 	ld	hl, #0x0002
      000653 19                    1567 	add	hl, de
      000654 E5                    1568 	push	hl
      000655 7D                    1569 	ld	a, l
      000656 F8 0A                 1570 	ldhl	sp,	#10
      000658 77                    1571 	ld	(hl), a
      000659 E1                    1572 	pop	hl
      00065A 7C                    1573 	ld	a, h
      00065B F8 09                 1574 	ldhl	sp,	#9
      00065D 32                    1575 	ld	(hl-), a
      00065E 2A                    1576 	ld	a, (hl+)
      00065F 5F                    1577 	ld	e, a
      000660 56                    1578 	ld	d, (hl)
      000661 1A                    1579 	ld	a, (de)
      000662 F8 00                 1580 	ldhl	sp,	#0
      000664 22                    1581 	ld	(hl+), a
      000665 13                    1582 	inc	de
      000666 1A                    1583 	ld	a, (de)
      000667 77                    1584 	ld	(hl), a
                                   1585 ;c
      000668 D1                    1586 	pop	de
      000669 D5                    1587 	push	de
      00066A 21 02 00              1588 	ld	hl, #0x0002
      00066D 19                    1589 	add	hl, de
      00066E E5                    1590 	push	hl
      00066F 7D                    1591 	ld	a, l
      000670 F8 0C                 1592 	ldhl	sp,	#12
      000672 77                    1593 	ld	(hl), a
      000673 E1                    1594 	pop	hl
      000674 7C                    1595 	ld	a, h
      000675 F8 0B                 1596 	ldhl	sp,	#11
      000677 32                    1597 	ld	(hl-), a
      000678 2A                    1598 	ld	a, (hl+)
      000679 5F                    1599 	ld	e, a
      00067A 56                    1600 	ld	d, (hl)
      00067B 1A                    1601 	ld	a, (de)
      00067C 77                    1602 	ld	(hl), a
      00067D F8 05                 1603 	ldhl	sp,	#5
      00067F 7E                    1604 	ld	a, (hl)
      000680 F5                    1605 	push	af
      000681 33                    1606 	inc	sp
      000682 AF                    1607 	xor	a, a
      000683 F5                    1608 	push	af
      000684 33                    1609 	inc	sp
      000685 23                    1610 	inc	hl
      000686 2A                    1611 	ld	a, (hl+)
      000687 66                    1612 	ld	h, (hl)
      000688 6F                    1613 	ld	l, a
      000689 E5                    1614 	push	hl
      00068A 3E 0D                 1615 	ld	a, #0x0d
      00068C F5                    1616 	push	af
      00068D 33                    1617 	inc	sp
      00068E AF                    1618 	xor	a, a
      00068F F5                    1619 	push	af
      000690 33                    1620 	inc	sp
      000691 F8 0A                 1621 	ldhl	sp,	#10
      000693 56                    1622 	ld	d, (hl)
      000694 1E 78                 1623 	ld	e,#0x78
      000696 D5                    1624 	push	de
      000697 7E                    1625 	ld	a, (hl)
      000698 F5                    1626 	push	af
      000699 33                    1627 	inc	sp
      00069A F8 14                 1628 	ldhl	sp,	#20
      00069C 7E                    1629 	ld	a, (hl)
      00069D F5                    1630 	push	af
      00069E 33                    1631 	inc	sp
      00069F CDr40r09              1632 	call	_dynamic_metasprite_fold
      0006A2 E8 0A                 1633 	add	sp, #10
                                   1634 ;src/main.c:430: pile->base = NULL;
      0006A4 C1                    1635 	pop	bc
      0006A5 E1                    1636 	pop	hl
      0006A6 E5                    1637 	push	hl
      0006A7 C5                    1638 	push	bc
      0006A8 AF                    1639 	xor	a, a
      0006A9 22                    1640 	ld	(hl+), a
      0006AA 77                    1641 	ld	(hl), a
                                   1642 ;src/main.c:431: pile->top = NULL;
      0006AB F8 08                 1643 	ldhl	sp,	#8
      0006AD 2A                    1644 	ld	a, (hl+)
      0006AE 66                    1645 	ld	h, (hl)
      0006AF 6F                    1646 	ld	l, a
      0006B0 AF                    1647 	xor	a, a
      0006B1 22                    1648 	ld	(hl+), a
      0006B2 77                    1649 	ld	(hl), a
                                   1650 ;src/main.c:432: pile->height = 0;
                                   1651 ;c
      0006B3 F8 02                 1652 	ldhl	sp,#2
      0006B5 2A                    1653 	ld	a, (hl+)
      0006B6 5F                    1654 	ld	e, a
      0006B7 56                    1655 	ld	d, (hl)
      0006B8 21 04 00              1656 	ld	hl, #0x0004
      0006BB 19                    1657 	add	hl, de
      0006BC E5                    1658 	push	hl
      0006BD 7D                    1659 	ld	a, l
      0006BE F8 0C                 1660 	ldhl	sp,	#12
      0006C0 77                    1661 	ld	(hl), a
      0006C1 E1                    1662 	pop	hl
      0006C2 7C                    1663 	ld	a, h
      0006C3 F8 0B                 1664 	ldhl	sp,	#11
      0006C5 32                    1665 	ld	(hl-), a
      0006C6 2A                    1666 	ld	a, (hl+)
      0006C7 66                    1667 	ld	h, (hl)
      0006C8 6F                    1668 	ld	l, a
      0006C9 36 00                 1669 	ld	(hl), #0x00
                                   1670 ;src/main.c:433: cursor_adjust_height();
      0006CB CDr1Cr04              1671 	call	_cursor_adjust_height
      0006CE                       1672 00103$:
                                   1673 ;src/main.c:434: }
      0006CE E8 0C                 1674 	add	sp, #12
      0006D0 C9                    1675 	ret
                                   1676 ;src/main.c:436: void dynamic_metasprite_unfold_callback(void)
                                   1677 ;	---------------------------------
                                   1678 ; Function dynamic_metasprite_unfold_callback
                                   1679 ; ---------------------------------
      0006D1                       1680 _dynamic_metasprite_unfold_callback::
      0006D1 E8 FC                 1681 	add	sp, #-4
                                   1682 ;src/main.c:438: Card const *card = dynamic_metasprite.data_ptr;
      0006D3 21r80r01              1683 	ld	hl, #(_dynamic_metasprite + 0x0011)
      0006D6 2A                    1684 	ld	a, (hl+)
      0006D7 4F                    1685 	ld	c, a
      0006D8 46                    1686 	ld	b, (hl)
                                   1687 ;src/main.c:439: if (!card->next_card) {
      0006D9 59                    1688 	ld	e, c
      0006DA 50                    1689 	ld	d, b
      0006DB 1A                    1690 	ld	a, (de)
      0006DC F8 00                 1691 	ldhl	sp,	#0
      0006DE 22                    1692 	ld	(hl+), a
      0006DF 13                    1693 	inc	de
      0006E0 1A                    1694 	ld	a, (de)
      0006E1 77                    1695 	ld	(hl), a
                                   1696 ;src/main.c:440: draw_card(dynamic_metasprite.data[1] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 1u, card->data);
      0006E2 03                    1697 	inc	bc
      0006E3 03                    1698 	inc	bc
      0006E4 23                    1699 	inc	hl
      0006E5 79                    1700 	ld	a, c
      0006E6 22                    1701 	ld	(hl+), a
                                   1702 ;src/main.c:439: if (!card->next_card) {
      0006E7 78                    1703 	ld	a, b
      0006E8 32                    1704 	ld	(hl-), a
      0006E9 2B                    1705 	dec	hl
      0006EA 3A                    1706 	ld	a, (hl-)
      0006EB B6                    1707 	or	a, (hl)
      0006EC 20 74                 1708 	jr	NZ, 00102$
                                   1709 ;src/main.c:440: draw_card(dynamic_metasprite.data[1] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 1u, card->data);
      0006EE F8 02                 1710 	ldhl	sp,#2
      0006F0 2A                    1711 	ld	a, (hl+)
      0006F1 5F                    1712 	ld	e, a
      0006F2 56                    1713 	ld	d, (hl)
      0006F3 1A                    1714 	ld	a, (de)
      0006F4 F8 00                 1715 	ldhl	sp,	#0
      0006F6 77                    1716 	ld	(hl), a
      0006F7 FAr71r01              1717 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      0006FA F8 03                 1718 	ldhl	sp,	#3
      0006FC 77                    1719 	ld	(hl), a
      0006FD F8 03                 1720 	ldhl	sp,	#3
      0006FF 3A                    1721 	ld	a, (hl-)
      000700 77                    1722 	ld	(hl), a
      000701 AF                    1723 	xor	a, a
      000702 23                    1724 	inc	hl
      000703 77                    1725 	ld	(hl), a
      000704 CB 3E                 1726 	srl	(hl)
      000706 2B                    1727 	dec	hl
      000707 CB 1E                 1728 	rr	(hl)
      000709 23                    1729 	inc	hl
      00070A CB 3E                 1730 	srl	(hl)
      00070C 2B                    1731 	dec	hl
      00070D CB 1E                 1732 	rr	(hl)
      00070F 23                    1733 	inc	hl
      000710 CB 3E                 1734 	srl	(hl)
      000712 2B                    1735 	dec	hl
      000713 CB 1E                 1736 	rr	(hl)
      000715 2A                    1737 	ld	a, (hl+)
      000716 77                    1738 	ld	(hl), a
      000717 3C                    1739 	inc	a
      000718 2B                    1740 	dec	hl
      000719 2B                    1741 	dec	hl
      00071A 77                    1742 	ld	(hl), a
      00071B FAr7Dr01              1743 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      00071E F8 03                 1744 	ldhl	sp,	#3
      000720 77                    1745 	ld	(hl), a
      000721 F8 03                 1746 	ldhl	sp,	#3
      000723 3A                    1747 	ld	a, (hl-)
      000724 77                    1748 	ld	(hl), a
      000725 AF                    1749 	xor	a, a
      000726 23                    1750 	inc	hl
      000727 77                    1751 	ld	(hl), a
      000728 CB 3E                 1752 	srl	(hl)
      00072A 2B                    1753 	dec	hl
      00072B CB 1E                 1754 	rr	(hl)
      00072D 23                    1755 	inc	hl
      00072E CB 3E                 1756 	srl	(hl)
      000730 2B                    1757 	dec	hl
      000731 CB 1E                 1758 	rr	(hl)
      000733 23                    1759 	inc	hl
      000734 CB 3E                 1760 	srl	(hl)
      000736 2B                    1761 	dec	hl
      000737 CB 1E                 1762 	rr	(hl)
      000739 46                    1763 	ld	b, (hl)
                                   1764 ;src/main.c:254: draw_card_top(x, y, card_data);
      00073A C5                    1765 	push	bc
      00073B 2B                    1766 	dec	hl
      00073C 2B                    1767 	dec	hl
      00073D 7E                    1768 	ld	a, (hl)
      00073E F5                    1769 	push	af
      00073F 33                    1770 	inc	sp
      000740 23                    1771 	inc	hl
      000741 7E                    1772 	ld	a, (hl)
      000742 F5                    1773 	push	af
      000743 33                    1774 	inc	sp
      000744 C5                    1775 	push	bc
      000745 33                    1776 	inc	sp
      000746 CDr30r02              1777 	call	_draw_card_top
      000749 E8 03                 1778 	add	sp, #3
      00074B C1                    1779 	pop	bc
                                   1780 ;src/main.c:255: draw_card_bottom(x, y + 1u, card_data);
      00074C F8 01                 1781 	ldhl	sp,	#1
      00074E 7E                    1782 	ld	a, (hl)
      00074F 3C                    1783 	inc	a
      000750 2B                    1784 	dec	hl
      000751 66                    1785 	ld	h, (hl)
      000752 E5                    1786 	push	hl
      000753 33                    1787 	inc	sp
      000754 F5                    1788 	push	af
      000755 33                    1789 	inc	sp
      000756 C5                    1790 	push	bc
      000757 33                    1791 	inc	sp
      000758 CDr9Dr02              1792 	call	_draw_card_bottom
      00075B E8 03                 1793 	add	sp, #3
                                   1794 ;src/main.c:441: dynamic_metasprite_fold_pile();
      00075D CDrE7r05              1795 	call	_dynamic_metasprite_fold_pile
                                   1796 ;src/main.c:442: return;
      000760 18 4E                 1797 	jr	00104$
      000762                       1798 00102$:
                                   1799 ;src/main.c:444: dynamic_metasprite.data_ptr = card->next_card;
      000762 C1                    1800 	pop	bc
      000763 C5                    1801 	push	bc
      000764 21r80r01              1802 	ld	hl, #(_dynamic_metasprite + 0x0011)
      000767 79                    1803 	ld	a, c
      000768 22                    1804 	ld	(hl+), a
      000769 70                    1805 	ld	(hl), b
                                   1806 ;src/main.c:445: dynamic_metasprite.src[1] += 8;
      00076A 21r71r01              1807 	ld	hl, #(_dynamic_metasprite + 0x0002)
      00076D 2A                    1808 	ld	a, (hl+)
      00076E 4F                    1809 	ld	c, a
      00076F 46                    1810 	ld	b, (hl)
      000770 21 08 00              1811 	ld	hl, #0x0008
      000773 09                    1812 	add	hl, bc
      000774 4D                    1813 	ld	c, l
      000775 44                    1814 	ld	b, h
      000776 21r71r01              1815 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000779 79                    1816 	ld	a, c
      00077A 22                    1817 	ld	(hl+), a
      00077B 70                    1818 	ld	(hl), b
                                   1819 ;src/main.c:446: draw_card_top(dynamic_metasprite.data[1] / 8u, dynamic_metasprite.src[1] / 8u, card->data);
      00077C F8 02                 1820 	ldhl	sp,#2
      00077E 2A                    1821 	ld	a, (hl+)
      00077F 5F                    1822 	ld	e, a
      000780 56                    1823 	ld	d, (hl)
      000781 1A                    1824 	ld	a, (de)
      000782 77                    1825 	ld	(hl), a
      000783 CB 38                 1826 	srl	b
      000785 CB 19                 1827 	rr	c
      000787 CB 38                 1828 	srl	b
      000789 CB 19                 1829 	rr	c
      00078B CB 38                 1830 	srl	b
      00078D CB 19                 1831 	rr	c
      00078F FAr7Dr01              1832 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      000792 5F                    1833 	ld	e, a
      000793 16 00                 1834 	ld	d, #0x00
      000795 CB 3A                 1835 	srl	d
      000797 CB 1B                 1836 	rr	e
      000799 CB 3A                 1837 	srl	d
      00079B CB 1B                 1838 	rr	e
      00079D CB 3A                 1839 	srl	d
      00079F CB 1B                 1840 	rr	e
      0007A1 7E                    1841 	ld	a, (hl)
      0007A2 F5                    1842 	push	af
      0007A3 33                    1843 	inc	sp
      0007A4 51                    1844 	ld	d, c
      0007A5 D5                    1845 	push	de
      0007A6 CDr30r02              1846 	call	_draw_card_top
      0007A9 E8 03                 1847 	add	sp, #3
                                   1848 ;src/main.c:447: dynamic_metasprite.elapsed_frames = 0;
      0007AB 21r78r01              1849 	ld	hl, #(_dynamic_metasprite + 0x0009)
      0007AE 36 00                 1850 	ld	(hl), #0x00
      0007B0                       1851 00104$:
                                   1852 ;src/main.c:448: }
      0007B0 E8 04                 1853 	add	sp, #4
      0007B2 C9                    1854 	ret
                                   1855 ;src/main.c:450: void dynamic_metasprite_move_stack_callback(void)
                                   1856 ;	---------------------------------
                                   1857 ; Function dynamic_metasprite_move_stack_callback
                                   1858 ; ---------------------------------
      0007B3                       1859 _dynamic_metasprite_move_stack_callback::
                                   1860 ;src/main.c:452: if (dynamic_metasprite.data[0] & BITMASK_DYNAMIC_METASPRITE_UNFOLD) {
      0007B3 FAr7Cr01              1861 	ld	a, (#(_dynamic_metasprite + 0x000d) + 0)
      0007B6 07                    1862 	rlca
      0007B7 D2rE7r05              1863 	jp	NC,_dynamic_metasprite_fold_pile
                                   1864 ;src/main.c:453: dynamic_metasprite.src[0] = dynamic_metasprite.data[1];
      0007BA FAr7Dr01              1865 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      0007BD 4F                    1866 	ld	c, a
      0007BE 06 00                 1867 	ld	b, #0x00
      0007C0 21r6Fr01              1868 	ld	hl, #_dynamic_metasprite
      0007C3 79                    1869 	ld	a, c
      0007C4 22                    1870 	ld	(hl+), a
                                   1871 ;src/main.c:454: dynamic_metasprite.src[1] = dynamic_metasprite.data[2] - 8u;
      0007C5 78                    1872 	ld	a, b
      0007C6 22                    1873 	ld	(hl+), a
      0007C7 01r7Er01              1874 	ld	bc, #_dynamic_metasprite + 15
      0007CA 0A                    1875 	ld	a, (bc)
      0007CB 4F                    1876 	ld	c, a
      0007CC 06 00                 1877 	ld	b, #0x00
      0007CE 79                    1878 	ld	a, c
      0007CF C6 F8                 1879 	add	a, #0xf8
      0007D1 4F                    1880 	ld	c, a
      0007D2 78                    1881 	ld	a, b
      0007D3 CE FF                 1882 	adc	a, #0xff
      0007D5 71                    1883 	ld	(hl), c
      0007D6 23                    1884 	inc	hl
      0007D7 77                    1885 	ld	(hl), a
                                   1886 ;src/main.c:455: dynamic_metasprite.dist[0] = 0;
      0007D8 21r73r01              1887 	ld	hl, #(_dynamic_metasprite + 0x0004)
      0007DB AF                    1888 	xor	a, a
      0007DC 22                    1889 	ld	(hl+), a
      0007DD 77                    1890 	ld	(hl), a
                                   1891 ;src/main.c:456: dynamic_metasprite.dist[1] = 8;
      0007DE 21r75r01              1892 	ld	hl, #(_dynamic_metasprite + 0x0006)
      0007E1 3E 08                 1893 	ld	a, #0x08
      0007E3 22                    1894 	ld	(hl+), a
      0007E4 36 00                 1895 	ld	(hl), #0x00
                                   1896 ;src/main.c:457: dynamic_metasprite.target_frames = animation_speeds[ANIMATION_SPEED(settings)].fold_target_frames;
      0007E6 01r77r01              1897 	ld	bc, #_dynamic_metasprite + 8
      0007E9 FAr6Cr01              1898 	ld	a, (#_settings)
      0007EC E6 0C                 1899 	and	a, #0x0c
      0007EE 6F                    1900 	ld	l, a
      0007EF 26 00                 1901 	ld	h, #0x00
      0007F1 CB 2C                 1902 	sra	h
      0007F3 CB 1D                 1903 	rr	l
      0007F5 CB 2C                 1904 	sra	h
      0007F7 CB 1D                 1905 	rr	l
      0007F9 29                    1906 	add	hl, hl
      0007FA 11r8Er01              1907 	ld	de, #_animation_speeds
      0007FD 19                    1908 	add	hl, de
      0007FE 7E                    1909 	ld	a, (hl)
      0007FF 02                    1910 	ld	(bc), a
                                   1911 ;src/main.c:458: dynamic_metasprite.callback = &dynamic_metasprite_unfold_callback;
      000800 21r82r01              1912 	ld	hl, #(_dynamic_metasprite + 0x0013)
      000803 36rD1                 1913 	ld	(hl), #<(_dynamic_metasprite_unfold_callback)
      000805 23                    1914 	inc	hl
      000806 36s06                 1915 	ld	(hl), #>(_dynamic_metasprite_unfold_callback)
                                   1916 ;src/main.c:459: dynamic_metasprite_unfold_callback();
                                   1917 ;src/main.c:461: dynamic_metasprite_fold_pile();
                                   1918 ;src/main.c:463: }
      000808 C3rD1r06              1919 	jp	_dynamic_metasprite_unfold_callback
                                   1920 ;src/main.c:465: void dynamic_metasprite_fold_callback(void)
                                   1921 ;	---------------------------------
                                   1922 ; Function dynamic_metasprite_fold_callback
                                   1923 ; ---------------------------------
      00080B                       1924 _dynamic_metasprite_fold_callback::
      00080B E8 FC                 1925 	add	sp, #-4
                                   1926 ;src/main.c:467: dynamic_metasprite.src[1] -= 8;
      00080D 21r71r01              1927 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000810 2A                    1928 	ld	a, (hl+)
      000811 4F                    1929 	ld	c, a
      000812 46                    1930 	ld	b, (hl)
      000813 79                    1931 	ld	a, c
      000814 C6 F8                 1932 	add	a, #0xf8
      000816 4F                    1933 	ld	c, a
      000817 78                    1934 	ld	a, b
      000818 CE FF                 1935 	adc	a, #0xff
      00081A 47                    1936 	ld	b, a
      00081B 21r71r01              1937 	ld	hl, #(_dynamic_metasprite + 0x0002)
      00081E 79                    1938 	ld	a, c
      00081F 22                    1939 	ld	(hl+), a
      000820 70                    1940 	ld	(hl), b
                                   1941 ;src/main.c:468: dynamic_metasprite.elapsed_frames = 0;
      000821 21r78r01              1942 	ld	hl, #(_dynamic_metasprite + 0x0009)
      000824 36 00                 1943 	ld	(hl), #0x00
                                   1944 ;src/main.c:469: clear_bkg_2x1((UINT8)dynamic_metasprite.src[0] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 2u);
      000826 FAr71r01              1945 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      000829 4F                    1946 	ld	c, a
      00082A 06 00                 1947 	ld	b, #0x00
      00082C CB 38                 1948 	srl	b
      00082E CB 19                 1949 	rr	c
      000830 CB 38                 1950 	srl	b
      000832 CB 19                 1951 	rr	c
      000834 CB 38                 1952 	srl	b
      000836 CB 19                 1953 	rr	c
      000838 0C                    1954 	inc	c
      000839 0C                    1955 	inc	c
      00083A FAr6Fr01              1956 	ld	a, (#_dynamic_metasprite + 0)
      00083D 5F                    1957 	ld	e, a
      00083E 16 00                 1958 	ld	d, #0x00
      000840 CB 3A                 1959 	srl	d
      000842 CB 1B                 1960 	rr	e
      000844 CB 3A                 1961 	srl	d
      000846 CB 1B                 1962 	rr	e
      000848 CB 3A                 1963 	srl	d
      00084A CB 1B                 1964 	rr	e
      00084C 43                    1965 	ld	b, e
                                   1966 ;src/main.c:229: set_bkg_tile_xy(x, y, OFFSET_BKG_NONE);
      00084D AF                    1967 	xor	a, a
      00084E F5                    1968 	push	af
      00084F 33                    1969 	inc	sp
      000850 79                    1970 	ld	a, c
      000851 F5                    1971 	push	af
      000852 33                    1972 	inc	sp
      000853 C5                    1973 	push	bc
      000854 33                    1974 	inc	sp
      000855 CDr00r00              1975 	call	_set_bkg_tile_xy
      000858 E8 03                 1976 	add	sp, #3
                                   1977 ;src/main.c:230: set_bkg_tile_xy(x + 1u, y, OFFSET_BKG_NONE);
      00085A 04                    1978 	inc	b
      00085B AF                    1979 	xor	a, a
      00085C F5                    1980 	push	af
      00085D 33                    1981 	inc	sp
      00085E 79                    1982 	ld	a, c
      00085F F5                    1983 	push	af
      000860 33                    1984 	inc	sp
      000861 C5                    1985 	push	bc
      000862 33                    1986 	inc	sp
      000863 CDr00r00              1987 	call	_set_bkg_tile_xy
      000866 E8 03                 1988 	add	sp, #3
                                   1989 ;src/main.c:470: if (dynamic_metasprite.data[0] & ~BITMASK_DYNAMIC_METASPRITE_UNFOLD) {
      000868 01r7Cr01              1990 	ld	bc, #_dynamic_metasprite + 13
      00086B 0A                    1991 	ld	a, (bc)
      00086C 5F                    1992 	ld	e, a
      00086D E6 7F                 1993 	and	a, #0x7f
      00086F 28 06                 1994 	jr	Z, 00105$
                                   1995 ;src/main.c:471: dynamic_metasprite.data[0]--;
      000871 7B                    1996 	ld	a, e
      000872 3D                    1997 	dec	a
      000873 02                    1998 	ld	(bc), a
      000874 C3r3Dr09              1999 	jp	00109$
      000877                       2000 00105$:
                                   2001 ;src/main.c:473: if (cursor.card_to_show) {
      000877 21r86r01              2002 	ld	hl, #(_cursor + 0x0002)
      00087A 2A                    2003 	ld	a, (hl+)
      00087B 4F                    2004 	ld	c, a
      00087C 46                    2005 	ld	b, (hl)
                                   2006 ;src/main.c:469: clear_bkg_2x1((UINT8)dynamic_metasprite.src[0] / 8u, (UINT8)dynamic_metasprite.src[1] / 8u + 2u);
      00087D 11r71r01              2007 	ld	de, #(_dynamic_metasprite + 0x0002)
      000880 1A                    2008 	ld	a, (de)
      000881 F8 02                 2009 	ldhl	sp,	#2
      000883 22                    2010 	ld	(hl+), a
      000884 13                    2011 	inc	de
      000885 1A                    2012 	ld	a, (de)
      000886 77                    2013 	ld	(hl), a
      000887 11r6Fr01              2014 	ld	de, #_dynamic_metasprite
      00088A 1A                    2015 	ld	a, (de)
      00088B F8 00                 2016 	ldhl	sp,	#0
      00088D 22                    2017 	ld	(hl+), a
      00088E 13                    2018 	inc	de
      00088F 1A                    2019 	ld	a, (de)
      000890 77                    2020 	ld	(hl), a
                                   2021 ;src/main.c:474: draw_card(dynamic_metasprite.src[0] / 8u, dynamic_metasprite.src[1] / 8u - 1u, cursor.card_to_show->data);
      000891 D1                    2022 	pop	de
      000892 D5                    2023 	push	de
      000893 23                    2024 	inc	hl
      000894 23                    2025 	inc	hl
      000895 CB 3E                 2026 	srl	(hl)
      000897 2B                    2027 	dec	hl
      000898 CB 1E                 2028 	rr	(hl)
      00089A 23                    2029 	inc	hl
      00089B CB 3E                 2030 	srl	(hl)
      00089D 2B                    2031 	dec	hl
      00089E CB 1E                 2032 	rr	(hl)
      0008A0 23                    2033 	inc	hl
      0008A1 CB 3E                 2034 	srl	(hl)
      0008A3 2B                    2035 	dec	hl
      0008A4 CB 1E                 2036 	rr	(hl)
      0008A6 CB 3A                 2037 	srl	d
      0008A8 CB 1B                 2038 	rr	e
      0008AA CB 3A                 2039 	srl	d
      0008AC CB 1B                 2040 	rr	e
      0008AE CB 3A                 2041 	srl	d
      0008B0 CB 1B                 2042 	rr	e
      0008B2 6E                    2043 	ld	l, (hl)
                                   2044 ;src/main.c:473: if (cursor.card_to_show) {
      0008B3 78                    2045 	ld	a, b
      0008B4 B1                    2046 	or	a, c
      0008B5 28 27                 2047 	jr	Z, 00102$
                                   2048 ;src/main.c:474: draw_card(dynamic_metasprite.src[0] / 8u, dynamic_metasprite.src[1] / 8u - 1u, cursor.card_to_show->data);
      0008B7 03                    2049 	inc	bc
      0008B8 03                    2050 	inc	bc
      0008B9 0A                    2051 	ld	a, (bc)
      0008BA 47                    2052 	ld	b, a
      0008BB 55                    2053 	ld	d, l
      0008BC 15                    2054 	dec	d
                                   2055 ;src/main.c:254: draw_card_top(x, y, card_data);
      0008BD C5                    2056 	push	bc
      0008BE D5                    2057 	push	de
      0008BF 4A                    2058 	ld	c, d
      0008C0 C5                    2059 	push	bc
      0008C1 7B                    2060 	ld	a, e
      0008C2 F5                    2061 	push	af
      0008C3 33                    2062 	inc	sp
      0008C4 CDr30r02              2063 	call	_draw_card_top
      0008C7 E8 03                 2064 	add	sp, #3
      0008C9 D1                    2065 	pop	de
      0008CA C1                    2066 	pop	bc
                                   2067 ;src/main.c:255: draw_card_bottom(x, y + 1u, card_data);
      0008CB 7A                    2068 	ld	a, d
      0008CC 3C                    2069 	inc	a
      0008CD C5                    2070 	push	bc
      0008CE 33                    2071 	inc	sp
      0008CF 57                    2072 	ld	d,a
      0008D0 D5                    2073 	push	de
      0008D1 CDr9Dr02              2074 	call	_draw_card_bottom
      0008D4 E8 03                 2075 	add	sp, #3
                                   2076 ;src/main.c:475: cursor.card_to_show = NULL;
      0008D6 21r86r01              2077 	ld	hl, #(_cursor + 0x0002)
      0008D9 AF                    2078 	xor	a, a
      0008DA 22                    2079 	ld	(hl+), a
      0008DB 77                    2080 	ld	(hl), a
      0008DC 18 0C                 2081 	jr	00103$
      0008DE                       2082 00102$:
                                   2083 ;src/main.c:477: draw_sequential_card(dynamic_metasprite.src[0] / 8u, dynamic_metasprite.src[1] / 8u, OFFSET_BKG_CARD + OFFSET_CARD_OUTLINE);
      0008DE 3E AE                 2084 	ld	a, #0xae
      0008E0 F5                    2085 	push	af
      0008E1 7D                    2086 	ld	a, l
      0008E2 33                    2087 	inc	sp
      0008E3 57                    2088 	ld	d,a
      0008E4 D5                    2089 	push	de
      0008E5 CDr66r03              2090 	call	_draw_sequential_card
      0008E8 E8 03                 2091 	add	sp, #3
      0008EA                       2092 00103$:
                                   2093 ;src/main.c:479: dynamic_metasprite.dist[0] = (INT16)dynamic_metasprite.data[1] - dynamic_metasprite.src[0];
      0008EA FAr7Dr01              2094 	ld	a, (#(_dynamic_metasprite + 0x000e) + 0)
      0008ED 4F                    2095 	ld	c, a
      0008EE 06 00                 2096 	ld	b, #0x00
      0008F0 21r6Fr01              2097 	ld	hl, #_dynamic_metasprite
      0008F3 2A                    2098 	ld	a, (hl+)
      0008F4 66                    2099 	ld	h, (hl)
      0008F5 6F                    2100 	ld	l, a
      0008F6 79                    2101 	ld	a, c
      0008F7 95                    2102 	sub	a, l
      0008F8 4F                    2103 	ld	c, a
      0008F9 78                    2104 	ld	a, b
      0008FA 9C                    2105 	sbc	a, h
      0008FB 47                    2106 	ld	b, a
      0008FC 21r73r01              2107 	ld	hl, #(_dynamic_metasprite + 0x0004)
      0008FF 79                    2108 	ld	a, c
      000900 22                    2109 	ld	(hl+), a
      000901 70                    2110 	ld	(hl), b
                                   2111 ;src/main.c:480: dynamic_metasprite.dist[1] = (INT16)dynamic_metasprite.data[2] - dynamic_metasprite.src[1];
      000902 FAr7Er01              2112 	ld	a, (#(_dynamic_metasprite + 0x000f) + 0)
      000905 4F                    2113 	ld	c, a
      000906 06 00                 2114 	ld	b, #0x00
      000908 21r71r01              2115 	ld	hl, #(_dynamic_metasprite + 0x0002)
      00090B 2A                    2116 	ld	a, (hl+)
      00090C 66                    2117 	ld	h, (hl)
      00090D 6F                    2118 	ld	l, a
      00090E 79                    2119 	ld	a, c
      00090F 95                    2120 	sub	a, l
      000910 4F                    2121 	ld	c, a
      000911 78                    2122 	ld	a, b
      000912 9C                    2123 	sbc	a, h
      000913 47                    2124 	ld	b, a
      000914 21r75r01              2125 	ld	hl, #(_dynamic_metasprite + 0x0006)
      000917 79                    2126 	ld	a, c
      000918 22                    2127 	ld	(hl+), a
      000919 70                    2128 	ld	(hl), b
                                   2129 ;src/main.c:481: dynamic_metasprite.target_frames = animation_speeds[ANIMATION_SPEED(settings)].move_target_frames;
      00091A 01r77r01              2130 	ld	bc, #_dynamic_metasprite + 8
      00091D FAr6Cr01              2131 	ld	a, (#_settings)
      000920 E6 0C                 2132 	and	a, #0x0c
      000922 6F                    2133 	ld	l, a
      000923 26 00                 2134 	ld	h, #0x00
      000925 CB 2C                 2135 	sra	h
      000927 CB 1D                 2136 	rr	l
      000929 CB 2C                 2137 	sra	h
      00092B CB 1D                 2138 	rr	l
      00092D 29                    2139 	add	hl, hl
      00092E 11r8Er01              2140 	ld	de, #_animation_speeds
      000931 19                    2141 	add	hl, de
      000932 23                    2142 	inc	hl
      000933 7E                    2143 	ld	a, (hl)
      000934 02                    2144 	ld	(bc), a
                                   2145 ;src/main.c:482: dynamic_metasprite.callback = &dynamic_metasprite_move_stack_callback;
      000935 21r82r01              2146 	ld	hl, #(_dynamic_metasprite + 0x0013)
      000938 36rB3                 2147 	ld	(hl), #<(_dynamic_metasprite_move_stack_callback)
      00093A 23                    2148 	inc	hl
      00093B 36s07                 2149 	ld	(hl), #>(_dynamic_metasprite_move_stack_callback)
      00093D                       2150 00109$:
                                   2151 ;src/main.c:485: }
      00093D E8 04                 2152 	add	sp, #4
      00093F C9                    2153 	ret
                                   2154 ;src/main.c:487: void dynamic_metasprite_fold(const UINT8 top_card_data, const UINT8 src_x, const UINT8 src_y, const UINT8 dest_x, const UINT8 dest_y, const UINT8 stack_height, const Card *base_card, const UINT8 unfold, const UINT8 piles_to_clear)
                                   2155 ;	---------------------------------
                                   2156 ; Function dynamic_metasprite_fold
                                   2157 ; ---------------------------------
      000940                       2158 _dynamic_metasprite_fold::
                                   2159 ;src/main.c:489: set_metasprite_card(top_card_data);
      000940 F8 02                 2160 	ldhl	sp,	#2
      000942 7E                    2161 	ld	a, (hl)
      000943 F5                    2162 	push	af
      000944 33                    2163 	inc	sp
      000945 CDrA4r05              2164 	call	_set_metasprite_card
      000948 33                    2165 	inc	sp
                                   2166 ;src/main.c:491: dynamic_metasprite.metasprite = metasprite_custom_2x3;
      000949 21r79r01              2167 	ld	hl, #(_dynamic_metasprite + 0x000a)
      00094C 36r00                 2168 	ld	(hl), #<(_metasprite_custom_2x3)
      00094E 23                    2169 	inc	hl
      00094F 36s00                 2170 	ld	(hl), #>(_metasprite_custom_2x3)
                                   2171 ;src/main.c:492: dynamic_metasprite.metasprite_offset = OFFSET_SPRITE_CARD;
      000951 21r7Br01              2172 	ld	hl, #(_dynamic_metasprite + 0x000c)
      000954 36 80                 2173 	ld	(hl), #0x80
                                   2174 ;src/main.c:494: dynamic_metasprite.data[0] = (stack_height - 1u) | unfold;
      000956 01r7Cr01              2175 	ld	bc, #_dynamic_metasprite + 13
      000959 F8 07                 2176 	ldhl	sp,	#7
      00095B 7E                    2177 	ld	a, (hl)
      00095C 3D                    2178 	dec	a
      00095D F8 0A                 2179 	ldhl	sp,	#10
      00095F B6                    2180 	or	a, (hl)
      000960 02                    2181 	ld	(bc), a
                                   2182 ;src/main.c:495: dynamic_metasprite.data[1] = dest_x;
      000961 11r7Dr01              2183 	ld	de, #(_dynamic_metasprite + 0x000e)
      000964 F8 05                 2184 	ldhl	sp,	#5
      000966 7E                    2185 	ld	a, (hl)
      000967 12                    2186 	ld	(de), a
                                   2187 ;src/main.c:496: dynamic_metasprite.data[2] = dest_y;
      000968 11r7Er01              2188 	ld	de, #(_dynamic_metasprite + 0x000f)
      00096B 23                    2189 	inc	hl
      00096C 7E                    2190 	ld	a, (hl)
      00096D 12                    2191 	ld	(de), a
                                   2192 ;src/main.c:497: dynamic_metasprite.data[3] = piles_to_clear;
      00096E 11r7Fr01              2193 	ld	de, #(_dynamic_metasprite + 0x0010)
      000971 F8 0B                 2194 	ldhl	sp,	#11
      000973 7E                    2195 	ld	a, (hl)
      000974 12                    2196 	ld	(de), a
                                   2197 ;src/main.c:498: dynamic_metasprite.data_ptr = base_card;
      000975 2B                    2198 	dec	hl
      000976 2B                    2199 	dec	hl
      000977 2B                    2200 	dec	hl
      000978 2A                    2201 	ld	a, (hl+)
      000979 4F                    2202 	ld	c, a
      00097A 46                    2203 	ld	b, (hl)
      00097B 21r80r01              2204 	ld	hl, #(_dynamic_metasprite + 0x0011)
      00097E 79                    2205 	ld	a, c
      00097F 22                    2206 	ld	(hl+), a
      000980 70                    2207 	ld	(hl), b
                                   2208 ;src/main.c:500: dynamic_metasprite.src[0] = src_x;
      000981 F8 03                 2209 	ldhl	sp,	#3
      000983 4E                    2210 	ld	c, (hl)
      000984 06 00                 2211 	ld	b, #0x00
      000986 21r6Fr01              2212 	ld	hl, #_dynamic_metasprite
      000989 79                    2213 	ld	a, c
      00098A 22                    2214 	ld	(hl+), a
      00098B 70                    2215 	ld	(hl), b
                                   2216 ;src/main.c:501: dynamic_metasprite.src[1] = src_y + 8u;
      00098C F8 04                 2217 	ldhl	sp,	#4
      00098E 4E                    2218 	ld	c, (hl)
      00098F 06 00                 2219 	ld	b, #0x00
      000991 79                    2220 	ld	a, c
      000992 C6 08                 2221 	add	a, #0x08
      000994 4F                    2222 	ld	c, a
      000995 30 01                 2223 	jr	NC, 00110$
      000997 04                    2224 	inc	b
      000998                       2225 00110$:
      000998 21r71r01              2226 	ld	hl, #(_dynamic_metasprite + 0x0002)
      00099B 79                    2227 	ld	a, c
      00099C 22                    2228 	ld	(hl+), a
      00099D 70                    2229 	ld	(hl), b
                                   2230 ;src/main.c:503: flags |= FLAG_PLAYING_ANIMATION;
      00099E 21r6Br01              2231 	ld	hl, #_flags
      0009A1 7E                    2232 	ld	a, (hl)
      0009A2 F6 04                 2233 	or	a, #0x04
      0009A4 77                    2234 	ld	(hl), a
                                   2235 ;src/main.c:505: if (stack_height > 1) {
      0009A5 3E 01                 2236 	ld	a, #0x01
      0009A7 F8 07                 2237 	ldhl	sp,	#7
      0009A9 96                    2238 	sub	a, (hl)
      0009AA D2r0Br08              2239 	jp	NC,_dynamic_metasprite_fold_callback
                                   2240 ;src/main.c:506: dynamic_metasprite.dist[0] = 0;
      0009AD 21r73r01              2241 	ld	hl, #(_dynamic_metasprite + 0x0004)
      0009B0 AF                    2242 	xor	a, a
      0009B1 22                    2243 	ld	(hl+), a
      0009B2 77                    2244 	ld	(hl), a
                                   2245 ;src/main.c:507: dynamic_metasprite.dist[1] = -8;
      0009B3 21r75r01              2246 	ld	hl, #(_dynamic_metasprite + 0x0006)
      0009B6 3E F8                 2247 	ld	a, #0xf8
      0009B8 22                    2248 	ld	(hl+), a
      0009B9 36 FF                 2249 	ld	(hl), #0xff
                                   2250 ;src/main.c:508: dynamic_metasprite.target_frames = animation_speeds[ANIMATION_SPEED(settings)].fold_target_frames;
      0009BB 01r77r01              2251 	ld	bc, #_dynamic_metasprite + 8
      0009BE FAr6Cr01              2252 	ld	a, (#_settings)
      0009C1 E6 0C                 2253 	and	a, #0x0c
      0009C3 6F                    2254 	ld	l, a
      0009C4 26 00                 2255 	ld	h, #0x00
      0009C6 CB 2C                 2256 	sra	h
      0009C8 CB 1D                 2257 	rr	l
      0009CA CB 2C                 2258 	sra	h
      0009CC CB 1D                 2259 	rr	l
      0009CE 29                    2260 	add	hl, hl
      0009CF 11r8Er01              2261 	ld	de, #_animation_speeds
      0009D2 19                    2262 	add	hl, de
      0009D3 7E                    2263 	ld	a, (hl)
      0009D4 02                    2264 	ld	(bc), a
                                   2265 ;src/main.c:509: dynamic_metasprite.callback = &dynamic_metasprite_fold_callback;
      0009D5 21r82r01              2266 	ld	hl, #(_dynamic_metasprite + 0x0013)
      0009D8 36r0B                 2267 	ld	(hl), #<(_dynamic_metasprite_fold_callback)
      0009DA 23                    2268 	inc	hl
      0009DB 36s08                 2269 	ld	(hl), #>(_dynamic_metasprite_fold_callback)
                                   2270 ;src/main.c:511: dynamic_metasprite_fold_callback();
                                   2271 ;src/main.c:512: }
      0009DD C3r0Br08              2272 	jp  _dynamic_metasprite_fold_callback
                                   2273 ;src/main.c:514: void pile_append_cursor_stack(Pile *pile)
                                   2274 ;	---------------------------------
                                   2275 ; Function pile_append_cursor_stack
                                   2276 ; ---------------------------------
      0009E0                       2277 _pile_append_cursor_stack::
      0009E0 E8 F3                 2278 	add	sp, #-13
                                   2279 ;src/main.c:516: if (pile->height)
      0009E2 F8 0F                 2280 	ldhl	sp,	#15
      0009E4 2A                    2281 	ld	a, (hl+)
      0009E5 5E                    2282 	ld	e, (hl)
      0009E6 F8 00                 2283 	ldhl	sp,	#0
      0009E8 22                    2284 	ld	(hl+), a
      0009E9 73                    2285 	ld	(hl), e
                                   2286 ;c
      0009EA D1                    2287 	pop	de
      0009EB D5                    2288 	push	de
      0009EC 21 04 00              2289 	ld	hl, #0x0004
      0009EF 19                    2290 	add	hl, de
      0009F0 E5                    2291 	push	hl
      0009F1 7D                    2292 	ld	a, l
      0009F2 F8 04                 2293 	ldhl	sp,	#4
      0009F4 77                    2294 	ld	(hl), a
      0009F5 E1                    2295 	pop	hl
      0009F6 7C                    2296 	ld	a, h
      0009F7 F8 03                 2297 	ldhl	sp,	#3
      0009F9 32                    2298 	ld	(hl-), a
      0009FA 2A                    2299 	ld	a, (hl+)
      0009FB 5F                    2300 	ld	e, a
      0009FC 56                    2301 	ld	d, (hl)
      0009FD 1A                    2302 	ld	a, (de)
      0009FE F8 0C                 2303 	ldhl	sp,	#12
      000A00 77                    2304 	ld	(hl), a
                                   2305 ;src/main.c:517: pile->top->next_card = cursor.held_card;
                                   2306 ;c
      000A01 D1                    2307 	pop	de
      000A02 D5                    2308 	push	de
      000A03 21 02 00              2309 	ld	hl, #0x0002
      000A06 19                    2310 	add	hl, de
      000A07 E5                    2311 	push	hl
      000A08 7D                    2312 	ld	a, l
      000A09 F8 06                 2313 	ldhl	sp,	#6
      000A0B 77                    2314 	ld	(hl), a
      000A0C E1                    2315 	pop	hl
      000A0D 7C                    2316 	ld	a, h
      000A0E F8 05                 2317 	ldhl	sp,	#5
      000A10 77                    2318 	ld	(hl), a
                                   2319 ;src/main.c:516: if (pile->height)
      000A11 F8 0C                 2320 	ldhl	sp,	#12
      000A13 7E                    2321 	ld	a, (hl)
      000A14 B7                    2322 	or	a, a
      000A15 28 1C                 2323 	jr	Z, 00102$
                                   2324 ;src/main.c:517: pile->top->next_card = cursor.held_card;
      000A17 F8 04                 2325 	ldhl	sp,#4
      000A19 2A                    2326 	ld	a, (hl+)
      000A1A 5F                    2327 	ld	e, a
      000A1B 56                    2328 	ld	d, (hl)
      000A1C 1A                    2329 	ld	a, (de)
      000A1D F8 0B                 2330 	ldhl	sp,	#11
      000A1F 22                    2331 	ld	(hl+), a
      000A20 13                    2332 	inc	de
      000A21 1A                    2333 	ld	a, (de)
      000A22 77                    2334 	ld	(hl), a
      000A23 21r84r01              2335 	ld	hl, #_cursor
      000A26 2A                    2336 	ld	a, (hl+)
      000A27 4F                    2337 	ld	c, a
      000A28 46                    2338 	ld	b, (hl)
      000A29 F8 0B                 2339 	ldhl	sp,	#11
      000A2B 2A                    2340 	ld	a, (hl+)
      000A2C 66                    2341 	ld	h, (hl)
      000A2D 6F                    2342 	ld	l, a
      000A2E 79                    2343 	ld	a, c
      000A2F 22                    2344 	ld	(hl+), a
      000A30 70                    2345 	ld	(hl), b
      000A31 18 13                 2346 	jr	00103$
      000A33                       2347 00102$:
                                   2348 ;src/main.c:519: pile->base = cursor.held_card;
      000A33 11r84r01              2349 	ld	de, #_cursor
      000A36 1A                    2350 	ld	a, (de)
      000A37 F8 0B                 2351 	ldhl	sp,	#11
      000A39 22                    2352 	ld	(hl+), a
      000A3A 13                    2353 	inc	de
      000A3B 1A                    2354 	ld	a, (de)
      000A3C 77                    2355 	ld	(hl), a
      000A3D D1                    2356 	pop	de
      000A3E D5                    2357 	push	de
      000A3F 2B                    2358 	dec	hl
      000A40 7E                    2359 	ld	a, (hl)
      000A41 12                    2360 	ld	(de), a
      000A42 13                    2361 	inc	de
      000A43 23                    2362 	inc	hl
      000A44 7E                    2363 	ld	a, (hl)
      000A45 12                    2364 	ld	(de), a
      000A46                       2365 00103$:
                                   2366 ;src/main.c:521: Pile *src_pile = IDX_PTR(piles, cursor.pile_idx);
      000A46 01r38r01              2367 	ld	bc, #_piles+0
      000A49 FAr8Ar01              2368 	ld	a, (#(_cursor + 0x0006) + 0)
      000A4C 5F                    2369 	ld	e, a
      000A4D 16 00                 2370 	ld	d, #0x00
      000A4F 6B                    2371 	ld	l, e
      000A50 62                    2372 	ld	h, d
      000A51 29                    2373 	add	hl, hl
      000A52 29                    2374 	add	hl, hl
      000A53 19                    2375 	add	hl, de
      000A54 09                    2376 	add	hl, bc
      000A55 4D                    2377 	ld	c, l
      000A56 7C                    2378 	ld	a, h
      000A57 F8 06                 2379 	ldhl	sp,	#6
      000A59 71                    2380 	ld	(hl), c
      000A5A 23                    2381 	inc	hl
      000A5B 77                    2382 	ld	(hl), a
                                   2383 ;src/main.c:522: Card *top_card = cursor.held_card;
      000A5C 11r84r01              2384 	ld	de, #_cursor
      000A5F 1A                    2385 	ld	a, (de)
      000A60 23                    2386 	inc	hl
      000A61 22                    2387 	ld	(hl+), a
      000A62 13                    2388 	inc	de
      000A63 1A                    2389 	ld	a, (de)
      000A64 77                    2390 	ld	(hl), a
                                   2391 ;src/main.c:523: while (top_card->next_card)
      000A65                       2392 00104$:
      000A65 F8 08                 2393 	ldhl	sp,#8
      000A67 2A                    2394 	ld	a, (hl+)
      000A68 5F                    2395 	ld	e, a
      000A69 56                    2396 	ld	d, (hl)
      000A6A 1A                    2397 	ld	a, (de)
      000A6B 23                    2398 	inc	hl
      000A6C 23                    2399 	inc	hl
      000A6D 22                    2400 	ld	(hl+), a
      000A6E 13                    2401 	inc	de
      000A6F 1A                    2402 	ld	a, (de)
      000A70 77                    2403 	ld	(hl), a
      000A71 3A                    2404 	ld	a, (hl-)
      000A72 B6                    2405 	or	a, (hl)
      000A73 28 08                 2406 	jr	Z, 00106$
                                   2407 ;src/main.c:524: top_card = top_card->next_card;
      000A75 2A                    2408 	ld	a, (hl+)
      000A76 5E                    2409 	ld	e, (hl)
      000A77 F8 08                 2410 	ldhl	sp,	#8
      000A79 22                    2411 	ld	(hl+), a
      000A7A 73                    2412 	ld	(hl), e
      000A7B 18 E8                 2413 	jr	00104$
      000A7D                       2414 00106$:
                                   2415 ;src/main.c:525: pile->top = top_card;
      000A7D F8 04                 2416 	ldhl	sp,#4
      000A7F 2A                    2417 	ld	a, (hl+)
      000A80 5F                    2418 	ld	e, a
      000A81 56                    2419 	ld	d, (hl)
      000A82 F8 08                 2420 	ldhl	sp,	#8
      000A84 7E                    2421 	ld	a, (hl)
      000A85 12                    2422 	ld	(de), a
      000A86 13                    2423 	inc	de
      000A87 23                    2424 	inc	hl
      000A88 7E                    2425 	ld	a, (hl)
      000A89 12                    2426 	ld	(de), a
                                   2427 ;src/main.c:526: cursor.height = pile->height - !!pile->height;
      000A8A F8 02                 2428 	ldhl	sp,#2
      000A8C 2A                    2429 	ld	a, (hl+)
      000A8D 5F                    2430 	ld	e, a
      000A8E 56                    2431 	ld	d, (hl)
      000A8F 1A                    2432 	ld	a, (de)
      000A90 47                    2433 	ld	b, a
      000A91 D6 01                 2434 	sub	a,#0x01
      000A93 3E 00                 2435 	ld	a, #0x00
      000A95 17                    2436 	rla
      000A96 EE 01                 2437 	xor	a, #0x01
      000A98 4F                    2438 	ld	c, a
      000A99 78                    2439 	ld	a, b
      000A9A 91                    2440 	sub	a, c
      000A9B EAr8Br01              2441 	ld	(#(_cursor + 0x0007)),a
                                   2442 ;src/main.c:527: pile->height += cursor.held_stack_size;
      000A9E F8 02                 2443 	ldhl	sp,#2
      000AA0 2A                    2444 	ld	a, (hl+)
      000AA1 5F                    2445 	ld	e, a
      000AA2 56                    2446 	ld	d, (hl)
      000AA3 1A                    2447 	ld	a, (de)
      000AA4 4F                    2448 	ld	c, a
      000AA5 FAr88r01              2449 	ld	a, (#(_cursor + 0x0004) + 0)
      000AA8 81                    2450 	add	a, c
      000AA9 4F                    2451 	ld	c, a
      000AAA 2B                    2452 	dec	hl
      000AAB 2A                    2453 	ld	a, (hl+)
      000AAC 66                    2454 	ld	h, (hl)
      000AAD 6F                    2455 	ld	l, a
      000AAE 71                    2456 	ld	(hl), c
                                   2457 ;src/main.c:528: if (cursor.hand_pile_idx != cursor.pile_idx) {
      000AAF FAr89r01              2458 	ld	a, (#(_cursor + 0x0005) + 0)
      000AB2 21r8Ar01              2459 	ld	hl, #(_cursor + 0x0006)
      000AB5 4E                    2460 	ld	c, (hl)
      000AB6 91                    2461 	sub	a, c
      000AB7 CArB1r0B              2462 	jp	Z,00116$
                                   2463 ;src/main.c:529: UINT8 piles_to_clear = 0;
      000ABA AF                    2464 	xor	a, a
      000ABB F8 0C                 2465 	ldhl	sp,	#12
      000ABD 77                    2466 	ld	(hl), a
                                   2467 ;src/main.c:530: if (src_pile->height == 13u && is_stack_coherent(src_pile->base)) {
                                   2468 ;c
      000ABE F8 06                 2469 	ldhl	sp,#6
      000AC0 2A                    2470 	ld	a, (hl+)
      000AC1 5F                    2471 	ld	e, a
      000AC2 56                    2472 	ld	d, (hl)
      000AC3 21 04 00              2473 	ld	hl, #0x0004
      000AC6 19                    2474 	add	hl, de
      000AC7 E5                    2475 	push	hl
      000AC8 7D                    2476 	ld	a, l
      000AC9 F8 0C                 2477 	ldhl	sp,	#12
      000ACB 77                    2478 	ld	(hl), a
      000ACC E1                    2479 	pop	hl
      000ACD 7C                    2480 	ld	a, h
      000ACE F8 0B                 2481 	ldhl	sp,	#11
      000AD0 32                    2482 	ld	(hl-), a
      000AD1 2A                    2483 	ld	a, (hl+)
      000AD2 5F                    2484 	ld	e, a
      000AD3 56                    2485 	ld	d, (hl)
      000AD4 1A                    2486 	ld	a, (de)
      000AD5 D6 0D                 2487 	sub	a, #0x0d
      000AD7 20 1A                 2488 	jr	NZ, 00108$
      000AD9 F8 06                 2489 	ldhl	sp,#6
      000ADB 2A                    2490 	ld	a, (hl+)
      000ADC 5F                    2491 	ld	e, a
      000ADD 56                    2492 	ld	d, (hl)
      000ADE 1A                    2493 	ld	a, (de)
      000ADF 4F                    2494 	ld	c, a
      000AE0 13                    2495 	inc	de
      000AE1 1A                    2496 	ld	a, (de)
      000AE2 47                    2497 	ld	b, a
      000AE3 C5                    2498 	push	bc
      000AE4 CDr45r04              2499 	call	_is_stack_coherent
      000AE7 E8 02                 2500 	add	sp, #2
      000AE9 7B                    2501 	ld	a, e
      000AEA B7                    2502 	or	a, a
      000AEB 28 06                 2503 	jr	Z, 00108$
                                   2504 ;src/main.c:531: piles_to_clear = cursor.pile_idx;
      000AED FAr8Ar01              2505 	ld	a, (#(_cursor + 0x0006) + 0)
      000AF0 F8 0C                 2506 	ldhl	sp,	#12
      000AF2 77                    2507 	ld	(hl), a
      000AF3                       2508 00108$:
                                   2509 ;src/main.c:533: if (pile->height == 13u && is_stack_coherent(pile->base)) {
      000AF3 F8 02                 2510 	ldhl	sp,#2
      000AF5 2A                    2511 	ld	a, (hl+)
      000AF6 5F                    2512 	ld	e, a
      000AF7 56                    2513 	ld	d, (hl)
      000AF8 1A                    2514 	ld	a, (de)
      000AF9 D6 0D                 2515 	sub	a, #0x0d
      000AFB 20 32                 2516 	jr	NZ, 00111$
      000AFD D1                    2517 	pop	de
      000AFE D5                    2518 	push	de
      000AFF 1A                    2519 	ld	a, (de)
      000B00 4F                    2520 	ld	c, a
      000B01 13                    2521 	inc	de
      000B02 1A                    2522 	ld	a, (de)
      000B03 47                    2523 	ld	b, a
      000B04 C5                    2524 	push	bc
      000B05 CDr45r04              2525 	call	_is_stack_coherent
      000B08 E8 02                 2526 	add	sp, #2
      000B0A 7B                    2527 	ld	a, e
      000B0B B7                    2528 	or	a, a
      000B0C 28 21                 2529 	jr	Z, 00111$
                                   2530 ;src/main.c:534: cursor.height = 0;
      000B0E 21r8Br01              2531 	ld	hl, #(_cursor + 0x0007)
      000B11 36 00                 2532 	ld	(hl), #0x00
                                   2533 ;src/main.c:528: if (cursor.hand_pile_idx != cursor.pile_idx) {
      000B13 FAr89r01              2534 	ld	a, (#(_cursor + 0x0005) + 0)
      000B16 F8 07                 2535 	ldhl	sp,	#7
      000B18 77                    2536 	ld	(hl), a
                                   2537 ;src/main.c:535: piles_to_clear |= piles_to_clear ? cursor.hand_pile_idx << 4u : cursor.hand_pile_idx;
      000B19 F8 0C                 2538 	ldhl	sp,	#12
      000B1B 7E                    2539 	ld	a, (hl)
      000B1C B7                    2540 	or	a, a
      000B1D 28 09                 2541 	jr	Z, 00119$
      000B1F F8 07                 2542 	ldhl	sp,	#7
      000B21 7E                    2543 	ld	a, (hl)
      000B22 CB 37                 2544 	swap	a
      000B24 E6 F0                 2545 	and	a, #0xf0
      000B26 18 03                 2546 	jr	00120$
      000B28                       2547 00119$:
      000B28 F8 07                 2548 	ldhl	sp,	#7
      000B2A 7E                    2549 	ld	a, (hl)
      000B2B                       2550 00120$:
      000B2B F8 0C                 2551 	ldhl	sp,	#12
      000B2D B6                    2552 	or	a, (hl)
      000B2E 77                    2553 	ld	(hl), a
      000B2F                       2554 00111$:
                                   2555 ;src/main.c:538: if (cursor.card_to_show)
      000B2F 11r86r01              2556 	ld	de, #(_cursor + 0x0002)
      000B32 1A                    2557 	ld	a, (de)
      000B33 F8 06                 2558 	ldhl	sp,	#6
      000B35 22                    2559 	ld	(hl+), a
      000B36 13                    2560 	inc	de
      000B37 1A                    2561 	ld	a, (de)
      000B38 77                    2562 	ld	(hl), a
      000B39 3A                    2563 	ld	a, (hl-)
      000B3A B6                    2564 	or	a, (hl)
      000B3B 28 07                 2565 	jr	Z, 00114$
                                   2566 ;src/main.c:539: cursor.card_to_show->data |= BITMASK_DATA_VISIBLE;
      000B3D 2A                    2567 	ld	a, (hl+)
      000B3E 66                    2568 	ld	h, (hl)
      000B3F 6F                    2569 	ld	l, a
      000B40 23                    2570 	inc	hl
      000B41 23                    2571 	inc	hl
      000B42 CB F6                 2572 	set	6, (hl)
      000B44                       2573 00114$:
                                   2574 ;src/main.c:545: cursor.held_card,
      000B44 11r84r01              2575 	ld	de, #_cursor
      000B47 1A                    2576 	ld	a, (de)
      000B48 F8 06                 2577 	ldhl	sp,	#6
      000B4A 22                    2578 	ld	(hl+), a
      000B4B 13                    2579 	inc	de
      000B4C 1A                    2580 	ld	a, (de)
      000B4D 77                    2581 	ld	(hl), a
                                   2582 ;src/main.c:544: cursor.held_stack_size,
      000B4E 21r88r01              2583 	ld	hl, #(_cursor + 0x0004)
      000B51 4E                    2584 	ld	c, (hl)
                                   2585 ;src/main.c:543: (pile->height + 3u - cursor.held_stack_size) * 8u,
      000B52 F8 02                 2586 	ldhl	sp,#2
      000B54 2A                    2587 	ld	a, (hl+)
      000B55 5F                    2588 	ld	e, a
      000B56 56                    2589 	ld	d, (hl)
      000B57 1A                    2590 	ld	a, (de)
      000B58 C6 03                 2591 	add	a, #0x03
      000B5A 91                    2592 	sub	a, c
      000B5B 87                    2593 	add	a, a
      000B5C 87                    2594 	add	a, a
      000B5D 87                    2595 	add	a, a
      000B5E 23                    2596 	inc	hl
      000B5F 77                    2597 	ld	(hl), a
                                   2598 ;src/main.c:542: (src_pile->height + 2u + cursor.held_stack_size) * 8u, cursor.hand_pile_idx * 16u,
      000B60 FAr89r01              2599 	ld	a, (#(_cursor + 0x0005) + 0)
      000B63 CB 37                 2600 	swap	a
      000B65 E6 F0                 2601 	and	a, #0xf0
      000B67 23                    2602 	inc	hl
      000B68 77                    2603 	ld	(hl), a
      000B69 F8 0A                 2604 	ldhl	sp,#10
      000B6B 2A                    2605 	ld	a, (hl+)
      000B6C 5F                    2606 	ld	e, a
      000B6D 56                    2607 	ld	d, (hl)
      000B6E 1A                    2608 	ld	a, (de)
      000B6F C6 02                 2609 	add	a, #0x02
      000B71 81                    2610 	add	a, c
      000B72 87                    2611 	add	a, a
      000B73 87                    2612 	add	a, a
      000B74 87                    2613 	add	a, a
      000B75 77                    2614 	ld	(hl), a
                                   2615 ;src/main.c:541: cursor.pile_idx * 16u,
      000B76 FAr8Ar01              2616 	ld	a, (#(_cursor + 0x0006) + 0)
      000B79 CB 37                 2617 	swap	a
      000B7B E6 F0                 2618 	and	a, #0xf0
                                   2619 ;src/main.c:540: dynamic_metasprite_fold(top_card->data,
      000B7D F8 08                 2620 	ldhl	sp,	#8
      000B7F F5                    2621 	push	af
      000B80 2A                    2622 	ld	a, (hl+)
      000B81 66                    2623 	ld	h, (hl)
      000B82 6F                    2624 	ld	l, a
      000B83 F1                    2625 	pop	af
      000B84 23                    2626 	inc	hl
      000B85 23                    2627 	inc	hl
      000B86 5E                    2628 	ld	e, (hl)
      000B87 F8 0C                 2629 	ldhl	sp,	#12
      000B89 66                    2630 	ld	h, (hl)
      000B8A E5                    2631 	push	hl
      000B8B 33                    2632 	inc	sp
      000B8C 26 80                 2633 	ld	h, #0x80
      000B8E E5                    2634 	push	hl
      000B8F 33                    2635 	inc	sp
      000B90 F8 08                 2636 	ldhl	sp,	#8
      000B92 F5                    2637 	push	af
      000B93 2A                    2638 	ld	a, (hl+)
      000B94 66                    2639 	ld	h, (hl)
      000B95 6F                    2640 	ld	l, a
      000B96 F1                    2641 	pop	af
      000B97 E5                    2642 	push	hl
      000B98 61                    2643 	ld	h, c
      000B99 E5                    2644 	push	hl
      000B9A 33                    2645 	inc	sp
      000B9B F8 09                 2646 	ldhl	sp,	#9
      000B9D 66                    2647 	ld	h, (hl)
      000B9E E5                    2648 	push	hl
      000B9F 33                    2649 	inc	sp
      000BA0 F8 0B                 2650 	ldhl	sp,	#11
      000BA2 66                    2651 	ld	h, (hl)
      000BA3 E5                    2652 	push	hl
      000BA4 33                    2653 	inc	sp
      000BA5 F8 12                 2654 	ldhl	sp,	#18
      000BA7 66                    2655 	ld	h, (hl)
      000BA8 E5                    2656 	push	hl
      000BA9 33                    2657 	inc	sp
      000BAA 57                    2658 	ld	d,a
      000BAB D5                    2659 	push	de
      000BAC CDr40r09              2660 	call	_dynamic_metasprite_fold
      000BAF E8 0A                 2661 	add	sp, #10
      000BB1                       2662 00116$:
                                   2663 ;src/main.c:551: cursor.held_card = NULL;
      000BB1 21r84r01              2664 	ld	hl, #_cursor
      000BB4 AF                    2665 	xor	a, a
      000BB5 22                    2666 	ld	(hl+), a
      000BB6 77                    2667 	ld	(hl), a
                                   2668 ;src/main.c:552: cursor.pile_idx = cursor.hand_pile_idx;
      000BB7 FAr89r01              2669 	ld	a, (#(_cursor + 0x0005) + 0)
      000BBA EAr8Ar01              2670 	ld	(#(_cursor + 0x0006)),a
                                   2671 ;src/main.c:553: flags |= FLAG_REDRAW_CURSOR;
      000BBD 21r6Br01              2672 	ld	hl, #_flags
      000BC0 7E                    2673 	ld	a, (hl)
      000BC1 F6 01                 2674 	or	a, #0x01
      000BC3 77                    2675 	ld	(hl), a
                                   2676 ;src/main.c:554: }
      000BC4 E8 0D                 2677 	add	sp, #13
      000BC6 C9                    2678 	ret
                                   2679 ;src/main.c:569: void clear_bkg(void)
                                   2680 ;	---------------------------------
                                   2681 ; Function clear_bkg
                                   2682 ; ---------------------------------
      000BC7                       2683 _clear_bkg::
                                   2684 ;src/main.c:572: for (x = 0; x < 32u; x++)
      000BC7 0E 00                 2685 	ld	c, #0x00
                                   2686 ;src/main.c:573: for (y = 0; y < 32u; y++)
      000BC9                       2687 00109$:
      000BC9 06 00                 2688 	ld	b, #0x00
      000BCB                       2689 00103$:
                                   2690 ;src/main.c:574: set_bkg_tile_xy(x, y, 0);
      000BCB AF                    2691 	xor	a, a
      000BCC F5                    2692 	push	af
      000BCD 33                    2693 	inc	sp
      000BCE C5                    2694 	push	bc
      000BCF 33                    2695 	inc	sp
      000BD0 79                    2696 	ld	a, c
      000BD1 F5                    2697 	push	af
      000BD2 33                    2698 	inc	sp
      000BD3 CDr00r00              2699 	call	_set_bkg_tile_xy
      000BD6 E8 03                 2700 	add	sp, #3
                                   2701 ;src/main.c:573: for (y = 0; y < 32u; y++)
      000BD8 04                    2702 	inc	b
      000BD9 78                    2703 	ld	a, b
      000BDA D6 20                 2704 	sub	a, #0x20
      000BDC 38 ED                 2705 	jr	C, 00103$
                                   2706 ;src/main.c:572: for (x = 0; x < 32u; x++)
      000BDE 0C                    2707 	inc	c
      000BDF 79                    2708 	ld	a, c
      000BE0 D6 20                 2709 	sub	a, #0x20
      000BE2 38 E5                 2710 	jr	C, 00109$
                                   2711 ;src/main.c:575: }
      000BE4 C9                    2712 	ret
                                   2713 ;src/main.c:577: void start_game(void)
                                   2714 ;	---------------------------------
                                   2715 ; Function start_game
                                   2716 ; ---------------------------------
      000BE5                       2717 _start_game::
                                   2718 ;src/main.c:579: initrand(DIV_REG);
      000BE5 F0r00                 2719 	ldh	a, (_DIV_REG+0)
      000BE7 4F                    2720 	ld	c, a
      000BE8 06 00                 2721 	ld	b, #0x00
      000BEA C5                    2722 	push	bc
      000BEB CDr00r00              2723 	call	_initrand
      000BEE E8 02                 2724 	add	sp, #2
                                   2725 ;src/main.c:580: init_deck();
      000BF0 CDr1Er00              2726 	call	_init_deck
                                   2727 ;src/main.c:581: clear_bkg();
      000BF3 CDrC7r0B              2728 	call	_clear_bkg
                                   2729 ;src/main.c:582: draw_background();
                                   2730 ;src/main.c:583: }
      000BF6 C3rD7r03              2731 	jp  _draw_background
                                   2732 ;src/main.c:708: void dynamic_metasprite_splash_screen_callback(void)
                                   2733 ;	---------------------------------
                                   2734 ; Function dynamic_metasprite_splash_screen_callback
                                   2735 ; ---------------------------------
      000BF9                       2736 _dynamic_metasprite_splash_screen_callback::
      000BF9 E8 F2                 2737 	add	sp, #-14
                                   2738 ;src/main.c:710: const UINT8 offsets[] = {
      000BFB F8 00                 2739 	ldhl	sp,	#0
      000BFD 4D                    2740 	ld	c, l
      000BFE 44                    2741 	ld	b, h
      000BFF AF                    2742 	xor	a, a
      000C00 02                    2743 	ld	(bc), a
      000C01 69                    2744 	ld	l, c
      000C02 60                    2745 	ld	h, b
      000C03 23                    2746 	inc	hl
      000C04 36 06                 2747 	ld	(hl), #0x06
      000C06 69                    2748 	ld	l, c
      000C07 60                    2749 	ld	h, b
      000C08 23                    2750 	inc	hl
      000C09 23                    2751 	inc	hl
      000C0A 36 0C                 2752 	ld	(hl), #0x0c
      000C0C 69                    2753 	ld	l, c
      000C0D 60                    2754 	ld	h, b
      000C0E 23                    2755 	inc	hl
      000C0F 23                    2756 	inc	hl
      000C10 23                    2757 	inc	hl
      000C11 36 12                 2758 	ld	(hl), #0x12
      000C13 21 04 00              2759 	ld	hl, #0x0004
      000C16 09                    2760 	add	hl, bc
      000C17 36 18                 2761 	ld	(hl), #0x18
      000C19 21 05 00              2762 	ld	hl, #0x0005
      000C1C 09                    2763 	add	hl, bc
      000C1D 36 1E                 2764 	ld	(hl), #0x1e
      000C1F 21 06 00              2765 	ld	hl, #0x0006
      000C22 09                    2766 	add	hl, bc
      000C23 36 12                 2767 	ld	(hl), #0x12
      000C25 21 07 00              2768 	ld	hl, #0x0007
      000C28 09                    2769 	add	hl, bc
      000C29 36 24                 2770 	ld	(hl), #0x24
      000C2B 21 08 00              2771 	ld	hl, #0x0008
      000C2E 09                    2772 	add	hl, bc
      000C2F 36 2A                 2773 	ld	(hl), #0x2a
                                   2774 ;src/main.c:721: draw_sequential_card(1u + dynamic_metasprite.data[0] * 2u, 2u, OFFSET_BKG_TITLE + offsets[dynamic_metasprite.data[0]]);
      000C31 21r7Cr01              2775 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000C34 6E                    2776 	ld	l, (hl)
      000C35 79                    2777 	ld	a, c
      000C36 85                    2778 	add	a, l
      000C37 5F                    2779 	ld	e, a
      000C38 78                    2780 	ld	a, b
      000C39 CE 00                 2781 	adc	a, #0x00
      000C3B 57                    2782 	ld	d, a
      000C3C 1A                    2783 	ld	a, (de)
      000C3D C6 B4                 2784 	add	a, #0xb4
      000C3F 29                    2785 	add	hl, hl
      000C40 2C                    2786 	inc	l
      000C41 C5                    2787 	push	bc
      000C42 57                    2788 	ld	d,a
      000C43 1E 02                 2789 	ld	e,#0x02
      000C45 D5                    2790 	push	de
      000C46 7D                    2791 	ld	a, l
      000C47 F5                    2792 	push	af
      000C48 33                    2793 	inc	sp
      000C49 CDr66r03              2794 	call	_draw_sequential_card
      000C4C E8 03                 2795 	add	sp, #3
      000C4E C1                    2796 	pop	bc
                                   2797 ;src/main.c:722: if (dynamic_metasprite.data[0] == 8u) {
      000C4F FAr7Cr01              2798 	ld	a, (#(_dynamic_metasprite + 0x000d) + 0)
      000C52 FE 08                 2799 	cp	a, #0x08
      000C54 20 05                 2800 	jr	NZ, 00102$
                                   2801 ;src/main.c:723: dynamic_metasprite_end();
      000C56 CDr1Cr02              2802 	call	_dynamic_metasprite_end
                                   2803 ;src/main.c:724: return;
      000C59 18 41                 2804 	jr	00103$
      000C5B                       2805 00102$:
                                   2806 ;src/main.c:726: dynamic_metasprite.data[0]++;
      000C5B 3C                    2807 	inc	a
      000C5C F8 09                 2808 	ldhl	sp,	#9
      000C5E 77                    2809 	ld	(hl), a
      000C5F 11r7Cr01              2810 	ld	de, #(_dynamic_metasprite + 0x000d)
      000C62 7E                    2811 	ld	a, (hl)
      000C63 12                    2812 	ld	(de), a
                                   2813 ;src/main.c:727: dynamic_metasprite.elapsed_frames = 0;
      000C64 21r78r01              2814 	ld	hl, #(_dynamic_metasprite + 0x0009)
      000C67 36 00                 2815 	ld	(hl), #0x00
                                   2816 ;src/main.c:728: dynamic_metasprite.dist[0] += 16;
      000C69 11r73r01              2817 	ld	de, #(_dynamic_metasprite + 0x0004)
      000C6C 1A                    2818 	ld	a, (de)
      000C6D F8 0A                 2819 	ldhl	sp,	#10
      000C6F 22                    2820 	ld	(hl+), a
      000C70 13                    2821 	inc	de
      000C71 1A                    2822 	ld	a, (de)
                                   2823 ;c
      000C72 32                    2824 	ld	(hl-), a
      000C73 2A                    2825 	ld	a, (hl+)
      000C74 5F                    2826 	ld	e, a
      000C75 56                    2827 	ld	d, (hl)
      000C76 21 10 00              2828 	ld	hl, #0x0010
      000C79 19                    2829 	add	hl, de
      000C7A E5                    2830 	push	hl
      000C7B 7D                    2831 	ld	a, l
      000C7C F8 0E                 2832 	ldhl	sp,	#14
      000C7E 77                    2833 	ld	(hl), a
      000C7F E1                    2834 	pop	hl
      000C80 7C                    2835 	ld	a, h
      000C81 F8 0D                 2836 	ldhl	sp,	#13
      000C83 77                    2837 	ld	(hl), a
      000C84 11r73r01              2838 	ld	de, #(_dynamic_metasprite + 0x0004)
      000C87 2B                    2839 	dec	hl
      000C88 7E                    2840 	ld	a, (hl)
      000C89 12                    2841 	ld	(de), a
      000C8A 13                    2842 	inc	de
      000C8B 23                    2843 	inc	hl
      000C8C 7E                    2844 	ld	a, (hl)
      000C8D 12                    2845 	ld	(de), a
                                   2846 ;src/main.c:729: dynamic_metasprite.metasprite_offset = OFFSET_SPRITE_TITLE + offsets[dynamic_metasprite.data[0]];
      000C8E F8 09                 2847 	ldhl	sp,	#9
      000C90 6E                    2848 	ld	l, (hl)
      000C91 26 00                 2849 	ld	h, #0x00
      000C93 09                    2850 	add	hl, bc
      000C94 4D                    2851 	ld	c, l
      000C95 44                    2852 	ld	b, h
      000C96 0A                    2853 	ld	a, (bc)
      000C97 C6 B4                 2854 	add	a, #0xb4
      000C99 EAr7Br01              2855 	ld	(#(_dynamic_metasprite + 0x000c)),a
      000C9C                       2856 00103$:
                                   2857 ;src/main.c:730: }
      000C9C E8 0E                 2858 	add	sp, #14
      000C9E C9                    2859 	ret
                                   2860 ;src/main.c:747: void main(void)
                                   2861 ;	---------------------------------
                                   2862 ; Function main
                                   2863 ; ---------------------------------
      000C9F                       2864 _main::
      000C9F E8 F6                 2865 	add	sp, #-10
                                   2866 ;src/main.c:749: font_init();
      000CA1 CDr00r00              2867 	call	_font_init
                                   2868 ;src/main.c:750: font_t font = font_load(font_min);
      000CA4 21r00r00              2869 	ld	hl, #_font_min
      000CA7 E5                    2870 	push	hl
      000CA8 CDr00r00              2871 	call	_font_load
      000CAB E8 02                 2872 	add	sp, #2
                                   2873 ;src/main.c:751: font_set(font);
      000CAD D5                    2874 	push	de
      000CAE CDr00r00              2875 	call	_font_set
      000CB1 E8 02                 2876 	add	sp, #2
                                   2877 ;src/main.c:752: set_bkg_data(OFFSET_BKG_FONT_ADDON, N_FONT_ADDON, font_addon);
      000CB3 21r00r00              2878 	ld	hl, #_font_addon
      000CB6 E5                    2879 	push	hl
      000CB7 11 25 01              2880 	ld	de, #0x0125
      000CBA D5                    2881 	push	de
      000CBB CDr00r00              2882 	call	_set_bkg_data
      000CBE E8 04                 2883 	add	sp, #4
                                   2884 ;src/main.c:754: set_bkg_data(OFFSET_BKG_TITLE, N_TITLE, title_textures);
      000CC0 21r00r00              2885 	ld	hl, #_title_textures
      000CC3 E5                    2886 	push	hl
      000CC4 11 B4 30              2887 	ld	de, #0x30b4
      000CC7 D5                    2888 	push	de
      000CC8 CDr00r00              2889 	call	_set_bkg_data
      000CCB E8 04                 2890 	add	sp, #4
                                   2891 ;src/main.c:755: set_bkg_data(OFFSET_BKG_CARD, N_CARD, card_textures);
      000CCD 21r00r00              2892 	ld	hl, #_card_textures
      000CD0 E5                    2893 	push	hl
      000CD1 11 80 34              2894 	ld	de, #0x3480
      000CD4 D5                    2895 	push	de
      000CD5 CDr00r00              2896 	call	_set_bkg_data
      000CD8 E8 04                 2897 	add	sp, #4
                                   2898 ;src/main.c:756: set_sprite_data(OFFSET_SPRITE_CURSOR, N_CURSOR, cursor_textures);
      000CDA 21r00r00              2899 	ld	hl, #_cursor_textures
      000CDD E5                    2900 	push	hl
      000CDE 11 01 08              2901 	ld	de, #0x0801
      000CE1 D5                    2902 	push	de
      000CE2 CDr00r00              2903 	call	_set_sprite_data
      000CE5 E8 04                 2904 	add	sp, #4
                                   2905 ;src/main.c:757: SHOW_BKG;
      000CE7 F0r00                 2906 	ldh	a, (_LCDC_REG+0)
      000CE9 F6 01                 2907 	or	a, #0x01
      000CEB E0r00                 2908 	ldh	(_LCDC_REG+0),a
                                   2909 ;src/main.c:758: SHOW_SPRITES;
      000CED F0r00                 2910 	ldh	a, (_LCDC_REG+0)
      000CEF F6 02                 2911 	or	a, #0x02
      000CF1 E0r00                 2912 	ldh	(_LCDC_REG+0),a
                                   2913 ;src/main.c:760: set_bkg_tiles(0, 14u, COPYRIGHT_LEN, 1u, copyright);
      000CF3 21r00r00              2914 	ld	hl, #_copyright
      000CF6 E5                    2915 	push	hl
      000CF7 11 14 01              2916 	ld	de, #0x0114
      000CFA D5                    2917 	push	de
      000CFB 3E 0E                 2918 	ld	a, #0x0e
      000CFD F5                    2919 	push	af
      000CFE 33                    2920 	inc	sp
      000CFF AF                    2921 	xor	a, a
      000D00 F5                    2922 	push	af
      000D01 33                    2923 	inc	sp
      000D02 CDr00r00              2924 	call	_set_bkg_tiles
      000D05 E8 06                 2925 	add	sp, #6
                                   2926 ;src/main.c:734: dynamic_metasprite.src[0] = 72;
      000D07 21r6Fr01              2927 	ld	hl, #_dynamic_metasprite
      000D0A 36 48                 2928 	ld	(hl), #0x48
      000D0C 23                    2929 	inc	hl
      000D0D 36 00                 2930 	ld	(hl), #0x00
                                   2931 ;src/main.c:735: dynamic_metasprite.src[1] = -24;
      000D0F 21r71r01              2932 	ld	hl, #(_dynamic_metasprite + 0x0002)
      000D12 36 E8                 2933 	ld	(hl), #0xe8
      000D14 23                    2934 	inc	hl
      000D15 36 FF                 2935 	ld	(hl), #0xff
                                   2936 ;src/main.c:736: dynamic_metasprite.dist[0] = -64;
      000D17 21r73r01              2937 	ld	hl, #(_dynamic_metasprite + 0x0004)
      000D1A 36 C0                 2938 	ld	(hl), #0xc0
      000D1C 23                    2939 	inc	hl
      000D1D 36 FF                 2940 	ld	(hl), #0xff
                                   2941 ;src/main.c:737: dynamic_metasprite.dist[1] = 40;
      000D1F 21r75r01              2942 	ld	hl, #(_dynamic_metasprite + 0x0006)
      000D22 36 28                 2943 	ld	(hl), #0x28
      000D24 23                    2944 	inc	hl
      000D25 36 00                 2945 	ld	(hl), #0x00
                                   2946 ;src/main.c:738: dynamic_metasprite.target_frames = TARGET_FRAMES_SPLASH_SCREEN;
      000D27 21r77r01              2947 	ld	hl, #(_dynamic_metasprite + 0x0008)
      000D2A 36 20                 2948 	ld	(hl), #0x20
                                   2949 ;src/main.c:739: dynamic_metasprite.elapsed_frames = 0;
      000D2C 21r78r01              2950 	ld	hl, #(_dynamic_metasprite + 0x0009)
      000D2F 36 00                 2951 	ld	(hl), #0x00
                                   2952 ;src/main.c:740: dynamic_metasprite.metasprite = metasprite_sequential_2x3;
      000D31 21r79r01              2953 	ld	hl, #(_dynamic_metasprite + 0x000a)
      000D34 36r00                 2954 	ld	(hl), #<(_metasprite_sequential_2x3)
      000D36 23                    2955 	inc	hl
      000D37 36s00                 2956 	ld	(hl), #>(_metasprite_sequential_2x3)
                                   2957 ;src/main.c:741: dynamic_metasprite.metasprite_offset = OFFSET_SPRITE_TITLE + OFFSET_TITLE_S;
      000D39 21r7Br01              2958 	ld	hl, #(_dynamic_metasprite + 0x000c)
      000D3C 36 B4                 2959 	ld	(hl), #0xb4
                                   2960 ;src/main.c:742: dynamic_metasprite.data[0] = 0;
      000D3E 21r7Cr01              2961 	ld	hl, #(_dynamic_metasprite + 0x000d)
      000D41 36 00                 2962 	ld	(hl), #0x00
                                   2963 ;src/main.c:743: dynamic_metasprite.callback = &dynamic_metasprite_splash_screen_callback;
      000D43 21r82r01              2964 	ld	hl, #(_dynamic_metasprite + 0x0013)
      000D46 36rF9                 2965 	ld	(hl), #<(_dynamic_metasprite_splash_screen_callback)
      000D48 23                    2966 	inc	hl
      000D49 36s0B                 2967 	ld	(hl), #>(_dynamic_metasprite_splash_screen_callback)
                                   2968 ;src/main.c:744: flags |= FLAG_PLAYING_ANIMATION;
      000D4B 21r6Br01              2969 	ld	hl, #_flags
      000D4E 7E                    2970 	ld	a, (hl)
      000D4F F6 04                 2971 	or	a, #0x04
      000D51 77                    2972 	ld	(hl), a
                                   2973 ;src/main.c:764: while (1) {
      000D52                       2974 00104$:
                                   2975 ;src/main.c:588: UINT8 input = joypad();
      000D52 CDr00r00              2976 	call	_joypad
      000D55 F8 02                 2977 	ldhl	sp,	#2
      000D57 73                    2978 	ld	(hl), e
                                   2979 ;src/main.c:589: UINT8 new_input = input & ~prev_input;
      000D58 FAr95r01              2980 	ld	a, (#_main_prev_input_327681_305)
      000D5B 2F                    2981 	cpl
      000D5C F8 02                 2982 	ldhl	sp,	#2
      000D5E A6                    2983 	and	a, (hl)
      000D5F 2B                    2984 	dec	hl
      000D60 77                    2985 	ld	(hl), a
                                   2986 ;src/main.c:590: switch (flags & FLAG_GAME_STATE) {
      000D61 FAr6Br01              2987 	ld	a, (#_flags)
      000D64 E6 18                 2988 	and	a, #0x18
      000D66 F8 08                 2989 	ldhl	sp,	#8
      000D68 77                    2990 	ld	(hl), a
      000D69 AF                    2991 	xor	a, a
      000D6A 23                    2992 	inc	hl
      000D6B 32                    2993 	ld	(hl-), a
      000D6C 7E                    2994 	ld	a, (hl)
      000D6D B7                    2995 	or	a, a
      000D6E 23                    2996 	inc	hl
      000D6F B6                    2997 	or	a, (hl)
      000D70 28 0C                 2998 	jr	Z, 00111$
      000D72 F8 08                 2999 	ldhl	sp,	#8
      000D74 7E                    3000 	ld	a, (hl)
      000D75 D6 10                 3001 	sub	a, #0x10
      000D77 23                    3002 	inc	hl
      000D78 B6                    3003 	or	a, (hl)
      000D79 28 22                 3004 	jr	Z, 00174$
      000D7B C3rD5r10              3005 	jp	00175$
                                   3006 ;src/main.c:591: case FLAG_GAME_STATE_START:
      000D7E                       3007 00111$:
                                   3008 ;src/main.c:592: if (new_input) {
      000D7E F8 01                 3009 	ldhl	sp,	#1
      000D80 7E                    3010 	ld	a, (hl)
      000D81 B7                    3011 	or	a, a
      000D82 CArD5r10              3012 	jp	Z, 00175$
                                   3013 ;src/main.c:593: flags &= ~FLAG_GAME_STATE;
      000D85 21r6Br01              3014 	ld	hl, #_flags
      000D88 7E                    3015 	ld	a, (hl)
      000D89 E6 E7                 3016 	and	a, #0xe7
      000D8B 77                    3017 	ld	(hl), a
                                   3018 ;src/main.c:594: flags |= FLAG_GAME_STATE_INGAME;
      000D8C 7E                    3019 	ld	a, (hl)
      000D8D F6 10                 3020 	or	a, #0x10
      000D8F 77                    3021 	ld	(hl), a
                                   3022 ;src/main.c:595: if (flags & FLAG_PLAYING_ANIMATION)
      000D90 CB 56                 3023 	bit	2, (hl)
      000D92 28 03                 3024 	jr	Z, 00108$
                                   3025 ;src/main.c:596: dynamic_metasprite_end();
      000D94 CDr1Cr02              3026 	call	_dynamic_metasprite_end
      000D97                       3027 00108$:
                                   3028 ;src/main.c:597: start_game();
      000D97 CDrE5r0B              3029 	call	_start_game
                                   3030 ;src/main.c:599: break;
      000D9A C3rD5r10              3031 	jp	00175$
                                   3032 ;src/main.c:600: case FLAG_GAME_STATE_INGAME:
      000D9D                       3033 00174$:
                                   3034 ;src/main.c:601: if (cursor.held_card) {
      000D9D 21r84r01              3035 	ld	hl, #_cursor
      000DA0 2A                    3036 	ld	a, (hl+)
      000DA1 4F                    3037 	ld	c, a
      000DA2 46                    3038 	ld	b, (hl)
                                   3039 ;src/main.c:744: flags |= FLAG_PLAYING_ANIMATION;
      000DA3 FAr6Br01              3040 	ld	a, (#_flags)
      000DA6 F8 05                 3041 	ldhl	sp,	#5
      000DA8 77                    3042 	ld	(hl), a
                                   3043 ;src/main.c:604: && cursor.hand_pile_idx != 0) {
      000DA9 F8 01                 3044 	ldhl	sp,	#1
      000DAB 7E                    3045 	ld	a, (hl)
      000DAC E6 02                 3046 	and	a, #0x02
      000DAE F8 06                 3047 	ldhl	sp,	#6
      000DB0 77                    3048 	ld	(hl), a
      000DB1 AF                    3049 	xor	a, a
      000DB2 23                    3050 	inc	hl
      000DB3 77                    3051 	ld	(hl), a
                                   3052 ;src/main.c:607: && cursor.hand_pile_idx < 9) {
      000DB4 F8 01                 3053 	ldhl	sp,	#1
      000DB6 7E                    3054 	ld	a, (hl)
      000DB7 E6 01                 3055 	and	a, #0x01
      000DB9 F8 08                 3056 	ldhl	sp,	#8
      000DBB 77                    3057 	ld	(hl), a
      000DBC AF                    3058 	xor	a, a
      000DBD 23                    3059 	inc	hl
      000DBE 77                    3060 	ld	(hl), a
                                   3061 ;src/main.c:611: && ~flags & FLAG_PLAYING_ANIMATION) {
      000DBF F8 01                 3062 	ldhl	sp,	#1
      000DC1 7E                    3063 	ld	a, (hl)
      000DC2 E6 10                 3064 	and	a, #0x10
      000DC4 23                    3065 	inc	hl
      000DC5 23                    3066 	inc	hl
      000DC6 77                    3067 	ld	(hl), a
      000DC7 AF                    3068 	xor	a, a
      000DC8 23                    3069 	inc	hl
      000DC9 77                    3070 	ld	(hl), a
                                   3071 ;src/main.c:601: if (cursor.held_card) {
      000DCA 78                    3072 	ld	a, b
      000DCB B1                    3073 	or	a, c
      000DCC CAr8Ar0E              3074 	jp	Z, 00172$
                                   3075 ;src/main.c:602: flags |= FLAG_REDRAW_HAND;
      000DCF 23                    3076 	inc	hl
      000DD0 7E                    3077 	ld	a, (hl)
      000DD1 F6 02                 3078 	or	a, #0x02
      000DD3 EAr6Br01              3079 	ld	(#_flags),a
                                   3080 ;src/main.c:604: && cursor.hand_pile_idx != 0) {
      000DD6 F8 07                 3081 	ldhl	sp,	#7
      000DD8 3A                    3082 	ld	a, (hl-)
      000DD9 B6                    3083 	or	a, (hl)
      000DDA 28 0B                 3084 	jr	Z, 00117$
      000DDC 01r89r01              3085 	ld	bc, #_cursor+5
      000DDF 0A                    3086 	ld	a, (bc)
      000DE0 B7                    3087 	or	a, a
      000DE1 28 04                 3088 	jr	Z, 00117$
                                   3089 ;src/main.c:605: cursor.hand_pile_idx--;
      000DE3 3D                    3090 	dec	a
      000DE4 02                    3091 	ld	(bc), a
      000DE5 18 10                 3092 	jr	00118$
      000DE7                       3093 00117$:
                                   3094 ;src/main.c:607: && cursor.hand_pile_idx < 9) {
      000DE7 F8 09                 3095 	ldhl	sp,	#9
      000DE9 3A                    3096 	ld	a, (hl-)
      000DEA B6                    3097 	or	a, (hl)
      000DEB 28 0A                 3098 	jr	Z, 00118$
      000DED 01r89r01              3099 	ld	bc, #_cursor+5
      000DF0 0A                    3100 	ld	a, (bc)
      000DF1 FE 09                 3101 	cp	a, #0x09
      000DF3 30 02                 3102 	jr	NC, 00118$
                                   3103 ;src/main.c:608: cursor.hand_pile_idx++;
      000DF5 3C                    3104 	inc	a
      000DF6 02                    3105 	ld	(bc), a
      000DF7                       3106 00118$:
                                   3107 ;src/main.c:611: && ~flags & FLAG_PLAYING_ANIMATION) {
      000DF7 F8 04                 3108 	ldhl	sp,	#4
      000DF9 3A                    3109 	ld	a, (hl-)
      000DFA B6                    3110 	or	a, (hl)
      000DFB CArD5r10              3111 	jp	Z, 00175$
      000DFE FAr6Br01              3112 	ld	a, (#_flags)
      000E01 06 00                 3113 	ld	b, #0x00
      000E03 2F                    3114 	cpl
      000E04 4F                    3115 	ld	c, a
      000E05 78                    3116 	ld	a, b
      000E06 2F                    3117 	cpl
      000E07 CB 51                 3118 	bit	2, c
      000E09 CArD5r10              3119 	jp	Z,00175$
                                   3120 ;src/main.c:558: Pile *pile = IDX_PTR(piles, cursor.hand_pile_idx);
      000E0C 21r89r01              3121 	ld	hl, #_cursor + 5
      000E0F 4E                    3122 	ld	c, (hl)
      000E10 06 00                 3123 	ld	b, #0x00
      000E12 69                    3124 	ld	l, c
      000E13 60                    3125 	ld	h, b
      000E14 29                    3126 	add	hl, hl
      000E15 29                    3127 	add	hl, hl
      000E16 09                    3128 	add	hl, bc
      000E17 3Er38                 3129 	ld	a, #<(_piles)
      000E19 85                    3130 	add	a, l
      000E1A 47                    3131 	ld	b, a
      000E1B 3Es01                 3132 	ld	a, #>(_piles)
      000E1D 8C                    3133 	adc	a, h
      000E1E F8 08                 3134 	ldhl	sp,	#8
      000E20 70                    3135 	ld	(hl), b
      000E21 23                    3136 	inc	hl
      000E22 77                    3137 	ld	(hl), a
                                   3138 ;src/main.c:559: if (cursor.hand_pile_idx == cursor.pile_idx) {
      000E23 FAr8Ar01              3139 	ld	a, (#(_cursor + 0x0006) + 0)
      000E26 91                    3140 	sub	a, c
      000E27 20 0D                 3141 	jr	NZ, 00124$
                                   3142 ;src/main.c:560: pile_append_cursor_stack(pile);
      000E29 2B                    3143 	dec	hl
      000E2A 2A                    3144 	ld	a, (hl+)
      000E2B 66                    3145 	ld	h, (hl)
      000E2C 6F                    3146 	ld	l, a
      000E2D E5                    3147 	push	hl
      000E2E CDrE0r09              3148 	call	_pile_append_cursor_stack
      000E31 E8 02                 3149 	add	sp, #2
      000E33 C3rD5r10              3150 	jp	00175$
      000E36                       3151 00124$:
                                   3152 ;src/main.c:561: } else if (!pile->height
                                   3153 ;c
      000E36 F8 08                 3154 	ldhl	sp,#8
      000E38 2A                    3155 	ld	a, (hl+)
      000E39 5F                    3156 	ld	e, a
      000E3A 56                    3157 	ld	d, (hl)
      000E3B 21 04 00              3158 	ld	hl, #0x0004
      000E3E 19                    3159 	add	hl, de
      000E3F 4D                    3160 	ld	c, l
      000E40 44                    3161 	ld	b, h
      000E41 0A                    3162 	ld	a, (bc)
      000E42 B7                    3163 	or	a, a
      000E43 28 2B                 3164 	jr	Z, 00122$
                                   3165 ;src/main.c:562: || RANK(pile->top->data) == RANK(cursor.held_card->data) + 1u) {
      000E45 F8 08                 3166 	ldhl	sp,	#8
      000E47 2A                    3167 	ld	a, (hl+)
      000E48 66                    3168 	ld	h, (hl)
      000E49 6F                    3169 	ld	l, a
      000E4A 23                    3170 	inc	hl
      000E4B 23                    3171 	inc	hl
      000E4C 2A                    3172 	ld	a, (hl+)
      000E4D 4F                    3173 	ld	c, a
      000E4E 46                    3174 	ld	b, (hl)
      000E4F 03                    3175 	inc	bc
      000E50 03                    3176 	inc	bc
      000E51 0A                    3177 	ld	a, (bc)
      000E52 E6 0F                 3178 	and	a, #0x0f
      000E54 4F                    3179 	ld	c, a
      000E55 06 00                 3180 	ld	b, #0x00
      000E57 21r84r01              3181 	ld	hl, #_cursor
      000E5A 2A                    3182 	ld	a, (hl+)
      000E5B 66                    3183 	ld	h, (hl)
      000E5C 6F                    3184 	ld	l, a
      000E5D 23                    3185 	inc	hl
      000E5E 23                    3186 	inc	hl
      000E5F 7E                    3187 	ld	a, (hl)
      000E60 E6 0F                 3188 	and	a, #0x0f
      000E62 5F                    3189 	ld	e, a
      000E63 16 00                 3190 	ld	d, #0x00
      000E65 13                    3191 	inc	de
      000E66 79                    3192 	ld	a, c
      000E67 93                    3193 	sub	a, e
      000E68 C2rD5r10              3194 	jp	NZ,00175$
      000E6B 78                    3195 	ld	a, b
      000E6C 92                    3196 	sub	a, d
      000E6D C2rD5r10              3197 	jp	NZ,00175$
      000E70                       3198 00122$:
                                   3199 ;src/main.c:563: pile_append_cursor_stack(pile);
      000E70 F8 08                 3200 	ldhl	sp,	#8
      000E72 2A                    3201 	ld	a, (hl+)
      000E73 66                    3202 	ld	h, (hl)
      000E74 6F                    3203 	ld	l, a
      000E75 E5                    3204 	push	hl
      000E76 CDrE0r09              3205 	call	_pile_append_cursor_stack
      000E79 E8 02                 3206 	add	sp, #2
                                   3207 ;src/main.c:564: score--;
      000E7B 21r6Er01              3208 	ld	hl, #_score + 1
      000E7E 2B                    3209 	dec	hl
      000E7F 2A                    3210 	ld	a, (hl+)
      000E80 5F                    3211 	ld	e, a
      000E81 56                    3212 	ld	d, (hl)
      000E82 1B                    3213 	dec	de
      000E83 2B                    3214 	dec	hl
      000E84 7B                    3215 	ld	a, e
      000E85 22                    3216 	ld	(hl+), a
      000E86 72                    3217 	ld	(hl), d
                                   3218 ;src/main.c:612: cursor_place_stack();
      000E87 C3rD5r10              3219 	jp	00175$
      000E8A                       3220 00172$:
                                   3221 ;src/main.c:615: flags |= FLAG_REDRAW_CURSOR;
      000E8A F8 05                 3222 	ldhl	sp,	#5
      000E8C 7E                    3223 	ld	a, (hl)
      000E8D F6 01                 3224 	or	a, #0x01
      000E8F EAr6Br01              3225 	ld	(#_flags),a
                                   3226 ;src/main.c:616: if (new_input & J_DOWN) {
      000E92 F8 01                 3227 	ldhl	sp,	#1
      000E94 CB 5E                 3228 	bit	3, (hl)
      000E96 CAr1Br0F              3229 	jp	Z,00150$
                                   3230 ;src/main.c:617: if (cursor.pile_idx == PILE_IDX_DECK)
      000E99 01r8Ar01              3231 	ld	bc, #_cursor + 6
      000E9C 0A                    3232 	ld	a, (bc)
      000E9D F8 09                 3233 	ldhl	sp,	#9
      000E9F 77                    3234 	ld	(hl), a
      000EA0 7E                    3235 	ld	a, (hl)
      000EA1 D6 0A                 3236 	sub	a, #0x0a
      000EA3 20 05                 3237 	jr	NZ, 00133$
                                   3238 ;src/main.c:618: cursor.pile_idx = 0;
      000EA5 AF                    3239 	xor	a, a
      000EA6 02                    3240 	ld	(bc), a
      000EA7 C3r5Er0F              3241 	jp	00151$
      000EAA                       3242 00133$:
                                   3243 ;src/main.c:619: else if (cursor.height + 1u < piles[cursor.pile_idx].height)
      000EAA FAr8Br01              3244 	ld	a, (#(_cursor + 0x0007) + 0)
      000EAD F8 05                 3245 	ldhl	sp,	#5
      000EAF 77                    3246 	ld	(hl), a
      000EB0 F8 05                 3247 	ldhl	sp,	#5
      000EB2 2A                    3248 	ld	a, (hl+)
      000EB3 23                    3249 	inc	hl
      000EB4 77                    3250 	ld	(hl), a
      000EB5 AF                    3251 	xor	a, a
      000EB6 23                    3252 	inc	hl
      000EB7 32                    3253 	ld	(hl-), a
      000EB8 2A                    3254 	ld	a, (hl+)
      000EB9 5E                    3255 	ld	e, (hl)
      000EBA F8 00                 3256 	ldhl	sp,	#0
      000EBC 22                    3257 	ld	(hl+), a
      000EBD 73                    3258 	ld	(hl), e
                                   3259 ;c
      000EBE D1                    3260 	pop	de
      000EBF D5                    3261 	push	de
      000EC0 6B                    3262 	ld	l, e
      000EC1 62                    3263 	ld	h, d
      000EC2 23                    3264 	inc	hl
      000EC3 E5                    3265 	push	hl
      000EC4 7D                    3266 	ld	a, l
      000EC5 F8 08                 3267 	ldhl	sp,	#8
      000EC7 77                    3268 	ld	(hl), a
      000EC8 E1                    3269 	pop	hl
      000EC9 7C                    3270 	ld	a, h
      000ECA F8 07                 3271 	ldhl	sp,	#7
      000ECC 22                    3272 	ld	(hl+), a
      000ECD 23                    3273 	inc	hl
      000ECE 4E                    3274 	ld	c, (hl)
      000ECF 06 00                 3275 	ld	b, #0x00
      000ED1 69                    3276 	ld	l, c
      000ED2 60                    3277 	ld	h, b
      000ED3 29                    3278 	add	hl, hl
      000ED4 29                    3279 	add	hl, hl
      000ED5 09                    3280 	add	hl, bc
      000ED6 E5                    3281 	push	hl
      000ED7 7D                    3282 	ld	a, l
      000ED8 F8 0A                 3283 	ldhl	sp,	#10
      000EDA 77                    3284 	ld	(hl), a
      000EDB E1                    3285 	pop	hl
      000EDC 7C                    3286 	ld	a, h
      000EDD F8 09                 3287 	ldhl	sp,	#9
                                   3288 ;c
      000EDF 32                    3289 	ld	(hl-), a
      000EE0 2A                    3290 	ld	a, (hl+)
      000EE1 5F                    3291 	ld	e, a
      000EE2 56                    3292 	ld	d, (hl)
      000EE3 21r38r01              3293 	ld	hl, #_piles
      000EE6 19                    3294 	add	hl, de
      000EE7 33                    3295 	inc	sp
      000EE8 33                    3296 	inc	sp
                                   3297 ;c
      000EE9 5D                    3298 	ld	e, l
      000EEA 54                    3299 	ld	d, h
      000EEB D5                    3300 	push	de
      000EEC 21 04 00              3301 	ld	hl, #0x0004
      000EEF 19                    3302 	add	hl, de
      000EF0 E5                    3303 	push	hl
      000EF1 7D                    3304 	ld	a, l
      000EF2 F8 0A                 3305 	ldhl	sp,	#10
      000EF4 77                    3306 	ld	(hl), a
      000EF5 E1                    3307 	pop	hl
      000EF6 7C                    3308 	ld	a, h
      000EF7 F8 09                 3309 	ldhl	sp,	#9
      000EF9 32                    3310 	ld	(hl-), a
      000EFA 2A                    3311 	ld	a, (hl+)
      000EFB 5F                    3312 	ld	e, a
      000EFC 56                    3313 	ld	d, (hl)
      000EFD 1A                    3314 	ld	a, (de)
      000EFE 77                    3315 	ld	(hl), a
      000EFF 3A                    3316 	ld	a, (hl-)
      000F00 77                    3317 	ld	(hl), a
      000F01 AF                    3318 	xor	a, a
      000F02 23                    3319 	inc	hl
      000F03 77                    3320 	ld	(hl), a
      000F04 F8 06                 3321 	ldhl	sp,	#6
      000F06 5D                    3322 	ld	e, l
      000F07 54                    3323 	ld	d, h
      000F08 F8 08                 3324 	ldhl	sp,	#8
      000F0A 1A                    3325 	ld	a, (de)
      000F0B 96                    3326 	sub	a, (hl)
      000F0C 23                    3327 	inc	hl
      000F0D 13                    3328 	inc	de
      000F0E 1A                    3329 	ld	a, (de)
      000F0F 9E                    3330 	sbc	a, (hl)
      000F10 30 4C                 3331 	jr	NC, 00151$
                                   3332 ;src/main.c:620: cursor.height++;
      000F12 F8 05                 3333 	ldhl	sp,	#5
      000F14 7E                    3334 	ld	a, (hl)
      000F15 3C                    3335 	inc	a
      000F16 EAr8Br01              3336 	ld	(#(_cursor + 0x0007)),a
      000F19 18 43                 3337 	jr	00151$
      000F1B                       3338 00150$:
                                   3339 ;src/main.c:621: } else if (new_input & J_UP) {
      000F1B F8 01                 3340 	ldhl	sp,	#1
      000F1D CB 56                 3341 	bit	2, (hl)
      000F1F 28 12                 3342 	jr	Z, 00148$
                                   3343 ;src/main.c:622: if (cursor.height == 0)
      000F21 01r8Br01              3344 	ld	bc, #_cursor + 7
      000F24 0A                    3345 	ld	a, (bc)
      000F25 B7                    3346 	or	a, a
      000F26 20 07                 3347 	jr	NZ, 00137$
                                   3348 ;src/main.c:623: cursor.pile_idx = PILE_IDX_DECK;
      000F28 21r8Ar01              3349 	ld	hl, #(_cursor + 0x0006)
      000F2B 36 0A                 3350 	ld	(hl), #0x0a
      000F2D 18 2F                 3351 	jr	00151$
      000F2F                       3352 00137$:
                                   3353 ;src/main.c:625: cursor.height--;
      000F2F 3D                    3354 	dec	a
      000F30 02                    3355 	ld	(bc), a
      000F31 18 2B                 3356 	jr	00151$
      000F33                       3357 00148$:
                                   3358 ;src/main.c:627: && cursor.pile_idx != 0
      000F33 F8 07                 3359 	ldhl	sp,	#7
      000F35 3A                    3360 	ld	a, (hl-)
      000F36 B6                    3361 	or	a, (hl)
      000F37 28 12                 3362 	jr	Z, 00146$
      000F39 01r8Ar01              3363 	ld	bc, #_cursor+6
      000F3C 0A                    3364 	ld	a, (bc)
      000F3D B7                    3365 	or	a, a
      000F3E 28 0B                 3366 	jr	Z, 00146$
                                   3367 ;src/main.c:628: && cursor.pile_idx != PILE_IDX_DECK) {
      000F40 FE 0A                 3368 	cp	a, #0x0a
      000F42 28 07                 3369 	jr	Z, 00146$
                                   3370 ;src/main.c:629: cursor.pile_idx--;
      000F44 3D                    3371 	dec	a
      000F45 02                    3372 	ld	(bc), a
                                   3373 ;src/main.c:630: cursor_adjust_height();
      000F46 CDr1Cr04              3374 	call	_cursor_adjust_height
      000F49 18 13                 3375 	jr	00151$
      000F4B                       3376 00146$:
                                   3377 ;src/main.c:632: && cursor.pile_idx < 9) {
      000F4B F8 09                 3378 	ldhl	sp,	#9
      000F4D 3A                    3379 	ld	a, (hl-)
      000F4E B6                    3380 	or	a, (hl)
      000F4F 28 0D                 3381 	jr	Z, 00151$
      000F51 01r8Ar01              3382 	ld	bc, #_cursor+6
      000F54 0A                    3383 	ld	a, (bc)
      000F55 FE 09                 3384 	cp	a, #0x09
      000F57 30 05                 3385 	jr	NC, 00151$
                                   3386 ;src/main.c:633: cursor.pile_idx++;
      000F59 3C                    3387 	inc	a
      000F5A 02                    3388 	ld	(bc), a
                                   3389 ;src/main.c:634: cursor_adjust_height();
      000F5B CDr1Cr04              3390 	call	_cursor_adjust_height
      000F5E                       3391 00151$:
                                   3392 ;src/main.c:637: && ~flags & FLAG_PLAYING_ANIMATION) {
      000F5E F8 04                 3393 	ldhl	sp,	#4
      000F60 3A                    3394 	ld	a, (hl-)
      000F61 B6                    3395 	or	a, (hl)
      000F62 CArD5r10              3396 	jp	Z, 00175$
      000F65 FAr6Br01              3397 	ld	a, (#_flags)
      000F68 06 00                 3398 	ld	b, #0x00
      000F6A 2F                    3399 	cpl
      000F6B 4F                    3400 	ld	c, a
      000F6C 78                    3401 	ld	a, b
      000F6D 2F                    3402 	cpl
      000F6E CB 51                 3403 	bit	2, c
      000F70 CArD5r10              3404 	jp	Z,00175$
                                   3405 ;src/main.c:638: if (cursor.pile_idx == PILE_IDX_DECK && top_card_idx != 104u)
      000F73 21r8Ar01              3406 	ld	hl, #(_cursor + 0x0006)
      000F76 4E                    3407 	ld	c, (hl)
      000F77 79                    3408 	ld	a, c
      000F78 D6 0A                 3409 	sub	a, #0x0a
      000F7A C2r14r10              3410 	jp	NZ,00168$
      000F7D FAr6Ar01              3411 	ld	a, (#_top_card_idx)
      000F80 D6 68                 3412 	sub	a, #0x68
      000F82 CAr14r10              3413 	jp	Z,00168$
                                   3414 ;src/main.c:376: Pile *pile = IDX_PTR(piles, 0);
      000F85 01r38r01              3415 	ld	bc, #_piles
                                   3416 ;src/main.c:377: for (i = 0; i < 10u; i++) {
      000F88 1E 00                 3417 	ld	e, #0x00
      000F8A                       3418 00200$:
                                   3419 ;src/main.c:378: if (!pile->height)
      000F8A 21 04 00              3420 	ld	hl, #0x0004
      000F8D 09                    3421 	add	hl, bc
      000F8E 7E                    3422 	ld	a, (hl)
      000F8F B7                    3423 	or	a, a
      000F90 CArD5r10              3424 	jp	Z, 00175$
                                   3425 ;src/main.c:380: pile++;
      000F93 03                    3426 	inc	bc
      000F94 03                    3427 	inc	bc
      000F95 03                    3428 	inc	bc
      000F96 03                    3429 	inc	bc
      000F97 03                    3430 	inc	bc
                                   3431 ;src/main.c:377: for (i = 0; i < 10u; i++) {
      000F98 1C                    3432 	inc	e
      000F99 7B                    3433 	ld	a, e
      000F9A D6 0A                 3434 	sub	a, #0x0a
      000F9C 38 EC                 3435 	jr	C, 00200$
                                   3436 ;src/main.c:383: pile = IDX_PTR(piles, 0);
      000F9E F8 07                 3437 	ldhl	sp,	#7
      000FA0 36r38                 3438 	ld	(hl), #<(_piles)
      000FA2 23                    3439 	inc	hl
      000FA3 36s01                 3440 	ld	(hl), #>(_piles)
                                   3441 ;src/main.c:384: Card *deck_top = IDX_PTR(deck, top_card_idx);
      000FA5 21r6Ar01              3442 	ld	hl, #_top_card_idx
      000FA8 4E                    3443 	ld	c, (hl)
      000FA9 06 00                 3444 	ld	b, #0x00
      000FAB 69                    3445 	ld	l, c
      000FAC 60                    3446 	ld	h, b
      000FAD 29                    3447 	add	hl, hl
      000FAE 09                    3448 	add	hl, bc
      000FAF 01r00r00              3449 	ld	bc,#_deck
      000FB2 09                    3450 	add	hl,bc
      000FB3 4D                    3451 	ld	c, l
      000FB4 44                    3452 	ld	b, h
                                   3453 ;src/main.c:385: for (i = 0; i < 10u; i++) {
      000FB5 F8 09                 3454 	ldhl	sp,	#9
      000FB7 36 0A                 3455 	ld	(hl), #0x0a
      000FB9                       3456 00204$:
                                   3457 ;src/main.c:386: pile->top->next_card = deck_top;
                                   3458 ;c
      000FB9 F8 07                 3459 	ldhl	sp,#7
      000FBB 2A                    3460 	ld	a, (hl+)
      000FBC 5F                    3461 	ld	e, a
      000FBD 56                    3462 	ld	d, (hl)
      000FBE 21 02 00              3463 	ld	hl, #0x0002
      000FC1 19                    3464 	add	hl, de
      000FC2 E5                    3465 	push	hl
      000FC3 7D                    3466 	ld	a, l
      000FC4 F8 07                 3467 	ldhl	sp,	#7
      000FC6 77                    3468 	ld	(hl), a
      000FC7 E1                    3469 	pop	hl
      000FC8 7C                    3470 	ld	a, h
      000FC9 F8 06                 3471 	ldhl	sp,	#6
      000FCB 32                    3472 	ld	(hl-), a
      000FCC 2A                    3473 	ld	a, (hl+)
      000FCD 5F                    3474 	ld	e, a
      000FCE 56                    3475 	ld	d, (hl)
      000FCF 1A                    3476 	ld	a, (de)
      000FD0 6F                    3477 	ld	l, a
      000FD1 13                    3478 	inc	de
      000FD2 1A                    3479 	ld	a, (de)
      000FD3 67                    3480 	ld	h, a
      000FD4 79                    3481 	ld	a, c
      000FD5 22                    3482 	ld	(hl+), a
      000FD6 70                    3483 	ld	(hl), b
                                   3484 ;src/main.c:387: pile->top = deck_top;
      000FD7 F8 05                 3485 	ldhl	sp,	#5
      000FD9 2A                    3486 	ld	a, (hl+)
      000FDA 66                    3487 	ld	h, (hl)
      000FDB 6F                    3488 	ld	l, a
      000FDC 79                    3489 	ld	a, c
      000FDD 22                    3490 	ld	(hl+), a
      000FDE 70                    3491 	ld	(hl), b
                                   3492 ;src/main.c:388: pile->height++;
                                   3493 ;c
      000FDF F8 07                 3494 	ldhl	sp,#7
      000FE1 2A                    3495 	ld	a, (hl+)
      000FE2 5F                    3496 	ld	e, a
      000FE3 56                    3497 	ld	d, (hl)
      000FE4 21 04 00              3498 	ld	hl, #0x0004
      000FE7 19                    3499 	add	hl, de
      000FE8 5D                    3500 	ld	e, l
      000FE9 54                    3501 	ld	d, h
      000FEA 1A                    3502 	ld	a, (de)
      000FEB 3C                    3503 	inc	a
      000FEC 12                    3504 	ld	(de), a
                                   3505 ;src/main.c:389: deck_top++;
      000FED 03                    3506 	inc	bc
      000FEE 03                    3507 	inc	bc
      000FEF 03                    3508 	inc	bc
                                   3509 ;src/main.c:390: pile++;
                                   3510 ;c
      000FF0 F8 07                 3511 	ldhl	sp,#7
      000FF2 2A                    3512 	ld	a, (hl+)
      000FF3 5F                    3513 	ld	e, a
      000FF4 56                    3514 	ld	d, (hl)
      000FF5 21 05 00              3515 	ld	hl, #0x0005
      000FF8 19                    3516 	add	hl, de
      000FF9 E5                    3517 	push	hl
      000FFA 7D                    3518 	ld	a, l
      000FFB F8 09                 3519 	ldhl	sp,	#9
      000FFD 77                    3520 	ld	(hl), a
      000FFE E1                    3521 	pop	hl
      000FFF 7C                    3522 	ld	a, h
      001000 F8 08                 3523 	ldhl	sp,	#8
      001002 22                    3524 	ld	(hl+), a
                                   3525 ;src/main.c:385: for (i = 0; i < 10u; i++) {
      001003 35                    3526 	dec	(hl)
      001004 7E                    3527 	ld	a, (hl)
      001005 20 B2                 3528 	jr	NZ, 00204$
                                   3529 ;src/main.c:392: top_card_idx += 10u;
      001007 21r6Ar01              3530 	ld	hl, #_top_card_idx
      00100A 7E                    3531 	ld	a, (hl)
      00100B C6 0A                 3532 	add	a, #0x0a
      00100D 77                    3533 	ld	(hl), a
                                   3534 ;src/main.c:394: dynamic_metasprite_deal();
      00100E CDr3Cr05              3535 	call	_dynamic_metasprite_deal
                                   3536 ;src/main.c:639: deal();
      001011 C3rD5r10              3537 	jp	00175$
      001014                       3538 00168$:
                                   3539 ;src/main.c:317: Pile *pile = IDX_PTR(piles, cursor.pile_idx);
      001014 06 00                 3540 	ld	b, #0x00
      001016 69                    3541 	ld	l, c
      001017 60                    3542 	ld	h, b
      001018 29                    3543 	add	hl, hl
      001019 29                    3544 	add	hl, hl
      00101A 09                    3545 	add	hl, bc
      00101B 3Er38                 3546 	ld	a, #<(_piles)
      00101D 85                    3547 	add	a, l
      00101E 4F                    3548 	ld	c, a
      00101F 3Es01                 3549 	ld	a, #>(_piles)
      001021 8C                    3550 	adc	a, h
      001022 F8 05                 3551 	ldhl	sp,	#5
      001024 71                    3552 	ld	(hl), c
      001025 23                    3553 	inc	hl
                                   3554 ;src/main.c:318: Card *top = pile->base;
      001026 32                    3555 	ld	(hl-), a
      001027 2A                    3556 	ld	a, (hl+)
      001028 5F                    3557 	ld	e, a
      001029 56                    3558 	ld	d, (hl)
      00102A 1A                    3559 	ld	a, (de)
      00102B 23                    3560 	inc	hl
      00102C 23                    3561 	inc	hl
      00102D 22                    3562 	ld	(hl+), a
      00102E 13                    3563 	inc	de
      00102F 1A                    3564 	ld	a, (de)
      001030 77                    3565 	ld	(hl), a
                                   3566 ;src/main.c:319: for (i = 1; i < cursor.height; i++)
      001031 06 01                 3567 	ld	b, #0x01
      001033                       3568 00206$:
      001033 21r8Br01              3569 	ld	hl, #(_cursor + 0x0007)
      001036 4E                    3570 	ld	c, (hl)
      001037 78                    3571 	ld	a, b
      001038 91                    3572 	sub	a, c
      001039 30 0E                 3573 	jr	NC, 00160$
                                   3574 ;src/main.c:320: top = top->next_card;
      00103B F8 08                 3575 	ldhl	sp,#8
      00103D 2A                    3576 	ld	a, (hl+)
      00103E 5F                    3577 	ld	e, a
      00103F 56                    3578 	ld	d, (hl)
      001040 1A                    3579 	ld	a, (de)
      001041 2B                    3580 	dec	hl
      001042 22                    3581 	ld	(hl+), a
      001043 13                    3582 	inc	de
      001044 1A                    3583 	ld	a, (de)
      001045 77                    3584 	ld	(hl), a
                                   3585 ;src/main.c:319: for (i = 1; i < cursor.height; i++)
      001046 04                    3586 	inc	b
      001047 18 EA                 3587 	jr	00206$
      001049                       3588 00160$:
                                   3589 ;src/main.c:321: Card *stack = cursor.height ? top->next_card : top;
      001049 79                    3590 	ld	a, c
      00104A B7                    3591 	or	a, a
      00104B 28 0C                 3592 	jr	Z, 00210$
      00104D F8 08                 3593 	ldhl	sp,#8
      00104F 2A                    3594 	ld	a, (hl+)
      001050 5F                    3595 	ld	e, a
      001051 56                    3596 	ld	d, (hl)
      001052 1A                    3597 	ld	a, (de)
      001053 4F                    3598 	ld	c, a
      001054 13                    3599 	inc	de
      001055 1A                    3600 	ld	a, (de)
      001056 47                    3601 	ld	b, a
      001057 18 05                 3602 	jr	00211$
      001059                       3603 00210$:
      001059 F8 08                 3604 	ldhl	sp,#8
      00105B 2A                    3605 	ld	a, (hl+)
      00105C 4F                    3606 	ld	c, a
      00105D 46                    3607 	ld	b, (hl)
      00105E                       3608 00211$:
                                   3609 ;src/main.c:322: if (!(VISIBLE(stack->data) && is_stack_coherent(stack)))
      00105E 59                    3610 	ld	e, c
      00105F 50                    3611 	ld	d, b
      001060 13                    3612 	inc	de
      001061 13                    3613 	inc	de
      001062 1A                    3614 	ld	a, (de)
      001063 CB 77                 3615 	bit	6, a
      001065 28 6E                 3616 	jr	Z, 00175$
      001067 C5                    3617 	push	bc
      001068 C5                    3618 	push	bc
      001069 CDr45r04              3619 	call	_is_stack_coherent
      00106C E8 02                 3620 	add	sp, #2
      00106E 7B                    3621 	ld	a, e
      00106F C1                    3622 	pop	bc
      001070 B7                    3623 	or	a, a
      001071 28 62                 3624 	jr	Z, 00175$
                                   3625 ;src/main.c:325: cursor.held_card = stack;
      001073 21r84r01              3626 	ld	hl, #_cursor
      001076 79                    3627 	ld	a, c
      001077 22                    3628 	ld	(hl+), a
      001078 70                    3629 	ld	(hl), b
                                   3630 ;src/main.c:326: cursor.hand_pile_idx = cursor.pile_idx;
      001079 FAr8Ar01              3631 	ld	a, (#(_cursor + 0x0006) + 0)
      00107C EAr89r01              3632 	ld	(#(_cursor + 0x0005)),a
                                   3633 ;src/main.c:327: cursor.held_stack_size = pile->height - cursor.height;
                                   3634 ;c
      00107F F8 05                 3635 	ldhl	sp,#5
      001081 2A                    3636 	ld	a, (hl+)
      001082 5F                    3637 	ld	e, a
      001083 56                    3638 	ld	d, (hl)
      001084 21 04 00              3639 	ld	hl, #0x0004
      001087 19                    3640 	add	hl, de
      001088 4D                    3641 	ld	c, l
      001089 44                    3642 	ld	b, h
      00108A 0A                    3643 	ld	a, (bc)
      00108B 21r8Br01              3644 	ld	hl, #(_cursor + 0x0007)
      00108E 6E                    3645 	ld	l, (hl)
      00108F 95                    3646 	sub	a, l
      001090 EAr88r01              3647 	ld	(#(_cursor + 0x0004)),a
                                   3648 ;src/main.c:328: pile->height = cursor.height;
      001093 FAr8Br01              3649 	ld	a, (#(_cursor + 0x0007) + 0)
      001096 02                    3650 	ld	(bc), a
                                   3651 ;src/main.c:329: if (cursor.height) {
      001097 FAr8Br01              3652 	ld	a, (#(_cursor + 0x0007) + 0)
      00109A F8 07                 3653 	ldhl	sp,	#7
      00109C 77                    3654 	ld	(hl), a
                                   3655 ;src/main.c:330: pile->top = top;
      00109D F8 05                 3656 	ldhl	sp,#5
      00109F 2A                    3657 	ld	a, (hl+)
      0010A0 4F                    3658 	ld	c, a
      0010A1 46                    3659 	ld	b, (hl)
      0010A2 03                    3660 	inc	bc
      0010A3 03                    3661 	inc	bc
                                   3662 ;src/main.c:332: cursor.card_to_show = top;
                                   3663 ;src/main.c:329: if (cursor.height) {
      0010A4 23                    3664 	inc	hl
      0010A5 7E                    3665 	ld	a, (hl)
      0010A6 B7                    3666 	or	a, a
      0010A7 28 1A                 3667 	jr	Z, 00165$
                                   3668 ;src/main.c:330: pile->top = top;
      0010A9 23                    3669 	inc	hl
      0010AA 2A                    3670 	ld	a, (hl+)
      0010AB 02                    3671 	ld	(bc), a
      0010AC 03                    3672 	inc	bc
      0010AD 7E                    3673 	ld	a, (hl)
      0010AE 02                    3674 	ld	(bc), a
                                   3675 ;src/main.c:331: top->next_card = NULL;
      0010AF 2B                    3676 	dec	hl
      0010B0 2A                    3677 	ld	a, (hl+)
      0010B1 66                    3678 	ld	h, (hl)
      0010B2 6F                    3679 	ld	l, a
      0010B3 AF                    3680 	xor	a, a
      0010B4 22                    3681 	ld	(hl+), a
      0010B5 77                    3682 	ld	(hl), a
                                   3683 ;src/main.c:332: cursor.card_to_show = top;
      0010B6 11r86r01              3684 	ld	de, #(_cursor + 0x0002)
      0010B9 F8 08                 3685 	ldhl	sp,	#8
      0010BB 7E                    3686 	ld	a, (hl)
      0010BC 12                    3687 	ld	(de), a
      0010BD 13                    3688 	inc	de
      0010BE 23                    3689 	inc	hl
      0010BF 7E                    3690 	ld	a, (hl)
      0010C0 12                    3691 	ld	(de), a
      0010C1 18 12                 3692 	jr	00175$
      0010C3                       3693 00165$:
                                   3694 ;src/main.c:334: pile->base = NULL;
      0010C3 F8 05                 3695 	ldhl	sp,	#5
      0010C5 2A                    3696 	ld	a, (hl+)
      0010C6 66                    3697 	ld	h, (hl)
      0010C7 6F                    3698 	ld	l, a
      0010C8 AF                    3699 	xor	a, a
      0010C9 22                    3700 	ld	(hl+), a
      0010CA 77                    3701 	ld	(hl), a
                                   3702 ;src/main.c:335: pile->top = NULL;
      0010CB AF                    3703 	xor	a, a
      0010CC 02                    3704 	ld	(bc), a
      0010CD 03                    3705 	inc	bc
      0010CE 02                    3706 	ld	(bc), a
                                   3707 ;src/main.c:336: cursor.card_to_show = NULL;
      0010CF 21r86r01              3708 	ld	hl, #(_cursor + 0x0002)
      0010D2 AF                    3709 	xor	a, a
      0010D3 22                    3710 	ld	(hl+), a
      0010D4 77                    3711 	ld	(hl), a
                                   3712 ;src/main.c:645: }
      0010D5                       3713 00175$:
                                   3714 ;src/main.c:646: prev_input = input;
      0010D5 F8 02                 3715 	ldhl	sp,	#2
      0010D7 7E                    3716 	ld	a, (hl)
      0010D8 EAr95r01              3717 	ld	(#_main_prev_input_327681_305),a
                                   3718 ;src/main.c:767: switch (flags & FLAG_GAME_STATE) {
      0010DB FAr6Br01              3719 	ld	a, (#_flags)
      0010DE E6 18                 3720 	and	a, #0x18
      0010E0 47                    3721 	ld	b, a
      0010E1 0E 00                 3722 	ld	c, #0x00
      0010E3 78                    3723 	ld	a, b
      0010E4 D6 10                 3724 	sub	a, #0x10
      0010E6 B1                    3725 	or	a, c
      0010E7 C2rCEr11              3726 	jp	NZ,00102$
                                   3727 ;src/main.c:651: cursor.anim_ctr++;
      0010EA 21r8Cr01              3728 	ld	hl, #_cursor + 8
      0010ED 56                    3729 	ld	d, (hl)
      0010EE 14                    3730 	inc	d
      0010EF 72                    3731 	ld	(hl), d
                                   3732 ;src/main.c:652: cursor.anim_ctr &= (1u << (CURSOR_PERIOD + 1u)) - 1u;
      0010F0 CB BA                 3733 	res	7, d
      0010F2 72                    3734 	ld	(hl), d
                                   3735 ;src/main.c:653: UINT8 prev_anim_frame = cursor.anim_frame;
      0010F3 01r8Dr01              3736 	ld	bc, #_cursor + 9
      0010F6 0A                    3737 	ld	a, (bc)
      0010F7 5F                    3738 	ld	e, a
                                   3739 ;src/main.c:654: cursor.anim_frame = cursor.anim_ctr >> CURSOR_PERIOD;
      0010F8 7A                    3740 	ld	a, d
      0010F9 07                    3741 	rlca
      0010FA 07                    3742 	rlca
      0010FB E6 03                 3743 	and	a, #0x03
      0010FD 02                    3744 	ld	(bc), a
                                   3745 ;src/main.c:655: if (cursor.anim_frame != prev_anim_frame)
      0010FE 93                    3746 	sub	a, e
      0010FF 28 07                 3747 	jr	Z, 00178$
                                   3748 ;src/main.c:656: flags |= FLAG_REDRAW_CURSOR;
      001101 21r6Br01              3749 	ld	hl, #_flags
      001104 7E                    3750 	ld	a, (hl)
      001105 F6 01                 3751 	or	a, #0x01
      001107 77                    3752 	ld	(hl), a
      001108                       3753 00178$:
                                   3754 ;src/main.c:658: if (flags & FLAG_REDRAW_CURSOR) {
      001108 FAr6Br01              3755 	ld	a, (#_flags)
      00110B 0F                    3756 	rrca
      00110C 30 62                 3757 	jr	NC, 00185$
                                   3758 ;src/main.c:659: flags &= ~FLAG_REDRAW_CURSOR;
      00110E 21r6Br01              3759 	ld	hl, #_flags
      001111 7E                    3760 	ld	a, (hl)
      001112 E6 FE                 3761 	and	a, #0xfe
      001114 77                    3762 	ld	(hl), a
                                   3763 ;src/main.c:660: if (cursor.pile_idx == PILE_IDX_DECK)
      001115 21r8Ar01              3764 	ld	hl, #_cursor + 6
      001118 6E                    3765 	ld	l, (hl)
                                   3766 ;src/main.c:653: UINT8 prev_anim_frame = cursor.anim_frame;
      001119 0A                    3767 	ld	a, (bc)
                                   3768 ;src/main.c:661: move_metasprite(cursor_metasprites[cursor.anim_frame],
      00111A 16 00                 3769 	ld	d, #0x00
      00111C 5F                    3770 	ld	e, a
      00111D CB 23                 3771 	sla	e
      00111F CB 12                 3772 	rl	d
                                   3773 ;src/main.c:660: if (cursor.pile_idx == PILE_IDX_DECK)
      001121 7D                    3774 	ld	a, l
      001122 D6 0A                 3775 	sub	a, #0x0a
      001124 20 1F                 3776 	jr	NZ, 00182$
                                   3777 ;src/main.c:661: move_metasprite(cursor_metasprites[cursor.anim_frame],
      001126 21r00r00              3778 	ld	hl, #_cursor_metasprites
      001129 19                    3779 	add	hl, de
      00112A 2A                    3780 	ld	a, (hl+)
      00112B 4E                    3781 	ld	c, (hl)
                                   3782 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      00112C 21r00r00              3783 	ld	hl, #___current_metasprite
      00112F 22                    3784 	ld	(hl+), a
      001130 71                    3785 	ld	(hl), c
                                   3786 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      001131 21r00r00              3787 	ld	hl, #___current_base_tile
      001134 36 01                 3788 	ld	(hl), #0x01
                                   3789 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      001136 AF                    3790 	xor	a, a
      001137 F5                    3791 	push	af
      001138 33                    3792 	inc	sp
      001139 AF                    3793 	xor	a, a
      00113A 57                    3794 	ld	d,a
      00113B 1E 22                 3795 	ld	e,#0x22
      00113D D5                    3796 	push	de
      00113E CDr00r00              3797 	call	___move_metasprite
      001141 E8 03                 3798 	add	sp, #3
                                   3799 ;src/main.c:666: );
      001143 18 2B                 3800 	jr	00185$
      001145                       3801 00182$:
                                   3802 ;src/main.c:672: 3u * 8u  + (cursor.height << 3u)
      001145 01r8Br01              3803 	ld	bc, #_cursor + 7
      001148 0A                    3804 	ld	a, (bc)
      001149 87                    3805 	add	a, a
      00114A 87                    3806 	add	a, a
      00114B 87                    3807 	add	a, a
      00114C C6 18                 3808 	add	a, #0x18
      00114E 47                    3809 	ld	b, a
                                   3810 ;src/main.c:671: cursor.pile_idx << 4u,
      00114F 7D                    3811 	ld	a, l
      001150 CB 37                 3812 	swap	a
      001152 E6 F0                 3813 	and	a, #0xf0
      001154 4F                    3814 	ld	c, a
                                   3815 ;src/main.c:668: move_metasprite(cursor_metasprites[cursor.anim_frame],
      001155 21r00r00              3816 	ld	hl, #_cursor_metasprites
      001158 19                    3817 	add	hl, de
      001159 2A                    3818 	ld	a, (hl+)
                                   3819 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      00115A 5E                    3820 	ld	e, (hl)
      00115B 21r00r00              3821 	ld	hl, #___current_metasprite
      00115E 22                    3822 	ld	(hl+), a
      00115F 73                    3823 	ld	(hl), e
                                   3824 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      001160 21r00r00              3825 	ld	hl, #___current_base_tile
      001163 36 01                 3826 	ld	(hl), #0x01
                                   3827 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      001165 C5                    3828 	push	bc
      001166 33                    3829 	inc	sp
      001167 51                    3830 	ld	d, c
      001168 1E 22                 3831 	ld	e,#0x22
      00116A D5                    3832 	push	de
      00116B CDr00r00              3833 	call	___move_metasprite
      00116E E8 03                 3834 	add	sp, #3
                                   3835 ;src/main.c:673: );
      001170                       3836 00185$:
                                   3837 ;src/main.c:675: if (flags & FLAG_REDRAW_HAND) {
      001170 FAr6Br01              3838 	ld	a, (#_flags)
      001173 CB 4F                 3839 	bit	1, a
      001175 28 57                 3840 	jr	Z, 00102$
                                   3841 ;src/main.c:676: flags &= ~FLAG_REDRAW_HAND;
      001177 21r6Br01              3842 	ld	hl, #_flags
      00117A 7E                    3843 	ld	a, (hl)
      00117B E6 FD                 3844 	and	a, #0xfd
      00117D 77                    3845 	ld	(hl), a
                                   3846 ;src/main.c:677: if (cursor.held_card) {
      00117E 21r84r01              3847 	ld	hl, #_cursor
      001181 2A                    3848 	ld	a, (hl+)
      001182 B6                    3849 	or	a,(hl)
      001183 28 41                 3850 	jr	Z, 00188$
                                   3851 ;src/main.c:678: UINT8 height = piles[cursor.hand_pile_idx].height;
      001185 21r89r01              3852 	ld	hl, #_cursor + 5
      001188 4E                    3853 	ld	c, (hl)
      001189 06 00                 3854 	ld	b, #0x00
      00118B 69                    3855 	ld	l, c
      00118C 60                    3856 	ld	h, b
      00118D 29                    3857 	add	hl, hl
      00118E 29                    3858 	add	hl, hl
      00118F 09                    3859 	add	hl, bc
      001190 11r38r01              3860 	ld	de, #_piles
      001193 19                    3861 	add	hl, de
      001194 23                    3862 	inc	hl
      001195 23                    3863 	inc	hl
      001196 23                    3864 	inc	hl
      001197 23                    3865 	inc	hl
      001198 46                    3866 	ld	b, (hl)
                                   3867 ;src/main.c:683: 2u * 8u + ((height + !height) << 3u)
      001199 78                    3868 	ld	a, b
      00119A D6 01                 3869 	sub	a,#0x01
      00119C 3E 00                 3870 	ld	a, #0x00
      00119E 17                    3871 	rla
      00119F 80                    3872 	add	a, b
      0011A0 87                    3873 	add	a, a
      0011A1 87                    3874 	add	a, a
      0011A2 87                    3875 	add	a, a
      0011A3 C6 10                 3876 	add	a, #0x10
      0011A5 57                    3877 	ld	d, a
                                   3878 ;src/main.c:682: cursor.hand_pile_idx << 4u,
      0011A6 79                    3879 	ld	a, c
      0011A7 CB 37                 3880 	swap	a
      0011A9 E6 F0                 3881 	and	a, #0xf0
      0011AB 47                    3882 	ld	b, a
                                   3883 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      0011AC 21r00r00              3884 	ld	hl, #___current_metasprite
      0011AF 36r00                 3885 	ld	(hl), #<(_metasprite_sequential_2x3)
      0011B1 23                    3886 	inc	hl
      0011B2 36s00                 3887 	ld	(hl), #>(_metasprite_sequential_2x3)
                                   3888 ;/home/wojtek/gbdk/include/gb/metasprites.h:80: __current_base_tile = base_tile;
      0011B4 21r00r00              3889 	ld	hl, #___current_base_tile
      0011B7 36 03                 3890 	ld	(hl), #0x03
                                   3891 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      0011B9 58                    3892 	ld	e, b
      0011BA D5                    3893 	push	de
      0011BB 3E 1C                 3894 	ld	a, #0x1c
      0011BD F5                    3895 	push	af
      0011BE 33                    3896 	inc	sp
      0011BF CDr00r00              3897 	call	___move_metasprite
      0011C2 E8 03                 3898 	add	sp, #3
                                   3899 ;src/main.c:684: );
      0011C4 18 08                 3900 	jr	00102$
      0011C6                       3901 00188$:
                                   3902 ;src/main.c:686: metasprite_2x3_hide(SPRITE_HAND);
      0011C6 3E 1C                 3903 	ld	a, #0x1c
      0011C8 F5                    3904 	push	af
      0011C9 33                    3905 	inc	sp
      0011CA CDr00r00              3906 	call	_metasprite_2x3_hide
      0011CD 33                    3907 	inc	sp
                                   3908 ;src/main.c:771: }
      0011CE                       3909 00102$:
                                   3910 ;src/main.c:693: if (dynamic_metasprite.elapsed_frames >= dynamic_metasprite.target_frames)
      0011CE 21r78r01              3911 	ld	hl, #(_dynamic_metasprite + 0x0009)
      0011D1 4E                    3912 	ld	c, (hl)
      0011D2 21r77r01              3913 	ld	hl, #(_dynamic_metasprite + 0x0008)
      0011D5 46                    3914 	ld	b, (hl)
      0011D6 58                    3915 	ld	e, b
      0011D7 79                    3916 	ld	a,c
      0011D8 57                    3917 	ld	d,a
      0011D9 90                    3918 	sub	a, b
      0011DA CB 7B                 3919 	bit	7, e
      0011DC 28 07                 3920 	jr	Z, 00480$
      0011DE CB 7A                 3921 	bit	7, d
      0011E0 20 08                 3922 	jr	NZ, 00481$
      0011E2 BF                    3923 	cp	a, a
      0011E3 18 05                 3924 	jr	00481$
      0011E5                       3925 00480$:
      0011E5 CB 7A                 3926 	bit	7, d
      0011E7 28 01                 3927 	jr	Z, 00481$
      0011E9 37                    3928 	scf
      0011EA                       3929 00481$:
      0011EA D2r93r12              3930 	jp	NC, 00199$
                                   3931 ;src/main.c:696: dynamic_metasprite.elapsed_frames++;
      0011ED 0C                    3932 	inc	c
      0011EE 21r78r01              3933 	ld	hl, #(_dynamic_metasprite + 0x0009)
      0011F1 71                    3934 	ld	(hl), c
                                   3935 ;src/main.c:701: dynamic_metasprite.src[1] + (dynamic_metasprite.dist[1] * dynamic_metasprite.elapsed_frames / dynamic_metasprite.target_frames)
      0011F2 FAr71r01              3936 	ld	a, (#(_dynamic_metasprite + 0x0002) + 0)
      0011F5 F8 05                 3937 	ldhl	sp,	#5
      0011F7 77                    3938 	ld	(hl), a
      0011F8 21r75r01              3939 	ld	hl, #(_dynamic_metasprite + 0x0006)
      0011FB 2A                    3940 	ld	a, (hl+)
      0011FC 66                    3941 	ld	h, (hl)
      0011FD 6F                    3942 	ld	l, a
      0011FE 79                    3943 	ld	a, c
      0011FF 17                    3944 	rla
      001200 9F                    3945 	sbc	a, a
      001201 47                    3946 	ld	b, a
      001202 C5                    3947 	push	bc
      001203 C5                    3948 	push	bc
      001204 E5                    3949 	push	hl
                                   3950 ;src/main.c:693: if (dynamic_metasprite.elapsed_frames >= dynamic_metasprite.target_frames)
      001205 CDr00r00              3951 	call	__mulint
      001208 E8 04                 3952 	add	sp, #4
      00120A E5                    3953 	push	hl
      00120B F8 0C                 3954 	ldhl	sp,	#12
      00120D 73                    3955 	ld	(hl), e
      00120E F8 0D                 3956 	ldhl	sp,	#13
      001210 72                    3957 	ld	(hl), d
      001211 E1                    3958 	pop	hl
      001212 C1                    3959 	pop	bc
      001213 FAr77r01              3960 	ld	a, (#(_dynamic_metasprite + 0x0008) + 0)
                                   3961 ;src/main.c:701: dynamic_metasprite.src[1] + (dynamic_metasprite.dist[1] * dynamic_metasprite.elapsed_frames / dynamic_metasprite.target_frames)
      001216 F8 06                 3962 	ldhl	sp,	#6
      001218 77                    3963 	ld	(hl), a
      001219 17                    3964 	rla
      00121A 9F                    3965 	sbc	a, a
      00121B 23                    3966 	inc	hl
      00121C 77                    3967 	ld	(hl), a
      00121D C5                    3968 	push	bc
      00121E 2B                    3969 	dec	hl
      00121F 2A                    3970 	ld	a, (hl+)
      001220 66                    3971 	ld	h, (hl)
      001221 6F                    3972 	ld	l, a
      001222 E5                    3973 	push	hl
      001223 F8 0C                 3974 	ldhl	sp,	#12
      001225 2A                    3975 	ld	a, (hl+)
      001226 66                    3976 	ld	h, (hl)
      001227 6F                    3977 	ld	l, a
      001228 E5                    3978 	push	hl
      001229 CDr00r00              3979 	call	__divsint
      00122C E8 04                 3980 	add	sp, #4
      00122E C1                    3981 	pop	bc
      00122F 7B                    3982 	ld	a, e
      001230 F8 05                 3983 	ldhl	sp,	#5
      001232 86                    3984 	add	a, (hl)
      001233 F8 08                 3985 	ldhl	sp,	#8
      001235 77                    3986 	ld	(hl), a
                                   3987 ;src/main.c:700: dynamic_metasprite.src[0] + (dynamic_metasprite.dist[0] * dynamic_metasprite.elapsed_frames / dynamic_metasprite.target_frames),
      001236 FAr6Fr01              3988 	ld	a, (#_dynamic_metasprite + 0)
      001239 F8 09                 3989 	ldhl	sp,	#9
      00123B 77                    3990 	ld	(hl), a
      00123C 21r73r01              3991 	ld	hl, #(_dynamic_metasprite + 0x0004)
      00123F 2A                    3992 	ld	a, (hl+)
      001240 66                    3993 	ld	h, (hl)
      001241 6F                    3994 	ld	l, a
      001242 C5                    3995 	push	bc
      001243 E5                    3996 	push	hl
      001244 CDr00r00              3997 	call	__mulint
      001247 E8 04                 3998 	add	sp, #4
      001249 F8 06                 3999 	ldhl	sp,	#6
      00124B 2A                    4000 	ld	a, (hl+)
      00124C 66                    4001 	ld	h, (hl)
      00124D 6F                    4002 	ld	l, a
      00124E E5                    4003 	push	hl
      00124F D5                    4004 	push	de
      001250 CDr00r00              4005 	call	__divsint
      001253 E8 04                 4006 	add	sp, #4
      001255 7B                    4007 	ld	a, e
      001256 F8 09                 4008 	ldhl	sp,	#9
      001258 86                    4009 	add	a, (hl)
      001259 47                    4010 	ld	b, a
                                   4011 ;src/main.c:698: dynamic_metasprite.metasprite_offset,
      00125A FAr7Br01              4012 	ld	a, (#(_dynamic_metasprite + 0x000c) + 0)
      00125D EAr00r00              4013 	ld	(#___current_base_tile),a
                                   4014 ;src/main.c:697: move_metasprite(dynamic_metasprite.metasprite,
      001260 21r79r01              4015 	ld	hl, #(_dynamic_metasprite + 0x000a)
      001263 2A                    4016 	ld	a, (hl+)
      001264 4F                    4017 	ld	c, a
      001265 7E                    4018 	ld	a, (hl)
                                   4019 ;/home/wojtek/gbdk/include/gb/metasprites.h:79: __current_metasprite = metasprite; 
      001266 21r00r00              4020 	ld	hl, #___current_metasprite
      001269 71                    4021 	ld	(hl), c
      00126A 23                    4022 	inc	hl
      00126B 77                    4023 	ld	(hl), a
                                   4024 ;/home/wojtek/gbdk/include/gb/metasprites.h:81: return __move_metasprite(base_sprite, x, y); 
      00126C F8 08                 4025 	ldhl	sp,	#8
      00126E 7E                    4026 	ld	a, (hl)
      00126F F5                    4027 	push	af
      001270 33                    4028 	inc	sp
      001271 C5                    4029 	push	bc
      001272 33                    4030 	inc	sp
      001273 AF                    4031 	xor	a, a
      001274 F5                    4032 	push	af
      001275 33                    4033 	inc	sp
      001276 CDr00r00              4034 	call	___move_metasprite
      001279 E8 03                 4035 	add	sp, #3
                                   4036 ;src/main.c:703: if (dynamic_metasprite.elapsed_frames == dynamic_metasprite.target_frames
      00127B FAr78r01              4037 	ld	a, (#(_dynamic_metasprite + 0x0009) + 0)
      00127E 21r77r01              4038 	ld	hl, #(_dynamic_metasprite + 0x0008)
      001281 4E                    4039 	ld	c, (hl)
      001282 91                    4040 	sub	a, c
      001283 20 0E                 4041 	jr	NZ, 00199$
                                   4042 ;src/main.c:704: && dynamic_metasprite.callback)
      001285 21r82r01              4043 	ld	hl, #(_dynamic_metasprite + 0x0013)
      001288 2A                    4044 	ld	a, (hl+)
      001289 4F                    4045 	ld	c, a
      00128A 66                    4046 	ld	h, (hl)
      00128B 7C                    4047 	ld	a, h
      00128C B1                    4048 	or	a, c
      00128D 28 04                 4049 	jr	Z, 00199$
                                   4050 ;src/main.c:705: dynamic_metasprite.callback();
      00128F 69                    4051 	ld	l, c
      001290 CDr00r00              4052 	call	___sdcc_call_hl
                                   4053 ;src/main.c:773: dynamic_metasprite_process();
      001293                       4054 00199$:
                                   4055 ;src/main.c:775: wait_vbl_done();
      001293 CDr00r00              4056 	call	_wait_vbl_done
      001296 C3r52r0D              4057 	jp	00104$
                                   4058 ;src/main.c:777: }
      001299 E8 0A                 4059 	add	sp, #10
      00129B C9                    4060 	ret
                                   4061 	.area _CODE
                                   4062 	.area _CABS (ABS)
